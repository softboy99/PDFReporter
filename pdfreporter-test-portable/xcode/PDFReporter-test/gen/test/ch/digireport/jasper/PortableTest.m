//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-test-portable/src/test/ch/digireport/jasper/PortableTest.java
//
//  Created by kendra on 10/1/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/reflect/Method.h"
#include "test/ch/digireport/jasper/ExporterTest.h"
#include "test/ch/digireport/jasper/PortableTest.h"
#include "test/ch/digireport/jasper/providers/JavaTestProvider.h"
#include "test/ch/digireport/jasper/providers/TestProviderInterface.h"

@implementation TestChDigireportJasperPortableTest

+ (void)mainWithNSStringArray:(IOSObjectArray *)arg {
  [((TestChDigireportJasperPortableTest *) [[TestChDigireportJasperPortableTest alloc] init]) testWithTestChDigireportJasperProvidersTestProviderInterface:[[TestChDigireportJasperProvidersJavaTestProvider alloc] init]];
}

- (void)testWithTestChDigireportJasperProvidersTestProviderInterface:(id<TestChDigireportJasperProvidersTestProviderInterface>)testProvider {
  TestChDigireportJasperExporterTest *exporterTest = [[TestChDigireportJasperExporterTest alloc] initWithBOOL:NO withTestChDigireportJasperProvidersTestProviderInterface:testProvider];
  IOSObjectArray *methods = [[IOSClass classWithClass:[TestChDigireportJasperExporterTest class]] getMethods];
  BOOL failure = NO;
  [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:@"Testign started..."];
  {
    IOSObjectArray *a__ = methods;
    int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      JavaLangReflectMethod *method = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
      if ([((NSString *) nil_chk([((JavaLangReflectMethod *) nil_chk(method)) getName])) hasPrefix:@"export"]) {
        @try {
          [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printWithNSString:[NSString stringWithFormat:@"Test - %@", [((JavaLangReflectMethod *) nil_chk(method)) getName]]];
          long long int time = [JavaLangSystem currentTimeMillis];
          (void) [((JavaLangReflectMethod *) nil_chk(method)) invokeWithId:exporterTest withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
          [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:[NSString stringWithFormat:@" [Done] in %qims", ([JavaLangSystem currentTimeMillis] - time)]];
        }
        @catch (JavaLangException *e) {
          [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:@" [Failure]"];
          failure = YES;
        }
        @try {
          [JavaLangThread sleepWithLongInt:100];
        }
        @catch (JavaLangInterruptedException *e) {
        }
      }
    }
  }
  if (!failure) {
    [((JavaIoPrintStream *) nil_chk([JavaLangSystem out])) printlnWithNSString:@"\nTest finished successfully."];
  }
  else {
    [((JavaIoPrintStream *) nil_chk([JavaLangSystem err])) printlnWithNSString:@"\nTest finished with errors."];
  }
}

- (id)init {
  return [super init];
}

@end
