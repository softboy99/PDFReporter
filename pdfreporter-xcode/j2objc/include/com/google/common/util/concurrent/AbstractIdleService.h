//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/krasnocka/Downloads/j2objc-master/guava/sources/com/google/common/util/concurrent/AbstractIdleService.java
//

#include "J2ObjC_header.h"

#if !ComGoogleCommonUtilConcurrentAbstractIdleService_RESTRICT
#define ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAbstractIdleService_RESTRICT
#if !defined (_ComGoogleCommonUtilConcurrentAbstractIdleService_) && (ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractIdleService_

@class ComGoogleCommonUtilConcurrentService_StateEnum;
@class JavaLangThrowable;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol ComGoogleCommonUtilConcurrentService_Listener;
@protocol JavaUtilConcurrentExecutor;

#define ComGoogleCommonUtilConcurrentService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentService_INCLUDE 1
#include "com/google/common/util/concurrent/Service.h"


@interface ComGoogleCommonUtilConcurrentAbstractIdleService : NSObject < ComGoogleCommonUtilConcurrentService > {
}

- (instancetype)init;

- (void)startUp;

- (void)shutDown;

- (id<JavaUtilConcurrentExecutor>)executor;

- (NSString *)description;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)start;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)startAndWait;

- (jboolean)isRunning;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)state;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)stop;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)stopAndWait;

- (void)addListenerWithComGoogleCommonUtilConcurrentService_Listener:(id<ComGoogleCommonUtilConcurrentService_Listener>)listener
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (JavaLangThrowable *)failureCause;

- (NSString *)serviceName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractIdleService)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END
#endif

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractIdleService)
#if !defined (_ComGoogleCommonUtilConcurrentAbstractIdleService_$1_) && (ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractIdleService_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractIdleService_$1_

@class ComGoogleCommonUtilConcurrentAbstractIdleService;

#define ComGoogleCommonUtilConcurrentAbstractService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractService_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractService.h"


@interface ComGoogleCommonUtilConcurrentAbstractIdleService_$1 : ComGoogleCommonUtilConcurrentAbstractService {
}

- (void)doStart;

- (void)doStop;

- (instancetype)initWithComGoogleCommonUtilConcurrentAbstractIdleService:(ComGoogleCommonUtilConcurrentAbstractIdleService *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractIdleService_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END
#endif

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractIdleService_$1)
#if !defined (_ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1_) && (ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1_

@class ComGoogleCommonUtilConcurrentAbstractIdleService_$1;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentAbstractIdleService_$1:(ComGoogleCommonUtilConcurrentAbstractIdleService_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END
#endif

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$1)
#if !defined (_ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2_) && (ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2_

@class ComGoogleCommonUtilConcurrentAbstractIdleService_$1;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentAbstractIdleService_$1:(ComGoogleCommonUtilConcurrentAbstractIdleService_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END
#endif

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractIdleService_$1_$2)
#if !defined (_ComGoogleCommonUtilConcurrentAbstractIdleService_$2_) && (ComGoogleCommonUtilConcurrentAbstractIdleService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractIdleService_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractIdleService_$2_

@class ComGoogleCommonUtilConcurrentAbstractIdleService;
@class ComGoogleCommonUtilConcurrentService_StateEnum;
@protocol JavaLangRunnable;

#define JavaUtilConcurrentExecutor_RESTRICT 1
#define JavaUtilConcurrentExecutor_INCLUDE 1
#include "java/util/concurrent/Executor.h"


@interface ComGoogleCommonUtilConcurrentAbstractIdleService_$2 : NSObject < JavaUtilConcurrentExecutor > {
}

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;

- (instancetype)initWithComGoogleCommonUtilConcurrentAbstractIdleService:(ComGoogleCommonUtilConcurrentAbstractIdleService *)outer$
                      withComGoogleCommonUtilConcurrentService_StateEnum:(ComGoogleCommonUtilConcurrentService_StateEnum *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractIdleService_$2)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END
#endif

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractIdleService_$2)
