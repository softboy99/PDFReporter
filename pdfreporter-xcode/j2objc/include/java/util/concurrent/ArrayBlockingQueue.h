//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/ArrayBlockingQueue.java
//

#ifndef _JavaUtilConcurrentArrayBlockingQueue_H_
#define _JavaUtilConcurrentArrayBlockingQueue_H_

@class IOSObjectArray;
@class JavaUtilConcurrentArrayBlockingQueue_Itr;
@class JavaUtilConcurrentArrayBlockingQueue_Itrs;
@class JavaUtilConcurrentArrayBlockingQueue_Itrs_Node;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentLocksCondition;

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingQueue.h"

#define JavaUtilConcurrentArrayBlockingQueue_serialVersionUID -817911632652898426LL

@interface JavaUtilConcurrentArrayBlockingQueue : JavaUtilAbstractQueue < JavaUtilConcurrentBlockingQueue, JavaIoSerializable > {
 @public
  IOSObjectArray *items_;
  jint takeIndex_;
  jint putIndex_;
  jint count_;
  JavaUtilConcurrentLocksReentrantLock *lock_;
  JavaUtilConcurrentArrayBlockingQueue_Itrs *itrs_;
}

- (jint)incWithInt:(jint)i;

- (jint)decWithInt:(jint)i;

- (id)itemAtWithInt:(jint)i;

- (void)removeAtWithInt:(jint)removeIndex;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
                withBoolean:(jboolean)fair;

- (instancetype)initWithInt:(jint)capacity
                withBoolean:(jboolean)fair
     withJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)addWithId:(id)e;

- (jboolean)offerWithId:(id)e;

- (void)putWithId:(id)e;

- (jboolean)offerWithId:(id)e
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)poll;

- (id)take;

- (id)pollWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)peek;

- (jint)size;

- (jint)remainingCapacity;

- (jboolean)removeWithId:(id)o;

- (jboolean)containsWithId:(id)o;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (NSString *)description;

- (void)clear;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements;

- (id<JavaUtilIterator>)iterator;


@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentArrayBlockingQueue)

J2OBJC_FIELD_SETTER(JavaUtilConcurrentArrayBlockingQueue, items_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentArrayBlockingQueue, lock_, JavaUtilConcurrentLocksReentrantLock *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentArrayBlockingQueue, itrs_, JavaUtilConcurrentArrayBlockingQueue_Itrs *)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentArrayBlockingQueue)

#define JavaUtilConcurrentArrayBlockingQueue_Itrs_LONG_SWEEP_PROBES 16
#define JavaUtilConcurrentArrayBlockingQueue_Itrs_SHORT_SWEEP_PROBES 4

@interface JavaUtilConcurrentArrayBlockingQueue_Itrs : NSObject {
 @public
  jint cycles_;
}

- (instancetype)initWithJavaUtilConcurrentArrayBlockingQueue:(JavaUtilConcurrentArrayBlockingQueue *)outer$
                withJavaUtilConcurrentArrayBlockingQueue_Itr:(JavaUtilConcurrentArrayBlockingQueue_Itr *)initial;

- (void)doSomeSweepingWithBoolean:(jboolean)tryHarder;

- (void)register__WithJavaUtilConcurrentArrayBlockingQueue_Itr:(JavaUtilConcurrentArrayBlockingQueue_Itr *)itr;

- (void)takeIndexWrapped;

- (void)removedAtWithInt:(jint)removedIndex;

- (void)queueIsEmpty;

- (void)elementDequeued;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentArrayBlockingQueue_Itrs)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue_Itrs, SHORT_SWEEP_PROBES, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue_Itrs, LONG_SWEEP_PROBES, jint)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentArrayBlockingQueue_Itrs)

@interface JavaUtilConcurrentArrayBlockingQueue_Itrs_Node : JavaLangRefWeakReference {
 @public
  JavaUtilConcurrentArrayBlockingQueue_Itrs_Node *next_;
}

- (instancetype)initWithJavaUtilConcurrentArrayBlockingQueue_Itrs:(JavaUtilConcurrentArrayBlockingQueue_Itrs *)outer$
                     withJavaUtilConcurrentArrayBlockingQueue_Itr:(JavaUtilConcurrentArrayBlockingQueue_Itr *)iterator
               withJavaUtilConcurrentArrayBlockingQueue_Itrs_Node:(JavaUtilConcurrentArrayBlockingQueue_Itrs_Node *)next;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentArrayBlockingQueue_Itrs_Node)

J2OBJC_FIELD_SETTER(JavaUtilConcurrentArrayBlockingQueue_Itrs_Node, next_, JavaUtilConcurrentArrayBlockingQueue_Itrs_Node *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentArrayBlockingQueue_Itrs_Node)

#define JavaUtilConcurrentArrayBlockingQueue_Itr_DETACHED -3
#define JavaUtilConcurrentArrayBlockingQueue_Itr_NONE -1
#define JavaUtilConcurrentArrayBlockingQueue_Itr_REMOVED -2

@interface JavaUtilConcurrentArrayBlockingQueue_Itr : NSObject < JavaUtilIterator > {
}

- (instancetype)initWithJavaUtilConcurrentArrayBlockingQueue:(JavaUtilConcurrentArrayBlockingQueue *)outer$;

- (jboolean)isDetached;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

- (void)shutdown;

- (jboolean)removedAtWithInt:(jint)removedIndex;

- (jboolean)takeIndexWrapped;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentArrayBlockingQueue_Itr)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue_Itr, NONE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue_Itr, REMOVED, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentArrayBlockingQueue_Itr, DETACHED, jint)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentArrayBlockingQueue_Itr)

#endif // _JavaUtilConcurrentArrayBlockingQueue_H_
