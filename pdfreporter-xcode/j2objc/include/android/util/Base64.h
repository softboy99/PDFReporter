//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/android/util/Base64.java
//

#ifndef _AndroidUtilBase64_H_
#define _AndroidUtilBase64_H_

@class IOSByteArray;
@class IOSIntArray;

#include "J2ObjC_header.h"

#define AndroidUtilBase64_CRLF 4
#define AndroidUtilBase64_DEFAULT 0
#define AndroidUtilBase64_NO_CLOSE 16
#define AndroidUtilBase64_NO_PADDING 1
#define AndroidUtilBase64_NO_WRAP 2
#define AndroidUtilBase64_URL_SAFE 8

@interface AndroidUtilBase64 : NSObject {
}

+ (IOSByteArray *)decodeWithNSString:(NSString *)str
                             withInt:(jint)flags;

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)input
                              withInt:(jint)flags;

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)input
                              withInt:(jint)offset
                              withInt:(jint)len
                              withInt:(jint)flags;

+ (NSString *)encodeToStringWithByteArray:(IOSByteArray *)input
                                  withInt:(jint)flags;

+ (NSString *)encodeToStringWithByteArray:(IOSByteArray *)input
                                  withInt:(jint)offset
                                  withInt:(jint)len
                                  withInt:(jint)flags;

+ (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)input
                              withInt:(jint)flags;

+ (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)input
                              withInt:(jint)offset
                              withInt:(jint)len
                              withInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidUtilBase64)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_decodeWithNSString_withInt_(NSString *str, jint flags);

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_decodeWithByteArray_withInt_(IOSByteArray *input, jint flags);

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_decodeWithByteArray_withInt_withInt_withInt_(IOSByteArray *input, jint offset, jint len, jint flags);

FOUNDATION_EXPORT NSString *AndroidUtilBase64_encodeToStringWithByteArray_withInt_(IOSByteArray *input, jint flags);

FOUNDATION_EXPORT NSString *AndroidUtilBase64_encodeToStringWithByteArray_withInt_withInt_withInt_(IOSByteArray *input, jint offset, jint len, jint flags);

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_encodeWithByteArray_withInt_(IOSByteArray *input, jint flags);

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_encodeWithByteArray_withInt_withInt_withInt_(IOSByteArray *input, jint offset, jint len, jint flags);

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, DEFAULT, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, NO_PADDING, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, NO_WRAP, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, CRLF, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, URL_SAFE, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64, NO_CLOSE, jint)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilBase64)

@interface AndroidUtilBase64_Coder : NSObject {
 @public
  IOSByteArray *output_;
  jint op_;
}

- (jboolean)processWithByteArray:(IOSByteArray *)input
                         withInt:(jint)offset
                         withInt:(jint)len
                     withBoolean:(jboolean)finish;

- (jint)maxOutputSizeWithInt:(jint)len;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidUtilBase64_Coder)

J2OBJC_FIELD_SETTER(AndroidUtilBase64_Coder, output_, IOSByteArray *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilBase64_Coder)

#define AndroidUtilBase64_Decoder_EQUALS -2
#define AndroidUtilBase64_Decoder_SKIP -1

@interface AndroidUtilBase64_Decoder : AndroidUtilBase64_Coder {
}

- (instancetype)initWithInt:(jint)flags
              withByteArray:(IOSByteArray *)output;

- (jint)maxOutputSizeWithInt:(jint)len;

- (jboolean)processWithByteArray:(IOSByteArray *)input
                         withInt:(jint)offset
                         withInt:(jint)len
                     withBoolean:(jboolean)finish;

@end

FOUNDATION_EXPORT BOOL AndroidUtilBase64_Decoder_initialized;
J2OBJC_STATIC_INIT(AndroidUtilBase64_Decoder)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT IOSIntArray *AndroidUtilBase64_Decoder_DECODE_;
J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Decoder, DECODE_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *AndroidUtilBase64_Decoder_DECODE_WEBSAFE_;
J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Decoder, DECODE_WEBSAFE_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Decoder, SKIP, jint)

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Decoder, EQUALS, jint)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilBase64_Decoder)

#define AndroidUtilBase64_Encoder_LINE_GROUPS 19

@interface AndroidUtilBase64_Encoder : AndroidUtilBase64_Coder {
 @public
  jint tailLen_;
  jboolean do_padding_;
  jboolean do_newline_;
  jboolean do_cr_;
}

- (instancetype)initWithInt:(jint)flags
              withByteArray:(IOSByteArray *)output;

- (jint)maxOutputSizeWithInt:(jint)len;

- (jboolean)processWithByteArray:(IOSByteArray *)input
                         withInt:(jint)offset
                         withInt:(jint)len
                     withBoolean:(jboolean)finish;

@end

FOUNDATION_EXPORT BOOL AndroidUtilBase64_Encoder_initialized;
J2OBJC_STATIC_INIT(AndroidUtilBase64_Encoder)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Encoder, LINE_GROUPS, jint)

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_Encoder_ENCODE_;
J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Encoder, ENCODE_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *AndroidUtilBase64_Encoder_ENCODE_WEBSAFE_;
J2OBJC_STATIC_FIELD_GETTER(AndroidUtilBase64_Encoder, ENCODE_WEBSAFE_, IOSByteArray *)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilBase64_Encoder)

#endif // _AndroidUtilBase64_H_
