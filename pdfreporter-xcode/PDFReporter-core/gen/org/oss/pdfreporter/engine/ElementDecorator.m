//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/ElementDecorator.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/lang/Byte.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/oss/pdfreporter/engine/ElementDecorator.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/PositionTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/StretchTypeEnum.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@implementation OrgOssPdfreporterEngineElementDecorator

@synthesize element = element_;

- (id)initWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)decorated {
  if ((self = [super init])) {
    self.element = decorated;
  }
  return self;
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:collector];
}

- (id<OrgOssPdfreporterEngineJRElementGroup>)getElementGroup {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getElementGroup];
}

- (OrgOssPdfreporterUsesJavaUtilUUID *)getUUID {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getUUID];
}

- (NSString *)getKey {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getKey];
}

- (OrgOssPdfreporterEngineTypePositionTypeEnumEnum *)getPositionTypeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getPositionTypeValue];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getPrintWhenExpression {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getPrintWhenExpression];
}

- (id<OrgOssPdfreporterEngineJRGroup>)getPrintWhenGroupChanges {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getPrintWhenGroupChanges];
}

- (IOSObjectArray *)getPropertyExpressions {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getPropertyExpressions];
}

- (OrgOssPdfreporterEngineTypeStretchTypeEnumEnum *)getStretchTypeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getStretchTypeValue];
}

- (int)getX {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getX];
}

- (int)getY {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getY];
}

- (BOOL)isPrintInFirstWholeBand {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) isPrintInFirstWholeBand];
}

- (BOOL)isPrintRepeatedValues {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) isPrintRepeatedValues];
}

- (BOOL)isPrintWhenDetailOverflows {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) isPrintWhenDetailOverflows];
}

- (BOOL)isRemoveLineWhenBlank {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) isRemoveLineWhenBlank];
}

- (void)setPositionTypeWithChar:(char)positionType {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setPositionTypeWithOrgOssPdfreporterEngineTypePositionTypeEnumEnum:(OrgOssPdfreporterEngineTypePositionTypeEnumEnum *)positionType {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setPrintInFirstWholeBandWithBOOL:(BOOL)isPrintInFirstWholeBand {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setPrintRepeatedValuesWithBOOL:(BOOL)isPrintRepeatedValues {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setPrintWhenDetailOverflowsWithBOOL:(BOOL)isPrintWhenDetailOverflows {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setRemoveLineWhenBlankWithBOOL:(BOOL)isRemoveLineWhenBlank {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setStretchTypeWithChar:(char)stretchType {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setStretchTypeWithOrgOssPdfreporterEngineTypeStretchTypeEnumEnum:(OrgOssPdfreporterEngineTypeStretchTypeEnumEnum *)stretchTypeEnum {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setWidthWithInt:(int)width {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setXWithInt:(int)x {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id)cloneWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)parentGroup {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<OrgOssPdfreporterEngineJRElement>)cloneWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)parentGroup
                                                                               withInt:(int)y {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) visitWithOrgOssPdfreporterEngineJRVisitor:visitor];
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getBackcolor];
}

- (id<OrgOssPdfreporterGeometryIColor>)getForecolor {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getForecolor];
}

- (int)getHeight {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getHeight];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getModeValue];
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnBackcolor {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getOwnBackcolor];
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnForecolor {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getOwnForecolor];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getOwnModeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getOwnModeValue];
}

- (int)getWidth {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getWidth];
}

- (void)setBackcolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)backcolor {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setForecolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)forecolor {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setModeWithChar:(char)mode {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setModeWithJavaLangByte:(JavaLangByte *)mode {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (void)setModeWithOrgOssPdfreporterEngineTypeModeEnumEnum:(OrgOssPdfreporterEngineTypeModeEnumEnum *)mode {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getDefaultStyleProvider];
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getStyle];
}

- (NSString *)getStyleNameReference {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getStyleNameReference];
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getParentProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) getPropertiesMap];
}

- (BOOL)hasProperties {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element_)) hasProperties];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineElementDecorator *typedCopy = (OrgOssPdfreporterEngineElementDecorator *) copy;
  typedCopy.element = element_;
}

@end
