//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/JRStyledTextAttributeSelector.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/HashMap.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRPrintText.h"
#include "org/oss/pdfreporter/engine/JRStyledTextAttributeSelector.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fonts/FontUtil.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRDataUtils.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextParser.h"
#include "org/oss/pdfreporter/font/text/TextAttribute.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineJRStyledTextAttributeSelector

static OrgOssPdfreporterEngineJRStyledTextAttributeSelector * OrgOssPdfreporterEngineJRStyledTextAttributeSelector_ALL_;
static OrgOssPdfreporterEngineJRStyledTextAttributeSelector * OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NO_BACKCOLOR_;
static OrgOssPdfreporterEngineJRStyledTextAttributeSelector * OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NONE_;

@synthesize jasperReportsContext = jasperReportsContext_;

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)ALL {
  return OrgOssPdfreporterEngineJRStyledTextAttributeSelector_ALL_;
}

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)NO_BACKCOLOR {
  return OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NO_BACKCOLOR_;
}

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)NONE {
  return OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NONE_;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
  }
  return self;
}

+ (JavaUtilLocale *)getLocale {
  return [OrgOssPdfreporterEngineUtilJRStyledTextParser getLocale];
}

+ (JavaUtilLocale *)getTextLocaleWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  NSString *localeCode = [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getLocaleCode];
  if (localeCode == nil) {
    return [OrgOssPdfreporterEngineJRStyledTextAttributeSelector getLocale];
  }
  return [OrgOssPdfreporterEngineUtilJRDataUtils getLocaleWithNSString:localeCode];
}

- (id<JavaUtilMap>)getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)getAllSelectorWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_AllSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)getNoBackcolorSelectorWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoBackcolorSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

+ (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)getNoneSelectorWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoneSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineJRStyledTextAttributeSelector class]) {
    OrgOssPdfreporterEngineJRStyledTextAttributeSelector_ALL_ = [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_AllSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
    OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NO_BACKCOLOR_ = [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoBackcolorSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
    OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NONE_ = [[OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoneSelector alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineJRStyledTextAttributeSelector *typedCopy = (OrgOssPdfreporterEngineJRStyledTextAttributeSelector *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
}

@end
@implementation OrgOssPdfreporterEngineJRStyledTextAttributeSelector_AllSelector

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [super initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<JavaUtilMap>)getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  id<JavaUtilMap> attributes = [[JavaUtilHashMap alloc] init];
  (void) [((OrgOssPdfreporterEngineFontsFontUtil *) nil_chk([OrgOssPdfreporterEngineFontsFontUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_])) getAttributesWithoutAwtFontWithJavaUtilMap:attributes withOrgOssPdfreporterEngineJRFont:printText];
  (void) [((id<JavaUtilMap>) nil_chk(attributes)) putWithId:[OrgOssPdfreporterFontTextTextAttribute FOREGROUND] withId:[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getForecolor]];
  if ([((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getModeValue] == [OrgOssPdfreporterEngineTypeModeEnumEnum OPAQUE]) {
    (void) [((id<JavaUtilMap>) nil_chk(attributes)) putWithId:[OrgOssPdfreporterFontTextTextAttribute BACKGROUND] withId:[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getBackcolor]];
  }
  return attributes;
}

@end
@implementation OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoBackcolorSelector

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [super initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<JavaUtilMap>)getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  id<JavaUtilMap> attributes = [[JavaUtilHashMap alloc] init];
  (void) [((OrgOssPdfreporterEngineFontsFontUtil *) nil_chk([OrgOssPdfreporterEngineFontsFontUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_])) getAttributesWithoutAwtFontWithJavaUtilMap:attributes withOrgOssPdfreporterEngineJRFont:printText];
  (void) [((id<JavaUtilMap>) nil_chk(attributes)) putWithId:[OrgOssPdfreporterFontTextTextAttribute FOREGROUND] withId:[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getForecolor]];
  return attributes;
}

@end
@implementation OrgOssPdfreporterEngineJRStyledTextAttributeSelector_NoneSelector

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [super initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<JavaUtilMap>)getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  return nil;
}

@end
