//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/JRSimpleTemplate.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRSimpleTemplate.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRTemplateReference.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"

@implementation OrgOssPdfreporterEngineJRSimpleTemplate

static NSString * OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_STYLE_ = @"style";
static NSString * OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_INCLUDED_TEMPLATES_ = @"incluldedTemplates";

@synthesize includedTemplates = includedTemplates_;
@synthesize styles = styles_;
@synthesize defaultStyle = defaultStyle_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_STYLE {
  return OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_STYLE_;
}

+ (NSString *)PROPERTY_INCLUDED_TEMPLATES {
  return OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_INCLUDED_TEMPLATES_;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (void)addStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  [self addStyleWithInt:-1 withOrgOssPdfreporterEngineJRStyle:style];
}

- (void)addStyleWithInt:(int)index
withOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  [self checkExistingNameWithNSString:[((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName]];
  if ([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isDefault]) {
    defaultStyle_ = style;
  }
  if (index >= 0 && index < [((id<JavaUtilList>) nil_chk(styles_)) size]) [((id<JavaUtilList>) nil_chk(styles_)) addWithInt:index withId:style];
  else {
    [((id<JavaUtilList>) nil_chk(styles_)) addWithId:style];
    index = [((id<JavaUtilList>) nil_chk(styles_)) size] - 1;
  }
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_STYLE_ withId:style withInt:index];
}

- (void)checkExistingNameWithNSString:(NSString *)name {
  if ([self getStyleWithNSString:name] != nil) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:[NSString stringWithFormat:@"Duplicate declaration of template style : %@", name]];
  }
}

- (BOOL)nameMatchesWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style
                                         withNSString:(NSString *)name {
  NSString *styleName = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName];
  return name == nil ? styleName == nil : [((NSString *) nil_chk(name)) isEqual:styleName];
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyleWithNSString:(NSString *)name {
  id<OrgOssPdfreporterEngineJRStyle> style = nil;
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(styles_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRStyle> itStyle = [((id<JavaUtilIterator>) nil_chk(it)) next];
    if ([self nameMatchesWithOrgOssPdfreporterEngineJRStyle:itStyle withNSString:name]) {
      style = itStyle;
      break;
    }
  }
  return style;
}

- (BOOL)removeStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  int idx = [((id<JavaUtilList>) nil_chk(styles_)) indexOfWithId:style];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(styles_)) removeWithInt:idx];
    if ([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isDefault]) {
      defaultStyle_ = nil;
    }
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_STYLE_ withId:style withInt:idx];
    return YES;
  }
  return NO;
}

- (id<OrgOssPdfreporterEngineJRStyle>)removeStyleWithNSString:(NSString *)name {
  id<OrgOssPdfreporterEngineJRStyle> removed = nil;
  for (id<JavaUtilListIterator> it = [((id<JavaUtilList>) nil_chk(styles_)) listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRStyle> style = [((id<JavaUtilListIterator>) nil_chk(it)) next];
    if ([self nameMatchesWithOrgOssPdfreporterEngineJRStyle:style withNSString:name]) {
      if ([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isDefault]) {
        defaultStyle_ = nil;
      }
      removed = style;
      break;
    }
  }
  [self removeStyleWithOrgOssPdfreporterEngineJRStyle:removed];
  return removed;
}

- (id<JavaUtilList>)getStylesList {
  return styles_;
}

- (IOSObjectArray *)getStyles {
  return [((id<JavaUtilList>) nil_chk(styles_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(styles_)) size] type:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRStyle)]]];
}

- (id<OrgOssPdfreporterEngineJRStyle>)getDefaultStyle {
  return defaultStyle_;
}

- (void)addIncludedTemplateWithInt:(int)index
withOrgOssPdfreporterEngineJRTemplateReference:(OrgOssPdfreporterEngineJRTemplateReference *)reference {
  if (index >= 0 && index < [((id<JavaUtilList>) nil_chk(includedTemplates_)) size]) [((id<JavaUtilList>) nil_chk(includedTemplates_)) addWithInt:index withId:reference];
  else {
    [((id<JavaUtilList>) nil_chk(includedTemplates_)) addWithId:reference];
    index = [((id<JavaUtilList>) nil_chk(includedTemplates_)) size] - 1;
  }
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_INCLUDED_TEMPLATES_ withId:reference withInt:index];
}

- (void)addIncludedTemplateWithOrgOssPdfreporterEngineJRTemplateReference:(OrgOssPdfreporterEngineJRTemplateReference *)reference {
  [self addIncludedTemplateWithInt:-1 withOrgOssPdfreporterEngineJRTemplateReference:reference];
}

- (void)addIncludedTemplateWithNSString:(NSString *)templateLocation {
  [self addIncludedTemplateWithOrgOssPdfreporterEngineJRTemplateReference:[[OrgOssPdfreporterEngineJRTemplateReference alloc] initWithNSString:templateLocation]];
}

- (BOOL)removeIncludedTemplateWithOrgOssPdfreporterEngineJRTemplateReference:(OrgOssPdfreporterEngineJRTemplateReference *)reference {
  int idx = [((id<JavaUtilList>) nil_chk(includedTemplates_)) indexOfWithId:reference];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(includedTemplates_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineJRSimpleTemplate_PROPERTY_INCLUDED_TEMPLATES_ withId:reference withInt:idx];
    return YES;
  }
  return NO;
}

- (OrgOssPdfreporterEngineJRTemplateReference *)removeIncludedTemplateWithNSString:(NSString *)location {
  OrgOssPdfreporterEngineJRTemplateReference *removed = nil;
  for (id<JavaUtilListIterator> it = [((id<JavaUtilList>) nil_chk(includedTemplates_)) listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
    OrgOssPdfreporterEngineJRTemplateReference *ref = [((id<JavaUtilListIterator>) nil_chk(it)) next];
    if ([((NSString *) nil_chk([((OrgOssPdfreporterEngineJRTemplateReference *) nil_chk(ref)) getLocation])) isEqual:location]) {
      removed = ref;
    }
  }
  [self removeIncludedTemplateWithOrgOssPdfreporterEngineJRTemplateReference:removed];
  return removed;
}

- (IOSObjectArray *)getIncludedTemplates {
  return [((id<JavaUtilList>) nil_chk(includedTemplates_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(includedTemplates_)) size] type:[IOSClass classWithClass:[OrgOssPdfreporterEngineJRTemplateReference class]]]];
}

- (id<JavaUtilList>)getIncludedTemplatesList {
  return includedTemplates_;
}

- (id)init {
  if ((self = [super init])) {
    includedTemplates_ = [[JavaUtilArrayList alloc] init];
    styles_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineJRSimpleTemplate *typedCopy = (OrgOssPdfreporterEngineJRSimpleTemplate *) copy;
  typedCopy.includedTemplates = includedTemplates_;
  typedCopy.styles = styles_;
  typedCopy.defaultStyle = defaultStyle_;
  typedCopy.eventSupport = eventSupport_;
}

@end
