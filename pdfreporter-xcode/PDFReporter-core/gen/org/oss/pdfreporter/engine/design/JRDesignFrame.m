//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignFrame.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRChild.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/design/JRDesignElement.h"
#include "org/oss/pdfreporter/engine/design/JRDesignElementGroup.h"
#include "org/oss/pdfreporter/engine/design/JRDesignFrame.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineDesignJRDesignFrame

static NSString * OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_ = @"children";

@synthesize children = children_;
@synthesize lineBox = lineBox_;

+ (NSString *)PROPERTY_CHILDREN {
  return OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_;
}

- (id)initOrgOssPdfreporterEngineDesignJRDesignFrameWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  if ((self = [super initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    children_ = [[JavaUtilArrayList alloc] init];
    lineBox_ = [[OrgOssPdfreporterEngineBaseJRBaseLineBox alloc] initWithOrgOssPdfreporterEngineJRBoxContainer:self];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  return [self initOrgOssPdfreporterEngineDesignJRDesignFrameWithOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider];
}

- (id)init {
  return [self initOrgOssPdfreporterEngineDesignJRDesignFrameWithOrgOssPdfreporterEngineJRDefaultStyleProvider:nil];
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRFrame:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitFrameWithOrgOssPdfreporterEngineJRFrame:self];
}

- (IOSObjectArray *)getElements {
  return [OrgOssPdfreporterEngineBaseJRBaseElementGroup getElementsWithJavaUtilList:children_];
}

- (void)addElementWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  [self addElementWithInt:[((id<JavaUtilList>) nil_chk(children_)) size] withOrgOssPdfreporterEngineJRElement:element];
}

- (void)addElementWithInt:(int)index
withOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  if ([(id) element isKindOfClass:[OrgOssPdfreporterEngineDesignJRDesignElement class]]) {
    [((OrgOssPdfreporterEngineDesignJRDesignElement *) element) setElementGroupWithOrgOssPdfreporterEngineJRElementGroup:self];
  }
  [((id<JavaUtilList>) nil_chk(children_)) addWithInt:index withId:element];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_ withId:element withInt:index];
}

- (BOOL)removeElementWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  if ([(id) element isKindOfClass:[OrgOssPdfreporterEngineDesignJRDesignElement class]]) {
    [((OrgOssPdfreporterEngineDesignJRDesignElement *) element) setElementGroupWithOrgOssPdfreporterEngineJRElementGroup:nil];
  }
  int idx = [((id<JavaUtilList>) nil_chk(children_)) indexOfWithId:element];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(children_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_ withId:element withInt:idx];
    return YES;
  }
  return NO;
}

- (void)addElementGroupWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)group {
  [self addElementGroupWithInt:[((id<JavaUtilList>) nil_chk(children_)) size] withOrgOssPdfreporterEngineJRElementGroup:group];
}

- (void)addElementGroupWithInt:(int)index
withOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)group {
  if ([(id) group isKindOfClass:[OrgOssPdfreporterEngineDesignJRDesignElementGroup class]]) {
    [((OrgOssPdfreporterEngineDesignJRDesignElementGroup *) group) setElementGroupWithOrgOssPdfreporterEngineJRElementGroup:self];
  }
  [((id<JavaUtilList>) nil_chk(children_)) addWithInt:index withId:group];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_ withId:group withInt:index];
}

- (BOOL)removeElementGroupWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)group {
  if ([(id) group isKindOfClass:[OrgOssPdfreporterEngineDesignJRDesignElementGroup class]]) {
    [((OrgOssPdfreporterEngineDesignJRDesignElementGroup *) group) setElementGroupWithOrgOssPdfreporterEngineJRElementGroup:nil];
  }
  int idx = [((id<JavaUtilList>) nil_chk(children_)) indexOfWithId:group];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(children_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignFrame_PROPERTY_CHILDREN_ withId:group withInt:idx];
    return YES;
  }
  return NO;
}

- (id<JavaUtilList>)getChildren {
  return children_;
}

- (id<OrgOssPdfreporterEngineJRElement>)getElementByKeyWithNSString:(NSString *)elementKey {
  return [OrgOssPdfreporterEngineBaseJRBaseElementGroup getElementByKeyWithOrgOssPdfreporterEngineJRElementArray:[self getElements] withNSString:elementKey];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getModeWithOrgOssPdfreporterEngineJRCommonElement:self withOrgOssPdfreporterEngineTypeModeEnumEnum:[OrgOssPdfreporterEngineTypeModeEnumEnum TRANSPARENT]];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (void)copyBoxWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox OBJC_METHOD_FAMILY_NONE {
  self.lineBox = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignFrame *clone = (OrgOssPdfreporterEngineDesignJRDesignFrame *) [super clone];
  if (children_ != nil) {
    ((OrgOssPdfreporterEngineDesignJRDesignFrame *) nil_chk(clone)).children = [[JavaUtilArrayList alloc] initWithInt:[children_ size]];
    for (int i = 0; i < [children_ size]; i++) {
      [((OrgOssPdfreporterEngineDesignJRDesignFrame *) nil_chk(clone)).children addWithId:(id<OrgOssPdfreporterEngineJRChild>) ([((id<OrgOssPdfreporterEngineJRChild>) nil_chk([children_ getWithInt:i])) cloneWithOrgOssPdfreporterEngineJRElementGroup:clone])];
    }
  }
  ((OrgOssPdfreporterEngineDesignJRDesignFrame *) nil_chk(clone)).lineBox = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:clone];
  return clone;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignFrame *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignFrame *) copy;
  typedCopy.children = children_;
  typedCopy.lineBox = lineBox_;
}

@end
