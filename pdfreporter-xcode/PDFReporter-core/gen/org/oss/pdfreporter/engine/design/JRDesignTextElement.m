//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignTextElement.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRFont.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBaseParagraph.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/design/JRDesignTextElement.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineDesignJRDesignTextElement

@synthesize horizontalAlignmentValue = horizontalAlignmentValue_;
@synthesize verticalAlignmentValue = verticalAlignmentValue_;
@synthesize rotationValue = rotationValue_;
@synthesize markup = markup_;
@synthesize lineBox = lineBox_;
@synthesize paragraph = paragraph_;
@synthesize fontName = fontName_;
@synthesize isBold_ = isBold__;
@synthesize isItalic_ = isItalic__;
@synthesize isUnderline_ = isUnderline__;
@synthesize isStrikeThrough_ = isStrikeThrough__;
@synthesize fontSize = fontSize_;
@synthesize pdfFontName = pdfFontName_;
@synthesize pdfEncoding = pdfEncoding_;
@synthesize isPdfEmbedded_ = isPdfEmbedded__;

- (id)initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  if ((self = [super initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    lineBox_ = [[OrgOssPdfreporterEngineBaseJRBaseLineBox alloc] initWithOrgOssPdfreporterEngineJRBoxContainer:self];
    paragraph_ = [[OrgOssPdfreporterEngineBaseJRBaseParagraph alloc] initWithOrgOssPdfreporterEngineJRParagraphContainer:self];
  }
  return self;
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getModeWithOrgOssPdfreporterEngineJRCommonElement:self withOrgOssPdfreporterEngineTypeModeEnumEnum:[OrgOssPdfreporterEngineTypeModeEnumEnum TRANSPARENT]];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getHorizontalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getHorizontalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment:self];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getOwnHorizontalAlignmentValue {
  return horizontalAlignmentValue_;
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)horizontalAlignmentValue {
  id old = self.horizontalAlignmentValue;
  self.horizontalAlignmentValue = horizontalAlignmentValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_HORIZONTAL_ALIGNMENT] withId:old withId:self.horizontalAlignmentValue];
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getVerticalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getVerticalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment:self];
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getOwnVerticalAlignmentValue {
  return verticalAlignmentValue_;
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnumEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)verticalAlignmentValue {
  id old = self.verticalAlignmentValue;
  self.verticalAlignmentValue = verticalAlignmentValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_VERTICAL_ALIGNMENT] withId:old withId:self.verticalAlignmentValue];
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getRotationValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getRotationValueWithOrgOssPdfreporterEngineJRCommonText:self];
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getOwnRotationValue {
  return self.rotationValue;
}

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnumEnum:(OrgOssPdfreporterEngineTypeRotationEnumEnum *)rotationValue {
  id old = self.rotationValue;
  self.rotationValue = rotationValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_ROTATION] withId:old withId:self.rotationValue];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getLineSpacing];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getOwnLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getOwnLineSpacing];
}

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)lineSpacing {
  [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:lineSpacing];
}

- (NSString *)getMarkup {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getMarkupWithOrgOssPdfreporterEngineJRCommonText:self];
}

- (NSString *)getOwnMarkup {
  return markup_;
}

- (void)setMarkupWithNSString:(NSString *)markup {
  id old = self.markup;
  self.markup = markup;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_MARKUP] withId:old withId:self.markup];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph {
  return paragraph_;
}

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  return self;
}

- (void)setFontWithOrgOssPdfreporterEngineJRFont:(id<OrgOssPdfreporterEngineJRFont>)font {
  [self setFontNameWithNSString:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) getOwnFontName]];
  [self setBoldWithJavaLangBoolean:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) isOwnBold]];
  [self setItalicWithJavaLangBoolean:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) isOwnItalic]];
  [self setUnderlineWithJavaLangBoolean:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) isOwnUnderline]];
  [self setStrikeThroughWithJavaLangBoolean:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) isOwnStrikeThrough]];
  [self setFontSizeWithJavaLangInteger:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) getOwnFontSize]];
  [self setPdfFontNameWithNSString:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) getOwnPdfFontName]];
  [self setPdfEncodingWithNSString:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) getOwnPdfEncoding]];
  [self setPdfEmbeddedWithJavaLangBoolean:[((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) isOwnPdfEmbedded]];
}

- (NSString *)getFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontNameWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnFontName {
  return fontName_;
}

- (void)setFontNameWithNSString:(NSString *)fontName {
  id old = self.fontName;
  self.fontName = fontName;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_FONT_NAME] withId:old withId:self.fontName];
}

- (BOOL)isBold {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isBoldWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnBold {
  return isBold__;
}

- (void)setBoldWithBOOL:(BOOL)isBold {
  [self setBoldWithJavaLangBoolean:isBold ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold {
  id old = self.isBold_;
  self.isBold_ = isBold;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_BOLD] withId:old withId:self.isBold_];
}

- (BOOL)isItalic {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isItalicWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnItalic {
  return isItalic__;
}

- (void)setItalicWithBOOL:(BOOL)isItalic {
  [self setItalicWithJavaLangBoolean:isItalic ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic {
  id old = self.isItalic_;
  self.isItalic_ = isItalic;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_ITALIC] withId:old withId:self.isItalic_];
}

- (BOOL)isUnderline {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isUnderlineWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnUnderline {
  return isUnderline__;
}

- (void)setUnderlineWithBOOL:(BOOL)isUnderline {
  [self setUnderlineWithJavaLangBoolean:isUnderline ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline {
  id old = self.isUnderline_;
  self.isUnderline_ = isUnderline;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_UNDERLINE] withId:old withId:self.isUnderline_];
}

- (BOOL)isStrikeThrough {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isStrikeThroughWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnStrikeThrough {
  return isStrikeThrough__;
}

- (void)setStrikeThroughWithBOOL:(BOOL)isStrikeThrough {
  [self setStrikeThroughWithJavaLangBoolean:isStrikeThrough ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough {
  id old = self.isStrikeThrough_;
  self.isStrikeThrough_ = isStrikeThrough;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_STRIKE_THROUGH] withId:old withId:self.isStrikeThrough_];
}

- (int)getFontSize {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontSizeWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangInteger *)getOwnFontSize {
  return fontSize_;
}

- (void)setFontSizeWithInt:(int)fontSize {
  [self setFontSizeWithJavaLangInteger:[JavaLangInteger valueOfWithInt:fontSize]];
}

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)fontSize {
  id old = self.fontSize;
  self.fontSize = fontSize;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_FONT_SIZE] withId:old withId:self.fontSize];
}

- (NSString *)getPdfFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfFontNameWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnPdfFontName {
  return pdfFontName_;
}

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName {
  id old = self.pdfFontName;
  self.pdfFontName = pdfFontName;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_PDF_FONT_NAME] withId:old withId:self.pdfFontName];
}

- (NSString *)getPdfEncoding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfEncodingWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnPdfEncoding {
  return pdfEncoding_;
}

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding {
  id old = self.pdfEncoding;
  self.pdfEncoding = pdfEncoding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_PDF_ENCODING] withId:old withId:self.pdfEncoding];
}

- (BOOL)isPdfEmbedded {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isPdfEmbeddedWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnPdfEmbedded {
  return isPdfEmbedded__;
}

- (void)setPdfEmbeddedWithBOOL:(BOOL)isPdfEmbedded {
  [self setPdfEmbeddedWithJavaLangBoolean:isPdfEmbedded ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded {
  id old = self.isPdfEmbedded_;
  self.isPdfEmbedded_ = isPdfEmbedded;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_PDF_EMBEDDED] withId:old withId:self.isPdfEmbedded_];
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignTextElement *clone = (OrgOssPdfreporterEngineDesignJRDesignTextElement *) [super clone];
  ((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(clone)).lineBox = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:clone];
  ((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(clone)).paragraph = [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph_)) cloneWithOrgOssPdfreporterEngineJRParagraphContainer:clone];
  return clone;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignTextElement *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignTextElement *) copy;
  typedCopy.horizontalAlignmentValue = horizontalAlignmentValue_;
  typedCopy.verticalAlignmentValue = verticalAlignmentValue_;
  typedCopy.rotationValue = rotationValue_;
  typedCopy.markup = markup_;
  typedCopy.lineBox = lineBox_;
  typedCopy.paragraph = paragraph_;
  typedCopy.fontName = fontName_;
  typedCopy.isBold_ = isBold__;
  typedCopy.isItalic_ = isItalic__;
  typedCopy.isUnderline_ = isUnderline__;
  typedCopy.isStrikeThrough_ = isStrikeThrough__;
  typedCopy.fontSize = fontSize_;
  typedCopy.pdfFontName = pdfFontName_;
  typedCopy.pdfEncoding = pdfEncoding_;
  typedCopy.isPdfEmbedded_ = isPdfEmbedded__;
}

@end
