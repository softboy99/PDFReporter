//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignExpression.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/StringTokenizer.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpression.h"
#include "org/oss/pdfreporter/engine/design/JRDesignExpression.h"
#include "org/oss/pdfreporter/engine/design/JRDesignExpressionChunk.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@implementation OrgOssPdfreporterEngineDesignJRDesignExpression

static NSString * OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT_ = @"text";
static NSString * OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME_ = @"valueClassName";

@synthesize chunks_JRDesignExpression = chunks_JRDesignExpression_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_TEXT {
  return OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT_;
}

+ (NSString *)PROPERTY_VALUE_CLASS_NAME {
  return OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME_;
}

- (id)initOrgOssPdfreporterEngineDesignJRDesignExpression {
  if ((self = [super init])) {
    chunks_JRDesignExpression_ = [[JavaUtilArrayList alloc] init];
    [self regenerateId];
  }
  return self;
}

- (id)init {
  return [self initOrgOssPdfreporterEngineDesignJRDesignExpression];
}

- (id)initWithNSString:(NSString *)text {
  if ((self = [self initOrgOssPdfreporterEngineDesignJRDesignExpression])) {
    [self setTextWithNSString:text];
  }
  return self;
}

- (void)setValueClassWithIOSClass:(IOSClass *)clazz {
  [self setValueClassNameWithNSString:[((IOSClass *) nil_chk(clazz)) getName]];
}

- (void)setValueClassNameWithNSString:(NSString *)className_ {
  id old = self.valueClassName;
  valueClassName_ = className_;
  valueClass_ = nil;
  valueClassRealName_ = nil;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME_ withId:old withId:self.valueClassName];
}

- (void)setIdWithInt:(int)id_ {
  self.id_ = id_;
}

- (IOSObjectArray *)getChunks {
  IOSObjectArray *chunkArray = nil;
  if (chunks_JRDesignExpression_ != nil && [((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) size] > 0) {
    chunkArray = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) size] type:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRExpressionChunk)]];
    (void) [((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) toArrayWithNSObjectArray:chunkArray];
  }
  return chunkArray;
}

- (void)setChunksWithJavaUtilList:(id<JavaUtilList>)chunks {
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) clear];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addAllWithJavaUtilCollection:chunks];
}

- (void)addChunkWithOrgOssPdfreporterEngineDesignJRDesignExpressionChunk:(OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *)chunk {
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addChunkWithChar:(char)type
            withNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:type];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addTextChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addParameterChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addFieldChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addVariableChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)addResourceChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignExpressionChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE];
  [((OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignExpression)) addWithId:chunk];
}

- (void)setTextWithNSString:(NSString *)text {
  id old = [self getText];
  [((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) clear];
  if (text != nil) {
    JavaLangStringBuffer *textChunk = [[JavaLangStringBuffer alloc] init];
    JavaUtilStringTokenizer *tkzer = [[JavaUtilStringTokenizer alloc] initWithNSString:text withNSString:@"$" withBOOL:YES];
    int behindDelims = 0;
    while ([((JavaUtilStringTokenizer *) nil_chk(tkzer)) hasMoreTokens]) {
      NSString *token = [((JavaUtilStringTokenizer *) nil_chk(tkzer)) nextToken];
      if ([((NSString *) nil_chk(token)) isEqual:@"$"]) {
        if (behindDelims > 0) {
          (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:@"$"];
        }
        ++behindDelims;
      }
      else {
        char chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
        if (behindDelims > 0) {
          if ([((NSString *) nil_chk(token)) hasPrefix:@"P{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER;
          }
          else if ([((NSString *) nil_chk(token)) hasPrefix:@"F{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD;
          }
          else if ([((NSString *) nil_chk(token)) hasPrefix:@"V{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE;
          }
          else if ([((NSString *) nil_chk(token)) hasPrefix:@"R{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE;
          }
        }
        if (chunkType == OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT) {
          if (behindDelims > 0) {
            (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:@"$"];
          }
          (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:token];
        }
        else {
          int end = [((NSString *) nil_chk(token)) indexOf:'}'];
          if (end > 0) {
            if (behindDelims > 1) {
              (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:token];
            }
            else {
              if ([((JavaLangStringBuffer *) nil_chk(textChunk)) sequenceLength] > 0) {
                [self addTextChunkWithNSString:[((JavaLangStringBuffer *) nil_chk(textChunk)) description]];
              }
              [self addChunkWithChar:chunkType withNSString:[((NSString *) nil_chk(token)) substring:2 endIndex:end]];
              textChunk = [[JavaLangStringBuffer alloc] initWithNSString:[((NSString *) nil_chk(token)) substring:end + 1]];
            }
          }
          else {
            if (behindDelims > 0) {
              (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:@"$"];
            }
            (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:token];
          }
        }
        behindDelims = 0;
      }
    }
    if (behindDelims > 0) {
      (void) [((JavaLangStringBuffer *) nil_chk(textChunk)) appendWithNSString:@"$"];
    }
    if ([((JavaLangStringBuffer *) nil_chk(textChunk)) sequenceLength] > 0) {
      [self addTextChunkWithNSString:[((JavaLangStringBuffer *) nil_chk(textChunk)) description]];
    }
  }
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT_ withId:old withId:text];
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignExpression *clone = (OrgOssPdfreporterEngineDesignJRDesignExpression *) [super clone];
  ((OrgOssPdfreporterEngineDesignJRDesignExpression *) nil_chk(clone)).chunks_JRDesignExpression = [OrgOssPdfreporterEngineUtilJRCloneUtils cloneListWithJavaUtilList:chunks_JRDesignExpression_];
  ((OrgOssPdfreporterEngineDesignJRDesignExpression *) nil_chk(clone)).eventSupport = nil;
  return clone;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignExpression *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignExpression *) copy;
  typedCopy.chunks_JRDesignExpression = chunks_JRDesignExpression_;
  typedCopy.eventSupport = eventSupport_;
}

@end
