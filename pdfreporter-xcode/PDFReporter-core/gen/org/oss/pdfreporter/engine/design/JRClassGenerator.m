//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRClassGenerator.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Byte.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRField.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/design/JRClassGenerator.h"
#include "org/oss/pdfreporter/engine/design/JRCompilationSourceCode.h"
#include "org/oss/pdfreporter/engine/design/JRDefaultCompilationSourceCode.h"
#include "org/oss/pdfreporter/engine/design/JRSourceCompileTask.h"
#include "org/oss/pdfreporter/engine/util/JRStringUtil.h"

@implementation OrgOssPdfreporterEngineDesignJRClassGenerator

static NSString * OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_ = @"$JR_EXPR_ID=";
static int OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_LENGTH_;
static NSString * OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_END_ = @"$";
static id<JavaUtilMap> OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_;
static id<JavaUtilMap> OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_;
static id<JavaUtilMap> OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_;

@synthesize sourceTask = sourceTask_;
@synthesize parametersMap = parametersMap_;
@synthesize fieldsMap = fieldsMap_;
@synthesize variablesMap = variablesMap_;
@synthesize variables = variables_;

+ (NSString *)SOURCE_EXPRESSION_ID_START {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_;
}

+ (int)SOURCE_EXPRESSION_ID_START_LENGTH {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_LENGTH_;
}

+ (NSString *)SOURCE_EXPRESSION_ID_END {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_END_;
}

+ (id<JavaUtilMap>)fieldPrefixMap {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_;
}

+ (void)setFieldPrefixMap:(id<JavaUtilMap>)fieldPrefixMap {
  OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_ = fieldPrefixMap;
}

+ (id<JavaUtilMap>)variablePrefixMap {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_;
}

+ (void)setVariablePrefixMap:(id<JavaUtilMap>)variablePrefixMap {
  OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_ = variablePrefixMap;
}

+ (id<JavaUtilMap>)methodSuffixMap {
  return OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_;
}

+ (void)setMethodSuffixMap:(id<JavaUtilMap>)methodSuffixMap {
  OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_ = methodSuffixMap;
}

- (id)initWithOrgOssPdfreporterEngineDesignJRSourceCompileTask:(OrgOssPdfreporterEngineDesignJRSourceCompileTask *)sourceTask {
  if ((self = [super init])) {
    self.sourceTask = sourceTask;
    parametersMap_ = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask)) getParametersMap];
    fieldsMap_ = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask)) getFieldsMap];
    variablesMap_ = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask)) getVariablesMap];
    variables_ = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask)) getVariables];
  }
  return self;
}

+ (id<OrgOssPdfreporterEngineDesignJRCompilationSourceCode>)generateClassWithOrgOssPdfreporterEngineDesignJRSourceCompileTask:(OrgOssPdfreporterEngineDesignJRSourceCompileTask *)sourceTask {
  OrgOssPdfreporterEngineDesignJRClassGenerator *generator = [[OrgOssPdfreporterEngineDesignJRClassGenerator alloc] initWithOrgOssPdfreporterEngineDesignJRSourceCompileTask:sourceTask];
  return [((OrgOssPdfreporterEngineDesignJRClassGenerator *) nil_chk(generator)) generateClass];
}

- (id<OrgOssPdfreporterEngineDesignJRCompilationSourceCode>)generateClass {
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] init];
  [self generateClassStartWithJavaLangStringBuffer:sb];
  [self generateDeclarationsWithJavaLangStringBuffer:sb];
  [self generateInitMethodWithJavaLangStringBuffer:sb];
  [self generateInitParamsMethodWithJavaLangStringBuffer:sb];
  if (fieldsMap_ != nil) {
    [self generateInitFieldsMethodWithJavaLangStringBuffer:sb];
  }
  [self generateInitVarsMethodWithJavaLangStringBuffer:sb];
  id<JavaUtilList> expressions = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getExpressions];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withJavaUtilList:expressions]];
  if ([((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) isOnlyDefaultEvaluation]) {
    id<JavaUtilList> empty = [[JavaUtilArrayList alloc] init];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD withJavaUtilList:empty]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED withJavaUtilList:empty]];
  }
  else {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD withJavaUtilList:expressions]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED withJavaUtilList:expressions]];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"}\n"];
  NSString *code = [((JavaLangStringBuffer *) nil_chk(sb)) description];
  IOSObjectArray *lineExpressions = [self parseSourceLinesWithNSString:code];
  return [[OrgOssPdfreporterEngineDesignJRDefaultCompilationSourceCode alloc] initWithNSString:code withOrgOssPdfreporterEngineJRExpressionArray:lineExpressions];
}

- (void)generateInitMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    public void customizedInit(\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        Map pm,\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        Map fm,\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        Map vm\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        )\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initParams(pm);\n"];
  if (fieldsMap_ != nil) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initFields(fm);\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initVars(vm);\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
}

- (void)generateClassStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"/*\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" * Generated by JasperReports - "];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[NSString stringWithFormat:@"%1$tD %1$tr" , [[JavaUtilDate alloc] init], nil]];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import net.sf.jasperreports.engine.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import net.sf.jasperreports.engine.fill.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import java.util.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import java.math.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import java.text.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import java.io.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import java.net.*;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  IOSObjectArray *imports = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getImports];
  if (imports != nil && (int) [((IOSObjectArray *) nil_chk(imports)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(imports)) count]; i++) {
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"import "];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((IOSObjectArray *) nil_chk(imports)) objectAtIndex:i]];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@";\n"];
    }
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"/**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"public class "];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getUnitName]];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" extends JREvaluator\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"{\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
}

- (void)generateDeclarationsWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  if (parametersMap_ != nil && [((id<JavaUtilMap>) nil_chk(parametersMap_)) size] > 0) {
    id<JavaUtilCollection> parameterNames = [((id<JavaUtilMap>) nil_chk(parametersMap_)) keySet];
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(parameterNames)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private JRFillParameter parameter_"];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:[((id<JavaUtilIterator>) nil_chk(it)) next]]];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = null;\n"];
    }
  }
  if (fieldsMap_ != nil && [((id<JavaUtilMap>) nil_chk(fieldsMap_)) size] > 0) {
    id<JavaUtilCollection> fieldNames = [((id<JavaUtilMap>) nil_chk(fieldsMap_)) keySet];
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(fieldNames)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private JRFillField field_"];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:[((id<JavaUtilIterator>) nil_chk(it)) next]]];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = null;\n"];
    }
  }
  if (variables_ != nil && (int) [((IOSObjectArray *) nil_chk(variables_)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(variables_)) count]; i++) {
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private JRFillVariable variable_"];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk([((IOSObjectArray *) nil_chk(variables_)) objectAtIndex:i])) getName]]];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = null;\n"];
    }
  }
}

- (void)generateInitParamsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  id<JavaUtilIterator> parIt = nil;
  if (parametersMap_ != nil && [((id<JavaUtilMap>) nil_chk(parametersMap_)) size] > 0) {
    parIt = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(parametersMap_)) keySet])) iterator];
  }
  else {
    id<JavaUtilSet> emptySet = [JavaUtilCollections emptySet];
    parIt = [((id<JavaUtilSet>) nil_chk(emptySet)) iterator];
  }
  [self generateInitParamsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:parIt withInt:0];
}

- (void)generateInitFieldsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  id<JavaUtilIterator> fieldIt = nil;
  if (fieldsMap_ != nil && [((id<JavaUtilMap>) nil_chk(fieldsMap_)) size] > 0) {
    fieldIt = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(fieldsMap_)) keySet])) iterator];
  }
  else {
    id<JavaUtilSet> emptySet = [JavaUtilCollections emptySet];
    fieldIt = [((id<JavaUtilSet>) nil_chk(emptySet)) iterator];
  }
  [self generateInitFieldsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:fieldIt withInt:0];
}

- (void)generateInitVarsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  id<JavaUtilIterator> varIt = nil;
  if (variables_ != nil && (int) [((IOSObjectArray *) nil_chk(variables_)) count] > 0) {
    varIt = [((id<JavaUtilList>) nil_chk([JavaUtilArrays asListWithNSObjectArray:variables_])) iterator];
  }
  else {
    id<JavaUtilList> emptyList = [JavaUtilCollections emptyList];
    varIt = [((id<JavaUtilList>) nil_chk(emptyList)) iterator];
  }
  [self generateInitVarsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:varIt withInt:0];
}

- (void)generateInitParamsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                    withJavaUtilIterator:(id<JavaUtilIterator>)it
                                                 withInt:(int)index {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private void initParams"];
  if (index > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(Map pm)\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
  for (int i = 0; i < OrgOssPdfreporterEngineDesignJRClassGenerator_EXPR_MAX_COUNT_PER_METHOD && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; i++) {
    NSString *parameterName = [((id<JavaUtilIterator>) nil_chk(it)) next];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        parameter_"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:parameterName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = (JRFillParameter)pm.get(\""];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil escapeJavaStringLiteralWithNSString:parameterName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\");\n"];
  }
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initParams"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index + 1];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(pm);\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [self generateInitParamsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:it withInt:index + 1];
  }
}

- (void)generateInitFieldsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                    withJavaUtilIterator:(id<JavaUtilIterator>)it
                                                 withInt:(int)index {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private void initFields"];
  if (index > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(Map fm)\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
  for (int i = 0; i < OrgOssPdfreporterEngineDesignJRClassGenerator_EXPR_MAX_COUNT_PER_METHOD && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; i++) {
    NSString *fieldName = [((id<JavaUtilIterator>) nil_chk(it)) next];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        field_"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:fieldName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = (JRFillField)fm.get(\""];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil escapeJavaStringLiteralWithNSString:fieldName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\");\n"];
  }
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initFields"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index + 1];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(fm);\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [self generateInitFieldsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:it withInt:index + 1];
  }
}

- (void)generateInitVarsMethodWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                  withJavaUtilIterator:(id<JavaUtilIterator>)it
                                               withInt:(int)index {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private void initVars"];
  if (index > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(Map vm)\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
  for (int i = 0; i < OrgOssPdfreporterEngineDesignJRClassGenerator_EXPR_MAX_COUNT_PER_METHOD && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; i++) {
    NSString *variableName = [([((id<JavaUtilIterator>) nil_chk(it)) next]) getName];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        variable_"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:variableName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" = (JRFillVariable)vm.get(\""];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil escapeJavaStringLiteralWithNSString:variableName]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\");\n"];
  }
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        initVars"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index + 1];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(vm);\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [self generateInitVarsMethodWithJavaLangStringBuffer:sb withJavaUtilIterator:it withInt:index + 1];
  }
}

- (NSString *)generateMethodWithChar:(char)evaluationType
                    withJavaUtilList:(id<JavaUtilList>)expressionsList {
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] init];
  if ([((id<JavaUtilList>) nil_chk(expressionsList)) size] > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithJavaUtilIterator:[((id<JavaUtilList>) nil_chk(expressionsList)) listIterator] withInt:0 withChar:evaluationType]];
  }
  else {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    public Object evaluate"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(int id) throws Throwable\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        return null;\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  }
  return [((JavaLangStringBuffer *) nil_chk(sb)) description];
}

- (NSString *)generateMethodWithJavaUtilIterator:(id<JavaUtilIterator>)it
                                         withInt:(int)index
                                        withChar:(char)evaluationType {
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] init];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    /**\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     *\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"     */\n"];
  if (index > 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    private Object evaluate"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index];
  }
  else {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    public Object evaluate"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(int id) throws Throwable\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    {\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        Object value = null;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        switch (id)\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        {\n"];
  for (int i = 0; [((id<JavaUtilIterator>) nil_chk(it)) hasNext] && i < OrgOssPdfreporterEngineDesignJRClassGenerator_EXPR_MAX_COUNT_PER_METHOD; i++) {
    id<OrgOssPdfreporterEngineJRExpression> expression = [((id<JavaUtilIterator>) nil_chk(it)) next];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"            case "];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithId:[((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" : \n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"            {\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"                value = "];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateExpressionWithOrgOssPdfreporterEngineJRExpression:expression withChar:evaluationType]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@";"];
    [self appendExpressionCommentWithJavaLangStringBuffer:sb withOrgOssPdfreporterEngineJRExpression:expression];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"                break;\n"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"            }\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"           default :\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"           {\n"];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"               value = evaluate"];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:index + 1];
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(id);\n"];
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"           }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        \n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"        return value;\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"    }\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\n"];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[self generateMethodWithJavaUtilIterator:it withInt:index + 1 withChar:evaluationType]];
  }
  return [((JavaLangStringBuffer *) nil_chk(sb)) description];
}

- (NSString *)generateExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                               withChar:(char)evaluationType {
  id<OrgOssPdfreporterEngineJRParameter> jrParameter = nil;
  id<OrgOssPdfreporterEngineJRField> jrField = nil;
  id<OrgOssPdfreporterEngineJRVariable> jrVariable = nil;
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] init];
  IOSObjectArray *chunks = [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getChunks];
  id<OrgOssPdfreporterEngineJRExpressionChunk> chunk = nil;
  NSString *chunkText = nil;
  if (chunks != nil && (int) [((IOSObjectArray *) nil_chk(chunks)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(chunks)) count]; i++) {
      chunk = [((IOSObjectArray *) nil_chk(chunks)) objectAtIndex:i];
      chunkText = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getText];
      if (chunkText == nil) {
        chunkText = @"";
      }
      switch ([((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getType]) {
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT:
        {
          [self appendExpressionTextWithOrgOssPdfreporterEngineJRExpression:expression withJavaLangStringBuffer:sb withNSString:chunkText];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER:
        {
          jrParameter = [((id<JavaUtilMap>) nil_chk(parametersMap_)) getWithId:chunkText];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(("];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<OrgOssPdfreporterEngineJRParameter>) nil_chk(jrParameter)) getValueClassName]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@")parameter_"];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:chunkText]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@".getValue())"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
        {
          jrField = [((id<JavaUtilMap>) nil_chk(fieldsMap_)) getWithId:chunkText];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(("];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<OrgOssPdfreporterEngineJRField>) nil_chk(jrField)) getValueClassName]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@")field_"];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:chunkText]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@".get"];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"Value())"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
        {
          jrVariable = [((id<JavaUtilMap>) nil_chk(variablesMap_)) getWithId:chunkText];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"(("];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(jrVariable)) getValueClassName]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@")variable_"];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[OrgOssPdfreporterEngineUtilJRStringUtil getJavaIdentifierWithNSString:chunkText]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@".get"];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_)) getWithId:[[JavaLangByte alloc] initWithChar:evaluationType]]];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"Value())"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE:
        {
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"str(\""];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:chunkText];
          (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"\")"];
          break;
        }
      }
    }
  }
  if ([((JavaLangStringBuffer *) nil_chk(sb)) sequenceLength] == 0) {
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"null"];
  }
  return [((JavaLangStringBuffer *) nil_chk(sb)) description];
}

- (void)appendExpressionTextWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                           withJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                                       withNSString:(NSString *)chunkText {
  for (JavaUtilStringTokenizer * tokenizer = [[JavaUtilStringTokenizer alloc] initWithNSString:chunkText withNSString:@"\n" withBOOL:YES]; [((JavaUtilStringTokenizer *) nil_chk(tokenizer)) hasMoreTokens]; ) {
    NSString *token = [((JavaUtilStringTokenizer *) nil_chk(tokenizer)) nextToken];
    if ([((NSString *) nil_chk(token)) isEqual:@"\n"]) {
      [self appendExpressionCommentWithJavaLangStringBuffer:sb withOrgOssPdfreporterEngineJRExpression:expression];
    }
    (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:token];
  }
}

- (void)appendExpressionCommentWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                withOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@" //"];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithId:[((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression]];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_END_];
}

- (IOSObjectArray *)parseSourceLinesWithNSString:(NSString *)sourceCode {
  id<JavaUtilList> expressions = [[JavaUtilArrayList alloc] init];
  int start = 0;
  int end = [((NSString *) nil_chk(sourceCode)) indexOf:0x000a];
  while (end >= 0) {
    id<OrgOssPdfreporterEngineJRExpression> expression = nil;
    if (start < end) {
      NSString *line = [((NSString *) nil_chk(sourceCode)) substring:start endIndex:end];
      expression = [self getLineExpressionWithNSString:line];
    }
    [((id<JavaUtilList>) nil_chk(expressions)) addWithId:expression];
    start = end + 1;
    end = [((NSString *) nil_chk(sourceCode)) indexOf:0x000a fromIndex:start];
  }
  return [((id<JavaUtilList>) nil_chk(expressions)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(expressions)) size] type:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRExpression)]]];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getLineExpressionWithNSString:(NSString *)line {
  id<OrgOssPdfreporterEngineJRExpression> expression = nil;
  int exprIdStart = [((NSString *) nil_chk(line)) indexOfString:OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_];
  if (exprIdStart >= 0) {
    exprIdStart += OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_LENGTH_;
    int exprIdEnd = [((NSString *) nil_chk(line)) indexOf:'$' fromIndex:exprIdStart];
    if (exprIdEnd >= 0) {
      @try {
        int exprId = [JavaLangInteger parseIntWithNSString:[((NSString *) nil_chk(line)) substring:exprIdStart endIndex:exprIdEnd]];
        expression = [((OrgOssPdfreporterEngineDesignJRSourceCompileTask *) nil_chk(sourceTask_)) getExpressionWithInt:exprId];
      }
      @catch (JavaLangNumberFormatException *e) {
      }
    }
  }
  return expression;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineDesignJRClassGenerator class]) {
    OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_LENGTH_ = [((NSString *) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_SOURCE_EXPRESSION_ID_START_)) length];
    {
      OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_ = [[JavaUtilHashMap alloc] init];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD] withId:@"Old"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED] withId:@""];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_fieldPrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT] withId:@""];
      OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_ = [[JavaUtilHashMap alloc] init];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD] withId:@"Old"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED] withId:@"Estimated"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_variablePrefixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT] withId:@""];
      OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_ = [[JavaUtilHashMap alloc] init];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD] withId:@"Old"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED] withId:@"Estimated"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineDesignJRClassGenerator_methodSuffixMap_)) putWithId:[[JavaLangByte alloc] initWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT] withId:@""];
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRClassGenerator *typedCopy = (OrgOssPdfreporterEngineDesignJRClassGenerator *) copy;
  typedCopy.sourceTask = sourceTask_;
  typedCopy.parametersMap = parametersMap_;
  typedCopy.fieldsMap = fieldsMap_;
  typedCopy.variablesMap = variablesMap_;
  typedCopy.variables = variables_;
}

@end
