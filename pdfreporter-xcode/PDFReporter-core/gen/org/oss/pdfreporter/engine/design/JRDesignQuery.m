//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignQuery.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRQueryChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseQuery.h"
#include "org/oss/pdfreporter/engine/design/JRDesignQuery.h"
#include "org/oss/pdfreporter/engine/design/JRDesignQueryChunk.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"
#include "org/oss/pdfreporter/engine/util/JRQueryChunkHandler.h"
#include "org/oss/pdfreporter/engine/util/JRQueryParser.h"

@implementation OrgOssPdfreporterEngineDesignJRDesignQuery

static NSString * OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_LANGUAGE_ = @"language";
static NSString * OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_TEXT_ = @"text";

@synthesize eventSupport = eventSupport_;
@synthesize chunks_JRDesignQuery = chunks_JRDesignQuery_;
@synthesize chunkAdder_ = chunkAdder__;

+ (NSString *)PROPERTY_LANGUAGE {
  return OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_LANGUAGE_;
}

+ (NSString *)PROPERTY_TEXT {
  return OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_TEXT_;
}

- (IOSObjectArray *)getChunks {
  IOSObjectArray *chunkArray = nil;
  if (chunks_JRDesignQuery_ != nil && [((id<JavaUtilList>) nil_chk(chunks_JRDesignQuery_)) size] > 0) {
    chunkArray = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(chunks_JRDesignQuery_)) size] type:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRQueryChunk)]];
    (void) [((id<JavaUtilList>) nil_chk(chunks_JRDesignQuery_)) toArrayWithNSObjectArray:chunkArray];
  }
  return chunkArray;
}

- (void)setChunksWithJavaUtilList:(id<JavaUtilList>)chunks {
  self.chunks_JRDesignQuery = chunks;
}

- (void)addChunkWithOrgOssPdfreporterEngineDesignJRDesignQueryChunk:(OrgOssPdfreporterEngineDesignJRDesignQueryChunk *)chunk {
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignQuery)) addWithId:chunk];
}

- (void)addTextChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignQueryChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignQueryChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRQueryChunk_TYPE_TEXT];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignQuery)) addWithId:chunk];
}

- (void)addParameterChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignQueryChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignQueryChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRQueryChunk_TYPE_PARAMETER];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignQuery)) addWithId:chunk];
}

- (void)addParameterClauseChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignQueryChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignQueryChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRQueryChunk_TYPE_PARAMETER_CLAUSE];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignQuery)) addWithId:chunk];
}

- (void)addClauseChunkWithNSStringArray:(IOSObjectArray *)tokens {
  OrgOssPdfreporterEngineDesignJRDesignQueryChunk *chunk = [[OrgOssPdfreporterEngineDesignJRDesignQueryChunk alloc] init];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTypeWithChar:OrgOssPdfreporterEngineJRQueryChunk_TYPE_CLAUSE_TOKENS];
  [((OrgOssPdfreporterEngineDesignJRDesignQueryChunk *) nil_chk(chunk)) setTokensWithNSStringArray:tokens];
  [((id<JavaUtilList>) nil_chk(self.chunks_JRDesignQuery)) addWithId:chunk];
}

- (id<OrgOssPdfreporterEngineUtilJRQueryChunkHandler>)chunkAdder {
  if (chunkAdder__ == nil) {
    chunkAdder__ = [[OrgOssPdfreporterEngineDesignJRDesignQuery_$1 alloc] initWithOrgOssPdfreporterEngineDesignJRDesignQuery:self];
  }
  return chunkAdder__;
}

- (void)setTextWithNSString:(NSString *)text {
  id old = [self getText];
  chunks_JRDesignQuery_ = [[JavaUtilArrayList alloc] init];
  [((OrgOssPdfreporterEngineUtilJRQueryParser *) nil_chk([OrgOssPdfreporterEngineUtilJRQueryParser instance])) parseWithNSString:text withOrgOssPdfreporterEngineUtilJRQueryChunkHandler:[self chunkAdder]];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_TEXT_ withId:old withId:[self getText]];
}

- (void)setLanguageWithNSString:(NSString *)language {
  NSString *oldValue = self.language;
  self.language = language;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getPropertyChangeSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignQuery_PROPERTY_LANGUAGE_ withId:oldValue withId:self.language];
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getPropertyChangeSupport {
  return [self getEventSupport];
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignQuery *clone = (OrgOssPdfreporterEngineDesignJRDesignQuery *) [super clone];
  ((OrgOssPdfreporterEngineDesignJRDesignQuery *) nil_chk(clone)).chunks_JRDesignQuery = [OrgOssPdfreporterEngineUtilJRCloneUtils cloneListWithJavaUtilList:chunks_JRDesignQuery_];
  ((OrgOssPdfreporterEngineDesignJRDesignQuery *) nil_chk(clone)).eventSupport = nil;
  ((OrgOssPdfreporterEngineDesignJRDesignQuery *) nil_chk(clone)).chunkAdder_ = nil;
  return clone;
}

- (id)init {
  if ((self = [super init])) {
    chunks_JRDesignQuery_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignQuery *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignQuery *) copy;
  typedCopy.eventSupport = eventSupport_;
  typedCopy.chunks_JRDesignQuery = chunks_JRDesignQuery_;
  typedCopy.chunkAdder_ = chunkAdder__;
}

@end
@implementation OrgOssPdfreporterEngineDesignJRDesignQuery_$1

@synthesize this$0 = this$0_;

- (void)handleParameterChunkWithNSString:(NSString *)text {
  [this$0_ addParameterChunkWithNSString:text];
}

- (void)handleParameterClauseChunkWithNSString:(NSString *)text {
  [this$0_ addParameterClauseChunkWithNSString:text];
}

- (void)handleTextChunkWithNSString:(NSString *)text {
  [this$0_ addTextChunkWithNSString:text];
}

- (void)handleClauseChunkWithNSStringArray:(IOSObjectArray *)tokens {
  [this$0_ addClauseChunkWithNSStringArray:tokens];
}

- (id)initWithOrgOssPdfreporterEngineDesignJRDesignQuery:(OrgOssPdfreporterEngineDesignJRDesignQuery *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignQuery_$1 *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignQuery_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
