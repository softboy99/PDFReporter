//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRSourceCompileTask.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/lang/Integer.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstab.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/design/JRDesignDataset.h"
#include "org/oss/pdfreporter/engine/design/JRSourceCompileTask.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"

@implementation OrgOssPdfreporterEngineDesignJRSourceCompileTask

@synthesize jasperDesign = jasperDesign_;
@synthesize unitName = unitName_;
@synthesize expressionCollector = expressionCollector_;
@synthesize parametersMap = parametersMap_;
@synthesize fieldsMap = fieldsMap_;
@synthesize variablesMap = variablesMap_;
@synthesize variables = variables_;
@synthesize expressions = expressions_;
@synthesize onlyDefaultEvaluation = onlyDefaultEvaluation_;

- (id)initOrgOssPdfreporterEngineDesignJRSourceCompileTaskWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                                                           withNSString:(NSString *)unitName
                                                       withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector
                                                                                        withJavaUtilMap:(id<JavaUtilMap>)parametersMap
                                                                                        withJavaUtilMap:(id<JavaUtilMap>)fieldsMap
                                                                                        withJavaUtilMap:(id<JavaUtilMap>)variablesMap
                                                             withOrgOssPdfreporterEngineJRVariableArray:(IOSObjectArray *)variables
                                                                                               withBOOL:(BOOL)onlyDefaultEvaluation {
  if ((self = [super init])) {
    self.jasperDesign = jasperDesign;
    self.unitName = unitName;
    self.expressionCollector = expressionCollector;
    self.parametersMap = parametersMap;
    self.fieldsMap = fieldsMap;
    self.variablesMap = variablesMap;
    self.variables = variables;
    self.expressions = [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector)) getExpressions];
    self.onlyDefaultEvaluation = onlyDefaultEvaluation;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                           withNSString:(NSString *)unitName
       withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector
                                        withJavaUtilMap:(id<JavaUtilMap>)parametersMap
                                        withJavaUtilMap:(id<JavaUtilMap>)fieldsMap
                                        withJavaUtilMap:(id<JavaUtilMap>)variablesMap
             withOrgOssPdfreporterEngineJRVariableArray:(IOSObjectArray *)variables
                                               withBOOL:(BOOL)onlyDefaultEvaluation {
  return [self initOrgOssPdfreporterEngineDesignJRSourceCompileTaskWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:unitName withOrgOssPdfreporterEngineJRExpressionCollector:expressionCollector withJavaUtilMap:parametersMap withJavaUtilMap:fieldsMap withJavaUtilMap:variablesMap withOrgOssPdfreporterEngineJRVariableArray:variables withBOOL:onlyDefaultEvaluation];
}

- (id)initWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
       withOrgOssPdfreporterEngineDesignJRDesignDataset:(OrgOssPdfreporterEngineDesignJRDesignDataset *)dataset
       withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector
                                           withNSString:(NSString *)unitName {
  return [self initOrgOssPdfreporterEngineDesignJRSourceCompileTaskWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:unitName withOrgOssPdfreporterEngineJRExpressionCollector:[((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector)) getCollectorWithOrgOssPdfreporterEngineJRDataset:dataset] withJavaUtilMap:[((OrgOssPdfreporterEngineDesignJRDesignDataset *) nil_chk(dataset)) getParametersMap] withJavaUtilMap:[((OrgOssPdfreporterEngineDesignJRDesignDataset *) nil_chk(dataset)) getFieldsMap] withJavaUtilMap:[((OrgOssPdfreporterEngineDesignJRDesignDataset *) nil_chk(dataset)) getVariablesMap] withOrgOssPdfreporterEngineJRVariableArray:[((OrgOssPdfreporterEngineDesignJRDesignDataset *) nil_chk(dataset)) getVariables] withBOOL:NO];
}

- (id)initWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
   withOrgOssPdfreporterCrosstabsDesignJRDesignCrosstab:(OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *)crosstab
       withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector
                                           withNSString:(NSString *)unitName {
  return [self initOrgOssPdfreporterEngineDesignJRSourceCompileTaskWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:unitName withOrgOssPdfreporterEngineJRExpressionCollector:[((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector)) getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab] withJavaUtilMap:[((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) getParametersMap] withJavaUtilMap:nil withJavaUtilMap:[((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) getVariablesMap] withOrgOssPdfreporterEngineJRVariableArray:[((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) getVariables] withBOOL:YES];
}

- (id<JavaUtilList>)getExpressions {
  return expressions_;
}

- (id<JavaUtilMap>)getFieldsMap {
  return fieldsMap_;
}

- (OrgOssPdfreporterEngineDesignJasperDesign *)getJasperDesign {
  return jasperDesign_;
}

- (IOSObjectArray *)getImports {
  return [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign_)) getImports];
}

- (BOOL)isOnlyDefaultEvaluation {
  return onlyDefaultEvaluation_;
}

- (id<JavaUtilMap>)getParametersMap {
  return parametersMap_;
}

- (NSString *)getUnitName {
  return unitName_;
}

- (IOSObjectArray *)getVariables {
  return variables_;
}

- (id<JavaUtilMap>)getVariablesMap {
  return variablesMap_;
}

- (JavaLangInteger *)getExpressionIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector_)) getExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpressionWithInt:(int)expressionId {
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector_)) getExpressionWithInt:expressionId];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRSourceCompileTask *typedCopy = (OrgOssPdfreporterEngineDesignJRSourceCompileTask *) copy;
  typedCopy.jasperDesign = jasperDesign_;
  typedCopy.unitName = unitName_;
  typedCopy.expressionCollector = expressionCollector_;
  typedCopy.parametersMap = parametersMap_;
  typedCopy.fieldsMap = fieldsMap_;
  typedCopy.variablesMap = variablesMap_;
  typedCopy.variables = variables_;
  typedCopy.expressions = expressions_;
  typedCopy.onlyDefaultEvaluation = onlyDefaultEvaluation_;
}

@end
