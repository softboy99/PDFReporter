//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignGraphicElement.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBasePen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/design/JRDesignGraphicElement.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/FillEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineDesignJRDesignGraphicElement

@synthesize linePen = linePen_;
@synthesize fillValue = fillValue_;

- (id)initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  if ((self = [super initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    linePen_ = [[OrgOssPdfreporterEngineBaseJRBasePen alloc] initWithOrgOssPdfreporterEngineJRPenContainer:self];
  }
  return self;
}

- (id<OrgOssPdfreporterEngineJRPen>)getLinePen {
  return linePen_;
}

- (OrgOssPdfreporterEngineTypeFillEnumEnum *)getFillValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFillValueWithOrgOssPdfreporterEngineJRCommonGraphicElement:self];
}

- (OrgOssPdfreporterEngineTypeFillEnumEnum *)getOwnFillValue {
  return self.fillValue;
}

- (void)setFillWithOrgOssPdfreporterEngineTypeFillEnumEnum:(OrgOssPdfreporterEngineTypeFillEnumEnum *)fillValue {
  OrgOssPdfreporterEngineTypeFillEnumEnum *old = self.fillValue;
  self.fillValue = fillValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:[OrgOssPdfreporterEngineBaseJRBaseStyle PROPERTY_FILL] withId:old withId:self.fillValue];
}

- (JavaLangFloat *)getDefaultLineWidth {
  return [OrgOssPdfreporterEngineJRPen LINE_WIDTH_1];
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignGraphicElement *clone = (OrgOssPdfreporterEngineDesignJRDesignGraphicElement *) [super clone];
  ((OrgOssPdfreporterEngineDesignJRDesignGraphicElement *) nil_chk(clone)).linePen = [((id<OrgOssPdfreporterEngineJRPen>) nil_chk(linePen_)) cloneWithOrgOssPdfreporterEngineJRPenContainer:clone];
  return clone;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineDesignJRDesignGraphicElement *typedCopy = (OrgOssPdfreporterEngineDesignJRDesignGraphicElement *) copy;
  typedCopy.linePen = linePen_;
  typedCopy.fillValue = fillValue_;
}

@end
