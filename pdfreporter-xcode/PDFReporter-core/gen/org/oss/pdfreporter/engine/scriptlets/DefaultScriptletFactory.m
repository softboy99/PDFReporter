//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/scriptlets/DefaultScriptletFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRAbstractScriptlet.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRScriptlet.h"
#include "org/oss/pdfreporter/engine/scriptlets/DefaultScriptletFactory.h"
#include "org/oss/pdfreporter/engine/scriptlets/ScriptletFactoryContext.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"

@implementation OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory

static OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory * OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory_INSTANCE_;

+ (OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory *)INSTANCE {
  return OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory_INSTANCE_;
}

- (id)init {
  return [super init];
}

+ (OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory *)getInstance {
  return OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory_INSTANCE_;
}

- (id<JavaUtilList>)getScripletsWithOrgOssPdfreporterEngineScriptletsScriptletFactoryContext:(OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *)context {
  id<JavaUtilList> scriptlets = [[JavaUtilArrayList alloc] init];
  OrgOssPdfreporterEngineJRAbstractScriptlet *scriptlet = (OrgOssPdfreporterEngineJRAbstractScriptlet *) [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getParameterValues])) getWithId:[OrgOssPdfreporterEngineJRParameter REPORT_SCRIPTLET]];
  if (scriptlet == nil) {
    NSString *scriptletClassName = [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getDataset])) getScriptletClass];
    if (scriptletClassName != nil) {
      scriptlet = [self getScriptletWithNSString:scriptletClassName];
      (void) [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getParameterValues])) putWithId:[OrgOssPdfreporterEngineJRParameter REPORT_SCRIPTLET] withId:scriptlet];
    }
  }
  if (scriptlet != nil) {
    [((id<JavaUtilList>) nil_chk(scriptlets)) addWithId:scriptlet];
  }
  IOSObjectArray *scriptletsArray = [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getDataset])) getScriptlets];
  if (scriptletsArray != nil) {
    for (int i = 0; i < (int) [scriptletsArray count]; i++) {
      NSString *paramName = [NSString stringWithFormat:@"%@_SCRIPTLET", [((id<OrgOssPdfreporterEngineJRScriptlet>) nil_chk([scriptletsArray objectAtIndex:i])) getName]];
      scriptlet = (OrgOssPdfreporterEngineJRAbstractScriptlet *) [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getParameterValues])) getWithId:paramName];
      if (scriptlet == nil) {
        scriptlet = [self getScriptletWithNSString:[((id<OrgOssPdfreporterEngineJRScriptlet>) nil_chk([((IOSObjectArray *) nil_chk(scriptletsArray)) objectAtIndex:i])) getValueClassName]];
        (void) [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) nil_chk(context)) getParameterValues])) putWithId:paramName withId:scriptlet];
      }
      [((id<JavaUtilList>) nil_chk(scriptlets)) addWithId:scriptlet];
    }
  }
  return scriptlets;
}

- (OrgOssPdfreporterEngineJRAbstractScriptlet *)getScriptletWithNSString:(NSString *)scriptletClassName {
  OrgOssPdfreporterEngineJRAbstractScriptlet *scriptlet = nil;
  @try {
    IOSClass *scriptletClass = [OrgOssPdfreporterEngineUtilJRClassLoader loadClassForNameWithNSString:scriptletClassName];
    scriptlet = (OrgOssPdfreporterEngineJRAbstractScriptlet *) [((IOSClass *) nil_chk(scriptletClass)) newInstance];
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:[NSString stringWithFormat:@"Error loading scriptlet class : %@", scriptletClassName] withJavaLangThrowable:e];
  }
  @catch (JavaLangException *e) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:[NSString stringWithFormat:@"Error creating scriptlet class instance : %@", scriptletClassName] withJavaLangThrowable:e];
  }
  return scriptlet;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory class]) {
    OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory_INSTANCE_ = [[OrgOssPdfreporterEngineScriptletsDefaultScriptletFactory alloc] init];
  }
}

@end
