//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/scriptlets/ScriptletFactoryContext.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/scriptlets/ScriptletFactoryContext.h"

@implementation OrgOssPdfreporterEngineScriptletsScriptletFactoryContext

@synthesize jasperReportsContext = jasperReportsContext_;
@synthesize jasperReport = jasperReport_;
@synthesize dataset = dataset_;
@synthesize parameterValues = parameterValues_;

- (id)initOrgOssPdfreporterEngineScriptletsScriptletFactoryContextWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                             withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                                                                                  withJavaUtilMap:(id<JavaUtilMap>)parameterValues {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
    self.jasperReport = (OrgOssPdfreporterEngineJasperReport *) [((id<JavaUtilMap>) nil_chk(parameterValues)) getWithId:[OrgOssPdfreporterEngineJRParameter JASPER_REPORT]];
    self.dataset = dataset;
    self.parameterValues = parameterValues;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                     withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                          withJavaUtilMap:(id<JavaUtilMap>)parameterValues {
  return [self initOrgOssPdfreporterEngineScriptletsScriptletFactoryContextWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJRDataset:dataset withJavaUtilMap:parameterValues];
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)parameterValues
withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  return [self initOrgOssPdfreporterEngineScriptletsScriptletFactoryContextWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance] withOrgOssPdfreporterEngineJRDataset:dataset withJavaUtilMap:parameterValues];
}

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext {
  return jasperReportsContext_;
}

- (OrgOssPdfreporterEngineJasperReport *)getJasperReport {
  return jasperReport_;
}

- (id<JavaUtilMap>)getParameterValues {
  return parameterValues_;
}

- (id<OrgOssPdfreporterEngineJRDataset>)getDataset {
  return dataset_;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *typedCopy = (OrgOssPdfreporterEngineScriptletsScriptletFactoryContext *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
  typedCopy.jasperReport = jasperReport_;
  typedCopy.dataset = dataset_;
  typedCopy.parameterValues = parameterValues_;
}

@end
