//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/data/AbstractXmlDataSource.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/Boolean.h"
#include "java/lang/StringBuffer.h"
#include "org/oss/pdfreporter/engine/JRField.h"
#include "org/oss/pdfreporter/engine/data/AbstractXmlDataSource.h"
#include "org/oss/pdfreporter/engine/data/JRAbstractTextDataSource.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NodeList.h"

@implementation OrgOssPdfreporterEngineDataAbstractXmlDataSource

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getCurrentNode {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getSelectObjectWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)currentNode
                                               withNSString:(NSString *)expression {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getFieldValueWithOrgOssPdfreporterEngineJRField:(id<OrgOssPdfreporterEngineJRField>)jrField {
  if ([self getCurrentNode] == nil) {
    return nil;
  }
  NSString *expression = [((id<OrgOssPdfreporterEngineJRField>) nil_chk(jrField)) getDescription];
  if (expression == nil || [((NSString *) nil_chk(expression)) length] == 0) {
    return nil;
  }
  id value = nil;
  IOSClass *valueClass = [((id<OrgOssPdfreporterEngineJRField>) nil_chk(jrField)) getValueClass];
  id selectedObject = [self getSelectObjectWithOrgOssPdfreporterUsesOrgW3cDomNode:[self getCurrentNode] withNSString:expression];
  if ([IOSClass classWithClass:[NSObject class]] != valueClass) {
    if (selectedObject != nil) {
      if ([selectedObject conformsToProtocol: @protocol(OrgOssPdfreporterUsesOrgW3cDomNode)]) {
        NSString *text = [self getTextWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>) selectedObject];
        if (text != nil) {
          value = [self convertStringValueWithNSString:text withIOSClass:valueClass];
        }
      }
      else if ([selectedObject isKindOfClass:[JavaLangBoolean class]] && [((IOSClass *) nil_chk(valueClass)) isEqual:[IOSClass classWithClass:[JavaLangBoolean class]]]) {
        value = selectedObject;
      }
      else if ([selectedObject isKindOfClass:[NSNumber class]] && [[IOSClass classWithClass:[NSNumber class]] isAssignableFrom:valueClass]) {
        value = [self convertNumberWithNSNumber:(NSNumber *) selectedObject withIOSClass:valueClass];
      }
      else {
        NSString *text = [selectedObject description];
        value = [self convertStringValueWithNSString:text withIOSClass:valueClass];
      }
    }
  }
  else {
    value = selectedObject;
  }
  return value;
}

- (OrgOssPdfreporterEngineDataAbstractXmlDataSource *)subDataSourceWithNSString:(NSString *)selectExpr {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgOssPdfreporterEngineDataAbstractXmlDataSource *)subDataSource {
  return [self subDataSourceWithNSString:@"."];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomDocument>)subDocument {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgOssPdfreporterEngineDataAbstractXmlDataSource *)dataSourceWithNSString:(NSString *)selectExpr {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgOssPdfreporterEngineDataAbstractXmlDataSource *)dataSource {
  return [self dataSourceWithNSString:@"."];
}

- (NSString *)getTextWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)node {
  if (![((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) hasChildNodes]) {
    return [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getNodeValue];
  }
  JavaLangStringBuffer *result = [[JavaLangStringBuffer alloc] init];
  id<OrgOssPdfreporterUsesOrgW3cDomNodeList> list = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getChildNodes];
  for (int i = 0; i < [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(list)) getLength]; i++) {
    id<OrgOssPdfreporterUsesOrgW3cDomNode> subnode = [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(list)) itemWithInt:i];
    if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(subnode)) getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_TEXT_NODE) {
      NSString *value = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(subnode)) getNodeValue];
      if (value != nil) {
        (void) [((JavaLangStringBuffer *) nil_chk(result)) appendWithNSString:value];
      }
    }
    else if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(subnode)) getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_CDATA_SECTION_NODE) {
      NSString *value = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(subnode)) getNodeValue];
      if (value != nil) {
        (void) [((JavaLangStringBuffer *) nil_chk(result)) appendWithNSString:value];
      }
    }
    else if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(subnode)) getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ENTITY_REFERENCE_NODE) {
      NSString *value = [self getTextWithOrgOssPdfreporterUsesOrgW3cDomNode:subnode];
      if (value != nil) {
        (void) [((JavaLangStringBuffer *) nil_chk(result)) appendWithNSString:value];
      }
    }
  }
  return [((JavaLangStringBuffer *) nil_chk(result)) description];
}

- (void)moveFirst {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (BOOL)next {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  return [super init];
}

@end
