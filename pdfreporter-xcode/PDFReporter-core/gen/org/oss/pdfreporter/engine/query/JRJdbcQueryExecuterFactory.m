//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/query/JRJdbcQueryExecuterFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/query/JRJdbcQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRJdbcQueryExecuterFactory.h"
#include "org/oss/pdfreporter/engine/query/JRQueryExecuter.h"

@implementation OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory

static JavaUtilLoggingLogger * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger_;
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_FETCH_SIZE_ = @"net.sf.jasperreports.jdbc.fetch.size";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_RESULT_SET_TYPE_ = @"net.sf.jasperreports.jdbc.result.set.type";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_CONCURRENCY_ = @"net.sf.jasperreports.jdbc.concurrency";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_HOLDABILITY_ = @"net.sf.jasperreports.jdbc.holdability";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_MAX_FIELD_SIZE_ = @"net.sf.jasperreports.jdbc.max.field.size";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_CACHED_ROWSET_ = @"net.sf.jasperreports.jdbc.cached.rowset";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_TIME_ZONE_ = @"net.sf.jasperreports.jdbc.time.zone";
static NSString * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_QUERY_LANGUAGE_SQL_ = @"sql";
static IOSObjectArray * OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_;

+ (JavaUtilLoggingLogger *)logger {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger_;
}

+ (NSString *)PROPERTY_JDBC_FETCH_SIZE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_FETCH_SIZE_;
}

+ (NSString *)PROPERTY_JDBC_RESULT_SET_TYPE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_RESULT_SET_TYPE_;
}

+ (NSString *)PROPERTY_JDBC_CONCURRENCY {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_CONCURRENCY_;
}

+ (NSString *)PROPERTY_JDBC_HOLDABILITY {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_HOLDABILITY_;
}

+ (NSString *)PROPERTY_JDBC_MAX_FIELD_SIZE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_MAX_FIELD_SIZE_;
}

+ (NSString *)PROPERTY_CACHED_ROWSET {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_CACHED_ROWSET_;
}

+ (NSString *)PROPERTY_TIME_ZONE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_TIME_ZONE_;
}

+ (NSString *)QUERY_LANGUAGE_SQL {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_QUERY_LANGUAGE_SQL_;
}

+ (IOSObjectArray *)queryParameterClassNames {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_;
}

- (id<OrgOssPdfreporterEngineQueryJRQueryExecuter>)createQueryExecuterWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                                 withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)parameters {
  return [[OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJRDataset:dataset withJavaUtilMap:parameters];
}

- (IOSObjectArray *)getBuiltinParameters {
  return nil;
}

- (BOOL)supportsQueryParameterTypeWithNSString:(NSString *)className_ {
  BOOL supported = [JavaUtilArrays binarySearchWithNSObjectArray:OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_ withId:className_] >= 0;
  if (!supported) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger_)) warningWithNSString:[NSString stringWithFormat:@"Parameter class '%@' not found in supported types: %@", className_, [JavaUtilArrays asListWithNSObjectArray:OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_]]];
  }
  return supported;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory class]) {
    OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory class]] getName]];
    {
      OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_ = [IOSObjectArray arrayWithObjects:(id[]){ @"java.lang.Object", @"java.lang.Boolean", @"java.lang.Byte", @"java.lang.Double", @"java.lang.Float", @"java.lang.Integer", @"java.lang.Long", @"java.lang.Short", @"java.math.BigDecimal", @"java.lang.String", @"java.util.Date", @"ch.digireport.sql.IDateTime", @"ch.digireport.sql.IDate", @"ch.digireport.sql.ITimestamp", @"ch.digireport.sql.ITime" } count:15 type:[IOSClass classWithClass:[NSString class]]];
      [JavaUtilArrays sortWithNSObjectArray:OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames_];
    }
  }
}

@end
