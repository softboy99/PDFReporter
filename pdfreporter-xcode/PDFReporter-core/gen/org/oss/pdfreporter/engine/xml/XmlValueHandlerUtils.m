//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/XmlValueHandlerUtils.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/xml/XmlValueHandler.h"
#include "org/oss/pdfreporter/engine/xml/XmlValueHandlerUtils.h"
#include "org/oss/pdfreporter/extensions/ExtensionsEnvironment.h"
#include "org/oss/pdfreporter/extensions/ExtensionsRegistry.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.h"

@implementation OrgOssPdfreporterEngineXmlXmlValueHandlerUtils

static OrgOssPdfreporterEngineXmlXmlValueHandlerUtils * OrgOssPdfreporterEngineXmlXmlValueHandlerUtils_INSTANCE_;

@synthesize cache = cache_;

+ (OrgOssPdfreporterEngineXmlXmlValueHandlerUtils *)INSTANCE {
  return OrgOssPdfreporterEngineXmlXmlValueHandlerUtils_INSTANCE_;
}

+ (OrgOssPdfreporterEngineXmlXmlValueHandlerUtils *)instance {
  return OrgOssPdfreporterEngineXmlXmlValueHandlerUtils_INSTANCE_;
}

- (id)init {
  if ((self = [super init])) {
    cache_ = [[OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap alloc] initWithInt:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK withInt:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD];
  }
  return self;
}

- (id<JavaUtilList>)getHandlers {
  id cacheKey = [OrgOssPdfreporterExtensionsExtensionsEnvironment getExtensionsCacheKey];
  @synchronized (cache_) {
    id<JavaUtilList> handlers = (id<JavaUtilList>) [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *) nil_chk(cache_)) getWithId:cacheKey];
    if (handlers == nil) {
      id<OrgOssPdfreporterExtensionsExtensionsRegistry> extensionsRegistry = [OrgOssPdfreporterExtensionsExtensionsEnvironment getExtensionsRegistry];
      handlers = [((id<OrgOssPdfreporterExtensionsExtensionsRegistry>) nil_chk(extensionsRegistry)) getExtensionsWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineXmlXmlValueHandler)]];
      (void) [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *) nil_chk(cache_)) putWithId:cacheKey withId:handlers];
    }
    return handlers;
  }
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineXmlXmlValueHandlerUtils class]) {
    OrgOssPdfreporterEngineXmlXmlValueHandlerUtils_INSTANCE_ = [[OrgOssPdfreporterEngineXmlXmlValueHandlerUtils alloc] init];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineXmlXmlValueHandlerUtils *typedCopy = (OrgOssPdfreporterEngineXmlXmlValueHandlerUtils *) copy;
  typedCopy.cache = cache_;
}

@end
