//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRBoxFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRBoxContainer.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/type/PenEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/engine/util/JRPenUtil.h"
#include "org/oss/pdfreporter/engine/xml/JRBoxFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRBoxFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  id<OrgOssPdfreporterEngineJRBoxContainer> boxContainer = (id<OrgOssPdfreporterEngineJRBoxContainer>) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek];
  id<OrgOssPdfreporterEngineJRLineBox> box = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getLineBox];
  [OrgOssPdfreporterEngineXmlJRBoxFactory setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes:atts withOrgOssPdfreporterEngineJRLineBox:box];
  return box;
}

+ (void)setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts
                              withOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)box {
  OrgOssPdfreporterEngineTypePenEnumEnum *border = [OrgOssPdfreporterEngineTypePenEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_border]]];
  if (border != nil) {
    [OrgOssPdfreporterEngineUtilJRPenUtil setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnumEnum:border withOrgOssPdfreporterEngineJRPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getPen]];
  }
  id<OrgOssPdfreporterGeometryIColor> borderColor = [OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_borderColor]] withOrgOssPdfreporterGeometryIColor:nil];
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  NSString *padding = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_padding]];
  if (padding != nil && [((NSString *) nil_chk(padding)) length] > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setPaddingWithInt:[JavaLangInteger parseIntWithNSString:padding]];
  }
  border = [OrgOssPdfreporterEngineTypePenEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_topBorder]]];
  if (border != nil) {
    [OrgOssPdfreporterEngineUtilJRPenUtil setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnumEnum:border withOrgOssPdfreporterEngineJRPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getTopPen]];
  }
  borderColor = [OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_topBorderColor]] withOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor black]];
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getTopPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_topPadding]];
  if (padding != nil && [((NSString *) nil_chk(padding)) length] > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setTopPaddingWithInt:[JavaLangInteger parseIntWithNSString:padding]];
  }
  border = [OrgOssPdfreporterEngineTypePenEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_leftBorder]]];
  if (border != nil) {
    [OrgOssPdfreporterEngineUtilJRPenUtil setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnumEnum:border withOrgOssPdfreporterEngineJRPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getLeftPen]];
  }
  borderColor = [OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_leftBorderColor]] withOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor black]];
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getLeftPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_leftPadding]];
  if (padding != nil && [((NSString *) nil_chk(padding)) length] > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setLeftPaddingWithInt:[JavaLangInteger parseIntWithNSString:padding]];
  }
  border = [OrgOssPdfreporterEngineTypePenEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_bottomBorder]]];
  if (border != nil) {
    [OrgOssPdfreporterEngineUtilJRPenUtil setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnumEnum:border withOrgOssPdfreporterEngineJRPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getBottomPen]];
  }
  borderColor = [OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_bottomBorderColor]] withOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor black]];
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getBottomPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_bottomPadding]];
  if (padding != nil && [((NSString *) nil_chk(padding)) length] > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setBottomPaddingWithInt:[JavaLangInteger parseIntWithNSString:padding]];
  }
  border = [OrgOssPdfreporterEngineTypePenEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_rightBorder]]];
  if (border != nil) {
    [OrgOssPdfreporterEngineUtilJRPenUtil setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnumEnum:border withOrgOssPdfreporterEngineJRPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getRightPen]];
  }
  borderColor = [OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_rightBorderColor]] withOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor black]];
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getRightPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_rightPadding]];
  if (padding != nil && [((NSString *) nil_chk(padding)) length] > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setRightPaddingWithInt:[JavaLangInteger parseIntWithNSString:padding]];
  }
}

- (id)init {
  return [super init];
}

@end
