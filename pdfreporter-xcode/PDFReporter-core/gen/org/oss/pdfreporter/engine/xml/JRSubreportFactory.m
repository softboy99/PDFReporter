//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRSubreportFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "org/oss/pdfreporter/engine/design/JRDesignSubreport.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/xml/JRSubreportFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRSubreportFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 2];
  OrgOssPdfreporterEngineDesignJRDesignSubreport *subreport = [[OrgOssPdfreporterEngineDesignJRDesignSubreport alloc] initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:jasperDesign];
  NSString *isUsingCache = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_isUsingCache]];
  if (isUsingCache != nil && [((NSString *) nil_chk(isUsingCache)) length] > 0) {
    [((OrgOssPdfreporterEngineDesignJRDesignSubreport *) nil_chk(subreport)) setUsingCacheWithJavaLangBoolean:[JavaLangBoolean valueOfWithNSString:isUsingCache]];
  }
  NSString *runToBottomAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_runToBottom]];
  if (runToBottomAttr != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignSubreport *) nil_chk(subreport)) setRunToBottomWithJavaLangBoolean:[JavaLangBoolean valueOfWithNSString:runToBottomAttr]];
  }
  return subreport;
}

- (id)init {
  return [super init];
}

@end
