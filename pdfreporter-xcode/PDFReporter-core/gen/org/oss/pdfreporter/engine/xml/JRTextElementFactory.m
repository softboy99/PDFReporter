//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRTextElementFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "org/oss/pdfreporter/engine/JRCommonText.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/design/JRDesignTextElement.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRTextElementFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRTextElementFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineDesignJRDesignTextElement *textElement = (OrgOssPdfreporterEngineDesignJRDesignTextElement *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek];
  OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *horizontalAlignment = [OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_textAlignment]]];
  if (horizontalAlignment != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum:horizontalAlignment];
  }
  OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *verticalAlignment = [OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_verticalAlignment]]];
  if (verticalAlignment != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnumEnum:verticalAlignment];
  }
  OrgOssPdfreporterEngineTypeRotationEnumEnum *rotation = [OrgOssPdfreporterEngineTypeRotationEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_rotation]]];
  if (rotation != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) setRotationWithOrgOssPdfreporterEngineTypeRotationEnumEnum:rotation];
  }
  OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *lineSpacing = [OrgOssPdfreporterEngineTypeLineSpacingEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_lineSpacing]]];
  if (lineSpacing != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:lineSpacing];
  }
  [((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) setMarkupWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_markup]]];
  NSString *isStyledText = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_isStyledText]];
  if (isStyledText != nil && [((NSString *) nil_chk(isStyledText)) length] > 0) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextElement *) nil_chk(textElement)) setMarkupWithNSString:[JavaLangBoolean valueOfWithNSString:isStyledText] ? [OrgOssPdfreporterEngineJRCommonText MARKUP_STYLED_TEXT] : [OrgOssPdfreporterEngineJRCommonText MARKUP_NONE]];
  }
  return textElement;
}

- (id)init {
  return [super init];
}

@end
