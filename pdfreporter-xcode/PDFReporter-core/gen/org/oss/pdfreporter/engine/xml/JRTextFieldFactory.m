//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRTextFieldFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/design/JRDesignGroup.h"
#include "org/oss/pdfreporter/engine/design/JRDesignTextField.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRTextFieldFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlLoader.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRTextFieldFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineXmlJRXmlLoader *xmlLoader = (OrgOssPdfreporterEngineXmlJRXmlLoader *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 1];
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 2];
  OrgOssPdfreporterEngineDesignJRDesignTextField *textField = [[OrgOssPdfreporterEngineDesignJRDesignTextField alloc] initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:jasperDesign];
  NSString *isStretchWithOverflow = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_isStretchWithOverflow]];
  if (isStretchWithOverflow != nil && [((NSString *) nil_chk(isStretchWithOverflow)) length] > 0) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setStretchWithOverflowWithBOOL:[[JavaLangBoolean valueOfWithNSString:isStretchWithOverflow] booleanValue]];
  }
  OrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum *evaluationTime = [OrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_evaluationTime]]];
  if (evaluationTime != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setEvaluationTimeWithOrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum:evaluationTime];
  }
  if ([((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) getEvaluationTimeValue] == [OrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum GROUP]) {
    [((OrgOssPdfreporterEngineXmlJRXmlLoader *) nil_chk(xmlLoader)) addGroupEvaluatedTextFieldWithOrgOssPdfreporterEngineDesignJRDesignTextField:textField];
    NSString *groupName = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_evaluationGroup]];
    if (groupName != nil) {
      OrgOssPdfreporterEngineDesignJRDesignGroup *group = [[OrgOssPdfreporterEngineDesignJRDesignGroup alloc] init];
      [((OrgOssPdfreporterEngineDesignJRDesignGroup *) nil_chk(group)) setNameWithNSString:groupName];
      [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setEvaluationGroupWithOrgOssPdfreporterEngineJRGroup:group];
    }
  }
  [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setPatternWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_pattern]]];
  NSString *isBlankWhenNull = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_isBlankWhenNull]];
  if (isBlankWhenNull != nil && [((NSString *) nil_chk(isBlankWhenNull)) length] > 0) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setBlankWhenNullWithJavaLangBoolean:[JavaLangBoolean valueOfWithNSString:isBlankWhenNull]];
  }
  [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setLinkTypeWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_hyperlinkType]]];
  [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setLinkTargetWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_hyperlinkTarget]]];
  NSString *bookmarkLevelAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_bookmarkLevel]];
  if (bookmarkLevelAttr != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignTextField *) nil_chk(textField)) setBookmarkLevelWithInt:[JavaLangInteger parseIntWithNSString:bookmarkLevelAttr]];
  }
  return textField;
}

- (id)init {
  return [super init];
}

@end
