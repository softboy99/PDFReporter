//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRXmlDigester.java
//
//  Created by kendra on 9/27/13.
//

#include "java/io/InputStream.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlDigester.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"
#include "org/oss/pdfreporter/repo/DigireportFileResourceLoader.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/DelegatingAbstractDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IInputSource.h"
#include "org/oss/pdfreporter/xml/parsers/factory/IXmlParserFactory.h"

@implementation OrgOssPdfreporterEngineXmlJRXmlDigester

@synthesize delegate_JRXmlDigester = delegate_JRXmlDigester_;
@synthesize internalEntityResources = internalEntityResources_;
@synthesize lastNamespacePrefix = lastNamespacePrefix_;
@synthesize lastPopped_ = lastPopped__;

- (id)initWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
  if ((self = [super initWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:digester])) {
    self.delegate_JRXmlDigester = digester;
    [self initInternalResources];
    [self setXmlEntityResolverWithOrgOssPdfreporterXmlParsersXMLEntityResolver:self];
  }
  return self;
}

- (void)initInternalResources OBJC_METHOD_FAMILY_NONE {
  internalEntityResources_ = [[JavaUtilHashMap alloc] init];
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERREPORT_SYSTEM_ID] withId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERREPORT_DTD]];
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERPRINT_SYSTEM_ID] withId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERPRINT_DTD]];
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERTEMPLATE_SYSTEM_ID] withId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERTEMPLATE_DTD]];
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERREPORT_XSD_SYSTEM_ID] withId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERREPORT_XSD_RESOURCE]];
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERPRINT_XSD_SYSTEM_ID] withId:[OrgOssPdfreporterEngineXmlJRXmlConstants JASPERPRINT_XSD_RESOURCE]];
}

- (void)addInternalEntityResourceWithNSString:(NSString *)systemId
                                 withNSString:(NSString *)resource {
  (void) [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) putWithId:systemId withId:resource];
}

- (id<OrgOssPdfreporterXmlParsersIInputSource>)resolveEntityWithNSString:(NSString *)pubId
                                                            withNSString:(NSString *)systemId {
  id<OrgOssPdfreporterXmlParsersIInputSource> inputSource = nil;
  if (systemId != nil) {
    NSString *resource = [((id<JavaUtilMap>) nil_chk(internalEntityResources_)) getWithId:systemId];
    if (resource == nil) {
      @throw [[JavaLangRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Unknown entity resource with ID: %@", systemId]];
    }
    JavaIoInputStream *is = [OrgOssPdfreporterRepoDigireportFileResourceLoader getInputStreamWithNSString:resource];
    if (is != nil) {
      inputSource = [((id<OrgOssPdfreporterXmlParsersFactoryIXmlParserFactory>) nil_chk([OrgOssPdfreporterRegistryIRegistry getIXmlParserFactory])) newInputSourceWithJavaIoInputStream:is];
    }
  }
  return inputSource;
}

- (void)endElementWithNSString:(NSString *)namespaceURI
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName {
  lastNamespacePrefix_ = [self getNamespacePrefixWithNSString:qName];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(delegate_JRXmlDigester_)) endElementWithNSString:namespaceURI withNSString:localName withNSString:qName];
}

- (NSString *)getNamespacePrefixWithNSString:(NSString *)qName {
  NSString *prefix;
  if (qName == nil) {
    prefix = nil;
  }
  else {
    int sepIdx = [qName indexOf:':'];
    if (sepIdx > 0) {
      prefix = [qName substring:0 endIndex:sepIdx];
    }
    else {
      prefix = nil;
    }
  }
  return prefix;
}

- (NSString *)getLastNamespacePrefix {
  return lastNamespacePrefix_;
}

- (id)pop {
  lastPopped__ = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(delegate_JRXmlDigester_)) pop];
  return lastPopped__;
}

- (void)clearLastPopped {
  lastPopped__ = nil;
}

- (id)lastPopped {
  return lastPopped__;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineXmlJRXmlDigester *typedCopy = (OrgOssPdfreporterEngineXmlJRXmlDigester *) copy;
  typedCopy.delegate_JRXmlDigester = delegate_JRXmlDigester_;
  typedCopy.internalEntityResources = internalEntityResources_;
  typedCopy.lastNamespacePrefix = lastNamespacePrefix_;
  typedCopy.lastPopped_ = lastPopped__;
}

@end
