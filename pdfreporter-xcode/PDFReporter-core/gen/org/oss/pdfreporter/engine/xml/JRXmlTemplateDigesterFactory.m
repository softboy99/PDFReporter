//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRXmlTemplateDigesterFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRSimpleTemplate.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/TabStop.h"
#include "org/oss/pdfreporter/engine/xml/JRBoxFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRParagraphFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRPenFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRTemplateStyleFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlDigester.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlTemplateDigesterFactory.h"
#include "org/oss/pdfreporter/engine/xml/TabStopFactory.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IRuleSet.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/factory/IDigesterFactory.h"
#include "org/oss/pdfreporter/xml/parsers/XMLParseException.h"

@implementation OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory

static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_INCLUDED_TEMPLATE_ = @"jasperTemplate/template";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_STYLE_ = @"jasperTemplate/style";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_STYLE_PEN_ = @"jasperTemplate/style/pen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_ = @"jasperTemplate/style/box";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_PEN_ = @"jasperTemplate/style/box/pen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_TOP_PEN_ = @"jasperTemplate/style/box/topPen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_LEFT_PEN_ = @"jasperTemplate/style/box/leftPen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_BOTTOM_PEN_ = @"jasperTemplate/style/box/bottomPen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_RIGHT_PEN_ = @"jasperTemplate/style/box/rightPen";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_PARAGRAPH_ = @"jasperTemplate/style/paragraph";
static NSString * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_TAB_STOP_ = @"jasperTemplate/style/paragraph/tabStop";
static OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory * OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_instance__;

@synthesize rules = rules_;

+ (NSString *)PATTERN_INCLUDED_TEMPLATE {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_INCLUDED_TEMPLATE_;
}

+ (NSString *)PATTERN_STYLE {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_STYLE_;
}

+ (NSString *)PATTERN_STYLE_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_STYLE_PEN_;
}

+ (NSString *)PATTERN_BOX {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_;
}

+ (NSString *)PATTERN_BOX_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_PEN_;
}

+ (NSString *)PATTERN_BOX_TOP_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_TOP_PEN_;
}

+ (NSString *)PATTERN_BOX_LEFT_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_LEFT_PEN_;
}

+ (NSString *)PATTERN_BOX_BOTTOM_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_BOTTOM_PEN_;
}

+ (NSString *)PATTERN_BOX_RIGHT_PEN {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_BOX_RIGHT_PEN_;
}

+ (NSString *)PATTERN_PARAGRAPH {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_PARAGRAPH_;
}

+ (NSString *)PATTERN_TAB_STOP {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_PATTERN_TAB_STOP_;
}

- (id)init {
  if ((self = [super init])) {
    rules_ = [self readRuleSet];
  }
  return self;
}

+ (OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory *)instance {
  return OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_instance__;
}

- (id<OrgOssPdfreporterUsesOrgApacheDigesterIRuleSet>)readRuleSet {
  return [[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_$1 alloc] init];
}

- (OrgOssPdfreporterEngineXmlJRXmlDigester *)createDigesterWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  @try {
    OrgOssPdfreporterEngineXmlJRXmlDigester *digester = [[OrgOssPdfreporterEngineXmlJRXmlDigester alloc] initWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:[((id<OrgOssPdfreporterUsesOrgApacheDigesterFactoryIDigesterFactory>) nil_chk([OrgOssPdfreporterRegistryIRegistry getIDigesterFactory])) newDigester]];
    [self configureDigesterWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterUsesOrgApacheDigesterIDigester:digester];
    return digester;
  }
  @catch (OrgOssPdfreporterXmlParsersXMLParseException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (OrgOssPdfreporterEngineXmlJRXmlDigester *)createDigester {
  return [self createDigesterWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
}

- (void)configureDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
  [self configureDigesterWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance] withOrgOssPdfreporterUsesOrgApacheDigesterIDigester:digester];
}

- (void)configureDigesterWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                     withOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
  BOOL validating = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([OrgOssPdfreporterEngineJRPropertiesUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext])) getBooleanPropertyWithNSString:[OrgOssPdfreporterEngineJasperReportsContext COMPILER_XML_VALIDATION]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) setErrorHandlerWithOrgOssPdfreporterXmlParsersXMLErrorHandler:self];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) setValidatingWithBOOL:validating];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) setFeatureWithNSString:@"http://xml.org/sax/features/validation" withBOOL:validating];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addRuleSetWithOrgOssPdfreporterUsesOrgApacheDigesterIRuleSet:rules_];
}

- (void)errorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)exception {
  @throw exception;
}

- (void)fatalErrorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)exception {
  @throw exception;
}

- (void)warningWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)exception {
  @throw exception;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory class]) {
    OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_instance__ = [[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory alloc] init];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory *typedCopy = (OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory *) copy;
  typedCopy.rules = rules_;
}

@end
@implementation OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory_$1

- (void)addRuleInstancesWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addObjectCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants TEMPLATE_ELEMENT_ROOT] withIOSClass:[IOSClass classWithClass:[OrgOssPdfreporterEngineJRSimpleTemplate class]]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addCallMethodWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_INCLUDED_TEMPLATE] withNSString:@"addIncludedTemplate" withInt:0];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_STYLE] withIOSClass:[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRTemplateStyleFactory class]]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addSetNextWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_STYLE] withNSString:@"addStyle" withNSString:[[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRStyle)] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_STYLE_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Style class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRBoxFactory class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Box class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX_TOP_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Top class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX_LEFT_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Left class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX_BOTTOM_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Bottom class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_BOX_RIGHT_PEN] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRPenFactory_Right class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_PARAGRAPH] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlJRParagraphFactory class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addFactoryCreateWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_TAB_STOP] withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineXmlTabStopFactory class]] getName]];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester)) addSetNextWithNSString:[OrgOssPdfreporterEngineXmlJRXmlTemplateDigesterFactory PATTERN_TAB_STOP] withNSString:@"addTabStop" withNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineTabStop class]] getName]];
}

- (id)init {
  return [super init];
}

@end
