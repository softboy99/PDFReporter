//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/xml/StyleContainerRule.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/design/DesignStyleContainer.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/xml/StyleContainerRule.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlStyleContainerRule

static NSString * OrgOssPdfreporterEngineXmlStyleContainerRule_DEFAULT_STYLE_ATTRIBUTE_ = @"style";

@synthesize styleAttribute = styleAttribute_;

+ (NSString *)DEFAULT_STYLE_ATTRIBUTE {
  return OrgOssPdfreporterEngineXmlStyleContainerRule_DEFAULT_STYLE_ATTRIBUTE_;
}

- (id)init {
  return [self initOrgOssPdfreporterEngineXmlStyleContainerRuleWithNSString:OrgOssPdfreporterEngineXmlStyleContainerRule_DEFAULT_STYLE_ATTRIBUTE_];
}

- (id)initOrgOssPdfreporterEngineXmlStyleContainerRuleWithNSString:(NSString *)styleAttribute {
  if ((self = [super init])) {
    self.styleAttribute = styleAttribute;
  }
  return self;
}

- (id)initWithNSString:(NSString *)styleAttribute {
  return [self initOrgOssPdfreporterEngineXmlStyleContainerRuleWithNSString:styleAttribute];
}

- (void)beginWithNSString:(NSString *)namespace_
             withNSString:(NSString *)name
withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  id<OrgOssPdfreporterEngineDesignDesignStyleContainer> styleContainer = (id<OrgOssPdfreporterEngineDesignDesignStyleContainer>) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek];
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 2];
  [((id<OrgOssPdfreporterEngineDesignDesignStyleContainer>) nil_chk(styleContainer)) setDefaultStyleProviderWithOrgOssPdfreporterEngineJRDefaultStyleProvider:jasperDesign];
  NSString *styleName = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:styleAttribute_];
  if (styleName != nil) {
    id<JavaUtilMap> stylesMap = [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getStylesMap];
    if ([((id<JavaUtilMap>) nil_chk(stylesMap)) containsKeyWithId:styleName]) {
      id<OrgOssPdfreporterEngineJRStyle> style = [((id<JavaUtilMap>) nil_chk(stylesMap)) getWithId:styleName];
      [((id<OrgOssPdfreporterEngineDesignDesignStyleContainer>) nil_chk(styleContainer)) setStyleWithOrgOssPdfreporterEngineJRStyle:style];
    }
    else {
      [((id<OrgOssPdfreporterEngineDesignDesignStyleContainer>) nil_chk(styleContainer)) setStyleNameReferenceWithNSString:styleName];
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineXmlStyleContainerRule *typedCopy = (OrgOssPdfreporterEngineXmlStyleContainerRule *) copy;
  typedCopy.styleAttribute = styleAttribute_;
}

@end
