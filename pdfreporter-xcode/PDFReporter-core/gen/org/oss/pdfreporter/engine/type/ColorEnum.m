//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/type/ColorEnum.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/engine/type/ColorEnum.h"
#include "org/oss/pdfreporter/geometry/IColor.h"


static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_BLACK;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_BLUE;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_CYAN;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_DARK_GRAY;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_GRAY;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_GREEN;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_LIGHT_GRAY;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_MAGENTA;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_ORANGE;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_PINK;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_RED;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_YELLOW;
static OrgOssPdfreporterEngineTypeColorEnumEnum *OrgOssPdfreporterEngineTypeColorEnumEnum_WHITE;
IOSObjectArray *OrgOssPdfreporterEngineTypeColorEnumEnum_values;

@implementation OrgOssPdfreporterEngineTypeColorEnumEnum

+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)BLACK {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_BLACK;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)BLUE {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_BLUE;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)CYAN {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_CYAN;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)DARK_GRAY {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_DARK_GRAY;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)GRAY {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_GRAY;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)GREEN {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_GREEN;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)LIGHT_GRAY {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_LIGHT_GRAY;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)MAGENTA {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_MAGENTA;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)ORANGE {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_ORANGE;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)PINK {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_PINK;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)RED {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_RED;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)YELLOW {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_YELLOW;
}
+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)WHITE {
  return OrgOssPdfreporterEngineTypeColorEnumEnum_WHITE;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

@synthesize color = color_;
@synthesize name_ColorEnum = name_ColorEnum_;

- (id)initWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)color
                                 withNSString:(NSString *)enumName
                                 withNSString:(NSString *)name
                                      withInt:(int)ordinal {
  if ((self = [super initWithNSString:name withInt:ordinal])) {
    self.color = color;
    self.name_ColorEnum = enumName;
  }
  return self;
}

- (id<OrgOssPdfreporterGeometryIColor>)getColor {
  return color_;
}

- (NSString *)getName {
  return name_ColorEnum_;
}

+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)getByNameWithNSString:(NSString *)enumName {
  IOSObjectArray *values = [OrgOssPdfreporterEngineTypeColorEnumEnum values];
  if (values != nil && enumName != nil) {
    {
      IOSObjectArray *a__ = values;
      int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
      for (int i__ = 0; i__ < n__; i__++) {
        OrgOssPdfreporterEngineTypeColorEnumEnum *e = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
        if ([((NSString *) nil_chk(enumName)) isEqual:[((OrgOssPdfreporterEngineTypeColorEnumEnum *) nil_chk(e)) getName]]) {
          return e;
        }
      }
    }
  }
  return nil;
}

+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)getByColorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)color {
  IOSObjectArray *values = [OrgOssPdfreporterEngineTypeColorEnumEnum values];
  if (values != nil && color != nil) {
    {
      IOSObjectArray *a__ = values;
      int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
      for (int i__ = 0; i__ < n__; i__++) {
        OrgOssPdfreporterEngineTypeColorEnumEnum *e = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
        if ([((id<OrgOssPdfreporterGeometryIColor>) nil_chk(color)) isEqual:[((OrgOssPdfreporterEngineTypeColorEnumEnum *) nil_chk(e)) getColor]]) {
          return e;
        }
      }
    }
  }
  return nil;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineTypeColorEnumEnum class]) {
    OrgOssPdfreporterEngineTypeColorEnumEnum_BLACK = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor black] withNSString:@"black" withNSString:@"OrgOssPdfreporterEngineTypeColor_BLACK" withInt:0];
    OrgOssPdfreporterEngineTypeColorEnumEnum_BLUE = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor blue] withNSString:@"blue" withNSString:@"OrgOssPdfreporterEngineTypeColor_BLUE" withInt:1];
    OrgOssPdfreporterEngineTypeColorEnumEnum_CYAN = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor cyan] withNSString:@"cyan" withNSString:@"OrgOssPdfreporterEngineTypeColor_CYAN" withInt:2];
    OrgOssPdfreporterEngineTypeColorEnumEnum_DARK_GRAY = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor darkGray] withNSString:@"darkGray" withNSString:@"OrgOssPdfreporterEngineTypeColor_DARK_GRAY" withInt:3];
    OrgOssPdfreporterEngineTypeColorEnumEnum_GRAY = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor gray] withNSString:@"gray" withNSString:@"OrgOssPdfreporterEngineTypeColor_GRAY" withInt:4];
    OrgOssPdfreporterEngineTypeColorEnumEnum_GREEN = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor green] withNSString:@"green" withNSString:@"OrgOssPdfreporterEngineTypeColor_GREEN" withInt:5];
    OrgOssPdfreporterEngineTypeColorEnumEnum_LIGHT_GRAY = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor lightGray] withNSString:@"lightGray" withNSString:@"OrgOssPdfreporterEngineTypeColor_LIGHT_GRAY" withInt:6];
    OrgOssPdfreporterEngineTypeColorEnumEnum_MAGENTA = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor magenta] withNSString:@"magenta" withNSString:@"OrgOssPdfreporterEngineTypeColor_MAGENTA" withInt:7];
    OrgOssPdfreporterEngineTypeColorEnumEnum_ORANGE = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor orange] withNSString:@"orange" withNSString:@"OrgOssPdfreporterEngineTypeColor_ORANGE" withInt:8];
    OrgOssPdfreporterEngineTypeColorEnumEnum_PINK = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor pink] withNSString:@"pink" withNSString:@"OrgOssPdfreporterEngineTypeColor_PINK" withInt:9];
    OrgOssPdfreporterEngineTypeColorEnumEnum_RED = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor red] withNSString:@"red" withNSString:@"OrgOssPdfreporterEngineTypeColor_RED" withInt:10];
    OrgOssPdfreporterEngineTypeColorEnumEnum_YELLOW = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor yellow] withNSString:@"yellow" withNSString:@"OrgOssPdfreporterEngineTypeColor_YELLOW" withInt:11];
    OrgOssPdfreporterEngineTypeColorEnumEnum_WHITE = [[OrgOssPdfreporterEngineTypeColorEnumEnum alloc] initWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterGeometryIColor white] withNSString:@"white" withNSString:@"OrgOssPdfreporterEngineTypeColor_WHITE" withInt:12];
    OrgOssPdfreporterEngineTypeColorEnumEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgOssPdfreporterEngineTypeColorEnumEnum_BLACK, OrgOssPdfreporterEngineTypeColorEnumEnum_BLUE, OrgOssPdfreporterEngineTypeColorEnumEnum_CYAN, OrgOssPdfreporterEngineTypeColorEnumEnum_DARK_GRAY, OrgOssPdfreporterEngineTypeColorEnumEnum_GRAY, OrgOssPdfreporterEngineTypeColorEnumEnum_GREEN, OrgOssPdfreporterEngineTypeColorEnumEnum_LIGHT_GRAY, OrgOssPdfreporterEngineTypeColorEnumEnum_MAGENTA, OrgOssPdfreporterEngineTypeColorEnumEnum_ORANGE, OrgOssPdfreporterEngineTypeColorEnumEnum_PINK, OrgOssPdfreporterEngineTypeColorEnumEnum_RED, OrgOssPdfreporterEngineTypeColorEnumEnum_YELLOW, OrgOssPdfreporterEngineTypeColorEnumEnum_WHITE, nil } count:13 type:[IOSClass classWithClass:[OrgOssPdfreporterEngineTypeColorEnumEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgOssPdfreporterEngineTypeColorEnumEnum_values];
}

+ (OrgOssPdfreporterEngineTypeColorEnumEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgOssPdfreporterEngineTypeColorEnumEnum_values count]; i++) {
    OrgOssPdfreporterEngineTypeColorEnumEnum *e = [OrgOssPdfreporterEngineTypeColorEnumEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
