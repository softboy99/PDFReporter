//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/type/LineSpacingEnum.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Byte.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/engine/type/EnumUtil.h"
#include "org/oss/pdfreporter/engine/type/JREnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"


static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_SINGLE;
static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_ONE_AND_HALF;
static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_DOUBLE;
static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_AT_LEAST;
static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_FIXED;
static OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_PROPORTIONAL;
IOSObjectArray *OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_values;

@implementation OrgOssPdfreporterEngineTypeLineSpacingEnumEnum

+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)SINGLE {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_SINGLE;
}
+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)ONE_AND_HALF {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_ONE_AND_HALF;
}
+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)DOUBLE {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_DOUBLE;
}
+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)AT_LEAST {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_AT_LEAST;
}
+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)FIXED {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_FIXED;
}
+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)PROPORTIONAL {
  return OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_PROPORTIONAL;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

@synthesize value = value_;
@synthesize name_LineSpacingEnum = name_LineSpacingEnum_;

- (id)initWithChar:(char)value
      withNSString:(NSString *)enumName
      withNSString:(NSString *)name
           withInt:(int)ordinal {
  if ((self = [super initWithNSString:name withInt:ordinal])) {
    self.value = value;
    self.name_LineSpacingEnum = enumName;
  }
  return self;
}

- (JavaLangByte *)getValueByte {
  return [[JavaLangByte alloc] initWithChar:value_];
}

- (char)getValue {
  return value_;
}

- (NSString *)getName {
  return name_LineSpacingEnum_;
}

+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getByNameWithNSString:(NSString *)enumName {
  return (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *) [OrgOssPdfreporterEngineTypeEnumUtil getByNameWithOrgOssPdfreporterEngineTypeJREnumArray:[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum values] withNSString:enumName];
}

+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getByValueWithJavaLangByte:(JavaLangByte *)value {
  return (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *) [OrgOssPdfreporterEngineTypeEnumUtil getByValueWithOrgOssPdfreporterEngineTypeJREnumArray:[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum values] withJavaLangByte:value];
}

+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getByValueWithChar:(char)value {
  return [OrgOssPdfreporterEngineTypeLineSpacingEnumEnum getByValueWithJavaLangByte:[[JavaLangByte alloc] initWithChar:value]];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineTypeLineSpacingEnumEnum class]) {
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_SINGLE = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 0 withNSString:@"Single" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_SINGLE" withInt:0];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_ONE_AND_HALF = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 1 withNSString:@"1_1_2" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_ONE_AND_HALF" withInt:1];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_DOUBLE = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 2 withNSString:@"Double" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_DOUBLE" withInt:2];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_AT_LEAST = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 3 withNSString:@"AtLeast" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_AT_LEAST" withInt:3];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_FIXED = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 4 withNSString:@"Fixed" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_FIXED" withInt:4];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_PROPORTIONAL = [[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum alloc] initWithChar:(char) 5 withNSString:@"Proportional" withNSString:@"OrgOssPdfreporterEngineTypeLineSpacing_PROPORTIONAL" withInt:5];
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_SINGLE, OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_ONE_AND_HALF, OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_DOUBLE, OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_AT_LEAST, OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_FIXED, OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_PROPORTIONAL, nil } count:6 type:[IOSClass classWithClass:[OrgOssPdfreporterEngineTypeLineSpacingEnumEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_values];
}

+ (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_values count]; i++) {
    OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *e = [OrgOssPdfreporterEngineTypeLineSpacingEnumEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
