//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/type/JsonOperatorEnum.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/engine/type/JsonOperatorEnum.h"


static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LT;
static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LE;
static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GT;
static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GE;
static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_EQ;
static OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_NE;
IOSObjectArray *OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_values;

@implementation OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)LT {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LT;
}
+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)LE {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LE;
}
+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)GT {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GT;
}
+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)GE {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GE;
}
+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)EQ {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_EQ;
}
+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)NE {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_NE;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

@synthesize value = value_;
@synthesize name_JsonOperatorEnum = name_JsonOperatorEnum_;

- (id)initWithNSString:(NSString *)value
          withNSString:(NSString *)enumName
          withNSString:(NSString *)name
               withInt:(int)ordinal {
  if ((self = [super initWithNSString:name withInt:ordinal])) {
    self.value = value;
    self.name_JsonOperatorEnum = enumName;
  }
  return self;
}

- (NSString *)getValue {
  return value_;
}

- (NSString *)getName {
  return name_JsonOperatorEnum_;
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)getByValueWithNSString:(NSString *)value {
  {
    IOSObjectArray *a__ = [OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum values];
    int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *joe = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
      if ([((NSString *) nil_chk(value)) isEqual:[((OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *) nil_chk(joe)) getValue]]) {
        return joe;
      }
    }
  }
  return nil;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum class]) {
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LT = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@"<" withNSString:@"Lower than" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_LT" withInt:0];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LE = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@"<=" withNSString:@"Lower or equal" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_LE" withInt:1];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GT = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@">" withNSString:@"Greater than" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_GT" withInt:2];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GE = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@">=" withNSString:@"Greater or equal" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_GE" withInt:3];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_EQ = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@"==" withNSString:@"Equal" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_EQ" withInt:4];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_NE = [[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum alloc] initWithNSString:@"!=" withNSString:@"Not equal" withNSString:@"OrgOssPdfreporterEngineTypeJsonOperator_NE" withInt:5];
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LT, OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_LE, OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GT, OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_GE, OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_EQ, OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_NE, nil } count:6 type:[IOSClass classWithClass:[OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_values];
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_values count]; i++) {
    OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum *e = [OrgOssPdfreporterEngineTypeJsonOperatorEnumEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
