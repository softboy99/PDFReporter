//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseDatasetParameter.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRDatasetParameter.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseDatasetParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseDatasetParameter

@synthesize name = name_;
@synthesize expression = expression_;

- (id)init {
  return [super init];
}

- (id)initWithOrgOssPdfreporterEngineJRDatasetParameter:(id<OrgOssPdfreporterEngineJRDatasetParameter>)datasetParameter
     withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super init])) {
    [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:datasetParameter withId:self];
    name_ = [((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(datasetParameter)) getName];
    expression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(datasetParameter)) getExpression]];
  }
  return self;
}

- (NSString *)getName {
  return self.name;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return self.expression;
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseDatasetParameter *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseDatasetParameter *) copy;
  typedCopy.name = name_;
  typedCopy.expression = expression_;
}

@end
