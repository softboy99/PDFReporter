//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseElementDataset.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRElementDataset.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseDatasetRun.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementDataset.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/type/IncrementTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseElementDataset

@synthesize resetTypeValue = resetTypeValue_;
@synthesize incrementTypeValue = incrementTypeValue_;
@synthesize resetGroup = resetGroup_;
@synthesize incrementGroup = incrementGroup_;
@synthesize datasetRun = datasetRun_;
@synthesize incrementWhenExpression = incrementWhenExpression_;

- (id)init {
  if ((self = [super init])) {
    resetTypeValue_ = [OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT];
    incrementTypeValue_ = [OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum NONE];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRElementDataset:(id<OrgOssPdfreporterEngineJRElementDataset>)dataset {
  if ((self = [super init])) {
    resetTypeValue_ = [OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT];
    incrementTypeValue_ = [OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum NONE];
    if (dataset != nil) {
      resetTypeValue_ = [dataset getResetTypeValue];
      incrementTypeValue_ = [dataset getIncrementTypeValue];
      resetGroup_ = [dataset getResetGroup];
      incrementGroup_ = [dataset getIncrementGroup];
      datasetRun_ = [dataset getDatasetRun];
      incrementWhenExpression_ = [dataset getIncrementWhenExpression];
    }
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRElementDataset:(id<OrgOssPdfreporterEngineJRElementDataset>)dataset
   withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super init])) {
    resetTypeValue_ = [OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT];
    incrementTypeValue_ = [OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum NONE];
    [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:dataset withId:self];
    resetTypeValue_ = [((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getResetTypeValue];
    incrementTypeValue_ = [((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getIncrementTypeValue];
    resetGroup_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getGroupWithOrgOssPdfreporterEngineJRGroup:[((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getResetGroup]];
    incrementGroup_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getGroupWithOrgOssPdfreporterEngineJRGroup:[((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getIncrementGroup]];
    datasetRun_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getDatasetRunWithOrgOssPdfreporterEngineJRDatasetRun:[((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getDatasetRun]];
    incrementWhenExpression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getIncrementWhenExpression]];
  }
  return self;
}

- (OrgOssPdfreporterEngineTypeResetTypeEnumEnum *)getResetTypeValue {
  return self.resetTypeValue;
}

- (OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum *)getIncrementTypeValue {
  return self.incrementTypeValue;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getResetGroup {
  return resetGroup_;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getIncrementGroup {
  return incrementGroup_;
}

- (id<OrgOssPdfreporterEngineJRDatasetRun>)getDatasetRun {
  return datasetRun_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getIncrementWhenExpression {
  return incrementWhenExpression_;
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseElementDataset *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseElementDataset *) [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  ((OrgOssPdfreporterEngineBaseJRBaseElementDataset *) nil_chk(clone)).incrementWhenExpression = [OrgOssPdfreporterEngineUtilJRCloneUtils nullSafeCloneWithId:incrementWhenExpression_];
  ((OrgOssPdfreporterEngineBaseJRBaseElementDataset *) nil_chk(clone)).datasetRun = [OrgOssPdfreporterEngineUtilJRCloneUtils nullSafeCloneWithId:datasetRun_];
  return clone;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseElementDataset *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseElementDataset *) copy;
  typedCopy.resetTypeValue = resetTypeValue_;
  typedCopy.incrementTypeValue = incrementTypeValue_;
  typedCopy.resetGroup = resetGroup_;
  typedCopy.incrementGroup = incrementGroup_;
  typedCopy.datasetRun = datasetRun_;
  typedCopy.incrementWhenExpression = incrementWhenExpression_;
}

@end
