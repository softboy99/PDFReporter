//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseLineBox.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRBoxContainer.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBoxBottomPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBoxLeftPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBoxPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBoxRightPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBoxTopPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseLineBox

static NSString * OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_PADDING_ = @"padding";
static NSString * OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_TOP_PADDING_ = @"topPadding";
static NSString * OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_LEFT_PADDING_ = @"leftPadding";
static NSString * OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_BOTTOM_PADDING_ = @"bottomPadding";
static NSString * OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_RIGHT_PADDING_ = @"rightPadding";

@synthesize boxContainer = boxContainer_;
@synthesize pen = pen_;
@synthesize topPen = topPen_;
@synthesize leftPen = leftPen_;
@synthesize bottomPen = bottomPen_;
@synthesize rightPen = rightPen_;
@synthesize padding = padding_;
@synthesize topPadding = topPadding_;
@synthesize leftPadding = leftPadding_;
@synthesize bottomPadding = bottomPadding_;
@synthesize rightPadding = rightPadding_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_PADDING {
  return OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_PADDING_;
}

+ (NSString *)PROPERTY_TOP_PADDING {
  return OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_TOP_PADDING_;
}

+ (NSString *)PROPERTY_LEFT_PADDING {
  return OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_LEFT_PADDING_;
}

+ (NSString *)PROPERTY_BOTTOM_PADDING {
  return OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_BOTTOM_PADDING_;
}

+ (NSString *)PROPERTY_RIGHT_PADDING {
  return OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_RIGHT_PADDING_;
}

- (id)initWithOrgOssPdfreporterEngineJRBoxContainer:(id<OrgOssPdfreporterEngineJRBoxContainer>)boxContainer {
  if ((self = [super init])) {
    self.boxContainer = boxContainer;
    pen_ = [[OrgOssPdfreporterEngineBaseJRBaseBoxPen alloc] initWithOrgOssPdfreporterEngineJRLineBox:self];
    topPen_ = [[OrgOssPdfreporterEngineBaseJRBaseBoxTopPen alloc] initWithOrgOssPdfreporterEngineJRLineBox:self];
    leftPen_ = [[OrgOssPdfreporterEngineBaseJRBaseBoxLeftPen alloc] initWithOrgOssPdfreporterEngineJRLineBox:self];
    bottomPen_ = [[OrgOssPdfreporterEngineBaseJRBaseBoxBottomPen alloc] initWithOrgOssPdfreporterEngineJRLineBox:self];
    rightPen_ = [[OrgOssPdfreporterEngineBaseJRBaseBoxRightPen alloc] initWithOrgOssPdfreporterEngineJRLineBox:self];
  }
  return self;
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  if (boxContainer_ != nil) {
    return [boxContainer_ getDefaultStyleProvider];
  }
  return nil;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  if (boxContainer_ != nil) {
    return [boxContainer_ getStyle];
  }
  return nil;
}

- (NSString *)getStyleNameReference {
  if (boxContainer_ != nil) {
    return [boxContainer_ getStyleNameReference];
  }
  return nil;
}

- (id<OrgOssPdfreporterEngineJRBoxContainer>)getBoxContainer {
  return boxContainer_;
}

- (JavaLangFloat *)getDefaultLineWidth {
  return [OrgOssPdfreporterEngineJRPen LINE_WIDTH_0];
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  if (boxContainer_ != nil) {
    return [boxContainer_ getDefaultLineColor];
  }
  return [OrgOssPdfreporterGeometryIColor black];
}

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getPen {
  return pen_;
}

- (void)copyPenWithOrgOssPdfreporterEngineBaseJRBoxPen:(id<OrgOssPdfreporterEngineBaseJRBoxPen>)pen OBJC_METHOD_FAMILY_NONE {
  self.pen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(pen)) cloneWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getTopPen {
  return topPen_;
}

- (void)copyTopPenWithOrgOssPdfreporterEngineBaseJRBoxPen:(id<OrgOssPdfreporterEngineBaseJRBoxPen>)topPen OBJC_METHOD_FAMILY_NONE {
  self.topPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(topPen)) cloneWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getLeftPen {
  return leftPen_;
}

- (void)copyLeftPenWithOrgOssPdfreporterEngineBaseJRBoxPen:(id<OrgOssPdfreporterEngineBaseJRBoxPen>)leftPen OBJC_METHOD_FAMILY_NONE {
  self.leftPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(leftPen)) cloneWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getBottomPen {
  return bottomPen_;
}

- (void)copyBottomPenWithOrgOssPdfreporterEngineBaseJRBoxPen:(id<OrgOssPdfreporterEngineBaseJRBoxPen>)bottomPen OBJC_METHOD_FAMILY_NONE {
  self.bottomPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(bottomPen)) cloneWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getRightPen {
  return rightPen_;
}

- (void)copyRightPenWithOrgOssPdfreporterEngineBaseJRBoxPen:(id<OrgOssPdfreporterEngineBaseJRBoxPen>)rightPen OBJC_METHOD_FAMILY_NONE {
  self.rightPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(rightPen)) cloneWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getPadding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPaddingWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getOwnPadding {
  return padding_;
}

- (void)setPaddingWithInt:(int)padding {
  [self setPaddingWithJavaLangInteger:[JavaLangInteger valueOfWithInt:padding]];
}

- (void)setPaddingWithJavaLangInteger:(JavaLangInteger *)padding {
  id old = self.padding;
  self.padding = padding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_PADDING_ withId:old withId:self.padding];
}

- (JavaLangInteger *)getTopPadding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getTopPaddingWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getOwnTopPadding {
  return topPadding_;
}

- (void)setTopPaddingWithInt:(int)topPadding {
  [self setTopPaddingWithJavaLangInteger:[JavaLangInteger valueOfWithInt:topPadding]];
}

- (void)setTopPaddingWithJavaLangInteger:(JavaLangInteger *)topPadding {
  id old = self.topPadding;
  self.topPadding = topPadding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_TOP_PADDING_ withId:old withId:self.topPadding];
}

- (JavaLangInteger *)getLeftPadding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getLeftPaddingWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getOwnLeftPadding {
  return leftPadding_;
}

- (void)setLeftPaddingWithInt:(int)leftPadding {
  [self setLeftPaddingWithJavaLangInteger:[JavaLangInteger valueOfWithInt:leftPadding]];
}

- (void)setLeftPaddingWithJavaLangInteger:(JavaLangInteger *)leftPadding {
  id old = self.leftPadding;
  self.leftPadding = leftPadding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_LEFT_PADDING_ withId:old withId:self.leftPadding];
}

- (JavaLangInteger *)getBottomPadding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getBottomPaddingWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getOwnBottomPadding {
  return bottomPadding_;
}

- (void)setBottomPaddingWithInt:(int)bottomPadding {
  [self setBottomPaddingWithJavaLangInteger:[JavaLangInteger valueOfWithInt:bottomPadding]];
}

- (void)setBottomPaddingWithJavaLangInteger:(JavaLangInteger *)bottomPadding {
  id old = self.bottomPadding;
  self.bottomPadding = bottomPadding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_BOTTOM_PADDING_ withId:old withId:self.bottomPadding];
}

- (JavaLangInteger *)getRightPadding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getRightPaddingWithOrgOssPdfreporterEngineJRLineBox:self];
}

- (JavaLangInteger *)getOwnRightPadding {
  return rightPadding_;
}

- (void)setRightPaddingWithInt:(int)rightPadding {
  [self setRightPaddingWithJavaLangInteger:[JavaLangInteger valueOfWithInt:rightPadding]];
}

- (void)setRightPaddingWithJavaLangInteger:(JavaLangInteger *)rightPadding {
  id old = self.rightPadding;
  self.rightPadding = rightPadding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseLineBox_PROPERTY_RIGHT_PADDING_ withId:old withId:self.rightPadding];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)cloneWithOrgOssPdfreporterEngineJRBoxContainer:(id<OrgOssPdfreporterEngineJRBoxContainer>)boxContainer {
  OrgOssPdfreporterEngineBaseJRBaseLineBox *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseLineBox *) [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).boxContainer = boxContainer;
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).pen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(pen_)) cloneWithOrgOssPdfreporterEngineJRLineBox:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).topPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(topPen_)) cloneWithOrgOssPdfreporterEngineJRLineBox:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).leftPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(leftPen_)) cloneWithOrgOssPdfreporterEngineJRLineBox:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).bottomPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(bottomPen_)) cloneWithOrgOssPdfreporterEngineJRLineBox:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).rightPen = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk(rightPen_)) cloneWithOrgOssPdfreporterEngineJRLineBox:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(clone)).eventSupport = nil;
  return clone;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (int)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = [OrgOssPdfreporterEngineUtilObjectUtils hash__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:pen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:topPen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:leftPen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:bottomPen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:rightPen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:padding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:topPadding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:leftPadding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:bottomPadding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:rightPadding_];
  return [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) getHashCode];
}

- (BOOL)isIdenticalWithId:(id)object {
  if (self == object) {
    return YES;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineBaseJRBaseLineBox class]])) {
    return NO;
  }
  OrgOssPdfreporterEngineBaseJRBaseLineBox *box = (OrgOssPdfreporterEngineBaseJRBaseLineBox *) object;
  return [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:pen_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).pen] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:topPen_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).topPen] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:leftPen_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).leftPen] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:bottomPen_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).bottomPen] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:rightPen_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).rightPen] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:padding_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).padding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:topPadding_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).topPadding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:leftPadding_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).leftPadding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:bottomPadding_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).bottomPadding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:rightPadding_ withId:((OrgOssPdfreporterEngineBaseJRBaseLineBox *) nil_chk(box)).rightPadding];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseLineBox *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseLineBox *) copy;
  typedCopy.boxContainer = boxContainer_;
  typedCopy.pen = pen_;
  typedCopy.topPen = topPen_;
  typedCopy.leftPen = leftPen_;
  typedCopy.bottomPen = bottomPen_;
  typedCopy.rightPen = rightPen_;
  typedCopy.padding = padding_;
  typedCopy.topPadding = topPadding_;
  typedCopy.leftPadding = leftPadding_;
  typedCopy.bottomPadding = bottomPadding_;
  typedCopy.rightPadding = rightPadding_;
  typedCopy.eventSupport = eventSupport_;
}

@end
