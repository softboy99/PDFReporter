//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseFrame.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRChild.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseFrame.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseFrame

@synthesize children = children_;
@synthesize lineBox = lineBox_;

- (id)initWithOrgOssPdfreporterEngineJRFrame:(id<OrgOssPdfreporterEngineJRFrame>)frame
withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineJRElement:frame withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:factory])) {
    id<JavaUtilList> frameChildren = [((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(frame)) getChildren];
    if (frameChildren != nil) {
      children_ = [[JavaUtilArrayList alloc] initWithInt:[frameChildren size]];
      for (id<JavaUtilIterator> it = [frameChildren iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        id<OrgOssPdfreporterEngineJRChild> child = [((id<JavaUtilIterator>) nil_chk(it)) next];
        [((id<JavaUtilList>) nil_chk(children_)) addWithId:(id<OrgOssPdfreporterEngineJRChild>) [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getVisitResultWithOrgOssPdfreporterEngineJRVisitable:child]];
      }
    }
    lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(frame)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  }
  return self;
}

- (IOSObjectArray *)getElements {
  return [OrgOssPdfreporterEngineBaseJRBaseElementGroup getElementsWithJavaUtilList:children_];
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRFrame:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitFrameWithOrgOssPdfreporterEngineJRFrame:self];
}

- (id<JavaUtilList>)getChildren {
  return children_;
}

- (id<OrgOssPdfreporterEngineJRElement>)getElementByKeyWithNSString:(NSString *)elementKey {
  return [OrgOssPdfreporterEngineBaseJRBaseElementGroup getElementByKeyWithOrgOssPdfreporterEngineJRElementArray:[self getElements] withNSString:elementKey];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getModeWithOrgOssPdfreporterEngineJRCommonElement:self withOrgOssPdfreporterEngineTypeModeEnumEnum:[OrgOssPdfreporterEngineTypeModeEnumEnum TRANSPARENT]];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseFrame *clone = (OrgOssPdfreporterEngineBaseJRBaseFrame *) [super clone];
  if (children_ != nil) {
    ((OrgOssPdfreporterEngineBaseJRBaseFrame *) nil_chk(clone)).children = [[JavaUtilArrayList alloc] initWithInt:[children_ size]];
    for (int i = 0; i < [children_ size]; i++) {
      [((OrgOssPdfreporterEngineBaseJRBaseFrame *) nil_chk(clone)).children addWithId:(id<OrgOssPdfreporterEngineJRChild>) ([((id<OrgOssPdfreporterEngineJRChild>) nil_chk([children_ getWithInt:i])) cloneWithOrgOssPdfreporterEngineJRElementGroup:clone])];
    }
  }
  return clone;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseFrame *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseFrame *) copy;
  typedCopy.children = children_;
  typedCopy.lineBox = lineBox_;
}

@end
