//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseVariable.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseVariable.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/type/IncrementTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseVariable

@synthesize name = name_;
@synthesize valueClassName = valueClassName_;
@synthesize valueClassRealName = valueClassRealName_;
@synthesize incrementerFactoryClassName = incrementerFactoryClassName_;
@synthesize incrementerFactoryClassRealName = incrementerFactoryClassRealName_;
@synthesize resetTypeValue = resetTypeValue_;
@synthesize incrementTypeValue = incrementTypeValue_;
@synthesize calculationValue = calculationValue_;
@synthesize isSystemDefined_ = isSystemDefined__;
@synthesize valueClass = valueClass_;
@synthesize incrementerFactoryClass = incrementerFactoryClass_;
@synthesize expression = expression_;
@synthesize initialValueExpression = initialValueExpression_;
@synthesize resetGroup = resetGroup_;
@synthesize incrementGroup = incrementGroup_;

- (id)init {
  if ((self = [super init])) {
    valueClassName_ = [[IOSClass classWithClass:[NSString class]] getName];
    resetTypeValue_ = [OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT];
    incrementTypeValue_ = [OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum NONE];
    calculationValue_ = [OrgOssPdfreporterEngineTypeCalculationEnumEnum NOTHING];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRVariable:(id<OrgOssPdfreporterEngineJRVariable>)variable
withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super init])) {
    valueClassName_ = [[IOSClass classWithClass:[NSString class]] getName];
    resetTypeValue_ = [OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT];
    incrementTypeValue_ = [OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum NONE];
    calculationValue_ = [OrgOssPdfreporterEngineTypeCalculationEnumEnum NOTHING];
    [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:variable withId:self];
    name_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getName];
    valueClassName_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getValueClassName];
    incrementerFactoryClassName_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getIncrementerFactoryClassName];
    resetTypeValue_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getResetTypeValue];
    incrementTypeValue_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getIncrementTypeValue];
    calculationValue_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getCalculationValue];
    isSystemDefined__ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) isSystemDefined];
    expression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getExpression]];
    initialValueExpression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getInitialValueExpression]];
    resetGroup_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getGroupWithOrgOssPdfreporterEngineJRGroup:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getResetGroup]];
    incrementGroup_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getGroupWithOrgOssPdfreporterEngineJRGroup:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getIncrementGroup]];
  }
  return self;
}

- (NSString *)getName {
  return self.name;
}

- (IOSClass *)getValueClass {
  if (valueClass_ == nil) {
    NSString *className_ = [self getValueClassRealName];
    if (className_ != nil) {
      @try {
        valueClass_ = [OrgOssPdfreporterEngineUtilJRClassLoader loadClassForNameWithNSString:className_];
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
      }
    }
  }
  return valueClass_;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (NSString *)getValueClassRealName {
  if (valueClassRealName_ == nil) {
    valueClassRealName_ = [OrgOssPdfreporterEngineUtilJRClassLoader getClassRealNameWithNSString:valueClassName_];
  }
  return valueClassRealName_;
}

- (IOSClass *)getIncrementerFactoryClass {
  if (incrementerFactoryClass_ == nil) {
    NSString *className_ = [self getIncrementerFactoryClassRealName];
    if (className_ != nil) {
      @try {
        incrementerFactoryClass_ = [OrgOssPdfreporterEngineUtilJRClassLoader loadClassForNameWithNSString:className_];
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
      }
    }
  }
  return incrementerFactoryClass_;
}

- (NSString *)getIncrementerFactoryClassName {
  return incrementerFactoryClassName_;
}

- (NSString *)getIncrementerFactoryClassRealName {
  if (incrementerFactoryClassRealName_ == nil) {
    incrementerFactoryClassRealName_ = [OrgOssPdfreporterEngineUtilJRClassLoader getClassRealNameWithNSString:incrementerFactoryClassName_];
  }
  return incrementerFactoryClassRealName_;
}

- (OrgOssPdfreporterEngineTypeResetTypeEnumEnum *)getResetTypeValue {
  return self.resetTypeValue;
}

- (OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum *)getIncrementTypeValue {
  return self.incrementTypeValue;
}

- (OrgOssPdfreporterEngineTypeCalculationEnumEnum *)getCalculationValue {
  return self.calculationValue;
}

- (BOOL)isSystemDefined {
  return self.isSystemDefined_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return self.expression;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getInitialValueExpression {
  return self.initialValueExpression;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getResetGroup {
  return self.resetGroup;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getIncrementGroup {
  return self.incrementGroup;
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseVariable *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseVariable *) [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  ((OrgOssPdfreporterEngineBaseJRBaseVariable *) nil_chk(clone)).expression = [OrgOssPdfreporterEngineUtilJRCloneUtils nullSafeCloneWithId:expression_];
  ((OrgOssPdfreporterEngineBaseJRBaseVariable *) nil_chk(clone)).initialValueExpression = [OrgOssPdfreporterEngineUtilJRCloneUtils nullSafeCloneWithId:initialValueExpression_];
  return clone;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseVariable *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseVariable *) copy;
  typedCopy.name = name_;
  typedCopy.valueClassName = valueClassName_;
  typedCopy.valueClassRealName = valueClassRealName_;
  typedCopy.incrementerFactoryClassName = incrementerFactoryClassName_;
  typedCopy.incrementerFactoryClassRealName = incrementerFactoryClassRealName_;
  typedCopy.resetTypeValue = resetTypeValue_;
  typedCopy.incrementTypeValue = incrementTypeValue_;
  typedCopy.calculationValue = calculationValue_;
  typedCopy.isSystemDefined_ = isSystemDefined__;
  typedCopy.valueClass = valueClass_;
  typedCopy.incrementerFactoryClass = incrementerFactoryClass_;
  typedCopy.expression = expression_;
  typedCopy.initialValueExpression = initialValueExpression_;
  typedCopy.resetGroup = resetGroup_;
  typedCopy.incrementGroup = incrementGroup_;
}

@end
