//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBasePen.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRPenContainer.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyleContainer.h"
#include "org/oss/pdfreporter/engine/base/JRBasePen.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/LineStyleEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineBaseJRBasePen

static NSString * OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH_ = @"lineWidth";
static NSString * OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE_ = @"lineStyle";
static NSString * OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR_ = @"lineColor";

@synthesize penContainer = penContainer_;
@synthesize lineWidth = lineWidth_;
@synthesize lineStyleValue = lineStyleValue_;
@synthesize lineColor = lineColor_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_LINE_WIDTH {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH_;
}

+ (NSString *)PROPERTY_LINE_STYLE {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE_;
}

+ (NSString *)PROPERTY_LINE_COLOR {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR_;
}

- (id)initWithOrgOssPdfreporterEngineJRPenContainer:(id<OrgOssPdfreporterEngineJRPenContainer>)penContainer {
  if ((self = [super init])) {
    self.penContainer = penContainer;
  }
  return self;
}

- (id<OrgOssPdfreporterEngineJRStyleContainer>)getStyleContainer {
  return penContainer_;
}

- (JavaLangFloat *)getLineWidth {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getLineWidthWithOrgOssPdfreporterEngineJRPen:self withJavaLangFloat:[((id<OrgOssPdfreporterEngineJRPenContainer>) nil_chk(penContainer_)) getDefaultLineWidth]];
}

- (JavaLangFloat *)getOwnLineWidth {
  return lineWidth_;
}

- (void)setLineWidthWithFloat:(float)lineWidth {
  [self setLineWidthWithJavaLangFloat:[[JavaLangFloat alloc] initWithFloat:lineWidth]];
}

- (void)setLineWidthWithJavaLangFloat:(JavaLangFloat *)lineWidth {
  id old = self.lineWidth;
  self.lineWidth = lineWidth;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH_ withId:old withId:self.lineWidth];
}

- (OrgOssPdfreporterEngineTypeLineStyleEnumEnum *)getLineStyleValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getLineStyleValueWithOrgOssPdfreporterEngineJRPen:self];
}

- (OrgOssPdfreporterEngineTypeLineStyleEnumEnum *)getOwnLineStyleValue {
  return lineStyleValue_;
}

- (void)setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnumEnum:(OrgOssPdfreporterEngineTypeLineStyleEnumEnum *)lineStyleValue {
  id old = self.lineStyleValue;
  self.lineStyleValue = lineStyleValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE_ withId:old withId:self.lineStyleValue];
}

- (id<OrgOssPdfreporterGeometryIColor>)getLineColor {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getLineColorWithOrgOssPdfreporterEngineJRPen:self withOrgOssPdfreporterGeometryIColor:[((id<OrgOssPdfreporterEngineJRPenContainer>) nil_chk(penContainer_)) getDefaultLineColor]];
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnLineColor {
  return lineColor_;
}

- (void)setLineColorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)lineColor {
  id old = self.lineColor;
  self.lineColor = lineColor;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR_ withId:old withId:self.lineColor];
}

- (NSString *)getStyleNameReference {
  return nil;
}

- (id<OrgOssPdfreporterEngineJRPen>)cloneWithOrgOssPdfreporterEngineJRPenContainer:(id<OrgOssPdfreporterEngineJRPenContainer>)penContainer {
  OrgOssPdfreporterEngineBaseJRBasePen *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBasePen *) [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  ((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(clone)).penContainer = penContainer;
  ((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(clone)).eventSupport = nil;
  return clone;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (int)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = [OrgOssPdfreporterEngineUtilObjectUtils hash__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:lineWidth_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:lineStyleValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:lineColor_];
  return [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) getHashCode];
}

- (BOOL)isIdenticalWithId:(id)object {
  if (self == object) {
    return YES;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineBaseJRBasePen class]])) {
    return NO;
  }
  OrgOssPdfreporterEngineBaseJRBasePen *pen = (OrgOssPdfreporterEngineBaseJRBasePen *) object;
  return [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:lineWidth_ withId:((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(pen)).lineWidth] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:lineStyleValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(pen)).lineStyleValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:lineColor_ withId:((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(pen)).lineColor];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBasePen *typedCopy = (OrgOssPdfreporterEngineBaseJRBasePen *) copy;
  typedCopy.penContainer = penContainer_;
  typedCopy.lineWidth = lineWidth_;
  typedCopy.lineStyleValue = lineStyleValue_;
  typedCopy.lineColor = lineColor_;
  typedCopy.eventSupport = eventSupport_;
}

@end
