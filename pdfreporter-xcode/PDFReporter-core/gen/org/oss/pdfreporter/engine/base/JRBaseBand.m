//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseBand.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/engine/JRBand.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBand.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/SplitTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseBand

static NSString * OrgOssPdfreporterEngineBaseJRBaseBand_PROPERTY_SPLIT_TYPE_ = @"splitType";

@synthesize height = height_;
@synthesize splitTypeValue = splitTypeValue_;
@synthesize printWhenExpression = printWhenExpression_;
@synthesize propertiesMap = propertiesMap_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_SPLIT_TYPE {
  return OrgOssPdfreporterEngineBaseJRBaseBand_PROPERTY_SPLIT_TYPE_;
}

- (id)initWithOrgOssPdfreporterEngineJRBand:(id<OrgOssPdfreporterEngineJRBand>)band
withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineJRElementGroup:band withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:factory])) {
    height_ = [((id<OrgOssPdfreporterEngineJRBand>) nil_chk(band)) getHeight];
    splitTypeValue_ = [((id<OrgOssPdfreporterEngineJRBand>) nil_chk(band)) getSplitTypeValue];
    printWhenExpression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRBand>) nil_chk(band)) getPrintWhenExpression]];
    self.propertiesMap = [OrgOssPdfreporterEngineJRPropertiesMap getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder:band];
  }
  return self;
}

- (int)getHeight {
  return height_;
}

- (OrgOssPdfreporterEngineTypeSplitTypeEnumEnum *)getSplitTypeValue {
  return splitTypeValue_;
}

- (void)setSplitTypeWithOrgOssPdfreporterEngineTypeSplitTypeEnumEnum:(OrgOssPdfreporterEngineTypeSplitTypeEnumEnum *)splitTypeValue {
  OrgOssPdfreporterEngineTypeSplitTypeEnumEnum *old = self.splitTypeValue;
  self.splitTypeValue = splitTypeValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseBand_PROPERTY_SPLIT_TYPE_ withId:old withId:self.splitTypeValue];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getPrintWhenExpression {
  return self.printWhenExpression;
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseBand *clone = (OrgOssPdfreporterEngineBaseJRBaseBand *) [super clone];
  ((OrgOssPdfreporterEngineBaseJRBaseBand *) nil_chk(clone)).printWhenExpression = [OrgOssPdfreporterEngineUtilJRCloneUtils nullSafeCloneWithId:printWhenExpression_];
  ((OrgOssPdfreporterEngineBaseJRBaseBand *) nil_chk(clone)).propertiesMap = [OrgOssPdfreporterEngineJRPropertiesMap getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder:self];
  ((OrgOssPdfreporterEngineBaseJRBaseBand *) nil_chk(clone)).eventSupport = nil;
  return clone;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (BOOL)hasProperties {
  return propertiesMap_ != nil && [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(propertiesMap_)) hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  if (propertiesMap_ == nil) {
    propertiesMap_ = [[OrgOssPdfreporterEngineJRPropertiesMap alloc] init];
  }
  return propertiesMap_;
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseBand *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseBand *) copy;
  typedCopy.height = height_;
  typedCopy.splitTypeValue = splitTypeValue_;
  typedCopy.printWhenExpression = printWhenExpression_;
  typedCopy.propertiesMap = propertiesMap_;
  typedCopy.eventSupport = eventSupport_;
}

@end
