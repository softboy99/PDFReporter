//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseObjectFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstab.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabBucket.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabColumnGroup.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabDataset.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabParameter.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabRowGroup.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstab.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabBucket.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabColumnGroup.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabDataset.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabParameter.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabRowGroup.h"
#include "org/oss/pdfreporter/engine/JRAbstractObjectFactory.h"
#include "org/oss/pdfreporter/engine/JRBand.h"
#include "org/oss/pdfreporter/engine/JRBreak.h"
#include "org/oss/pdfreporter/engine/JRComponentElement.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRDatasetParameter.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JREllipse.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRField.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRGenericElement.h"
#include "org/oss/pdfreporter/engine/JRGenericElementParameter.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRHyperlink.h"
#include "org/oss/pdfreporter/engine/JRHyperlinkParameter.h"
#include "org/oss/pdfreporter/engine/JRImage.h"
#include "org/oss/pdfreporter/engine/JRLine.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRQuery.h"
#include "org/oss/pdfreporter/engine/JRQueryChunk.h"
#include "org/oss/pdfreporter/engine/JRRectangle.h"
#include "org/oss/pdfreporter/engine/JRReportTemplate.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRScriptlet.h"
#include "org/oss/pdfreporter/engine/JRSection.h"
#include "org/oss/pdfreporter/engine/JRSortField.h"
#include "org/oss/pdfreporter/engine/JRStaticText.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRStyleContainer.h"
#include "org/oss/pdfreporter/engine/JRStyleSetter.h"
#include "org/oss/pdfreporter/engine/JRSubreport.h"
#include "org/oss/pdfreporter/engine/JRSubreportParameter.h"
#include "org/oss/pdfreporter/engine/JRSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/JRTextField.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBand.h"
#include "org/oss/pdfreporter/engine/base/JRBaseBreak.h"
#include "org/oss/pdfreporter/engine/base/JRBaseComponentElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseConditionalStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseDataset.h"
#include "org/oss/pdfreporter/engine/base/JRBaseDatasetParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBaseDatasetRun.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseEllipse.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpression.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseField.h"
#include "org/oss/pdfreporter/engine/base/JRBaseFrame.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGenericElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGenericElementParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseHyperlink.h"
#include "org/oss/pdfreporter/engine/base/JRBaseHyperlinkParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBaseImage.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLine.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBasePropertyExpression.h"
#include "org/oss/pdfreporter/engine/base/JRBaseQuery.h"
#include "org/oss/pdfreporter/engine/base/JRBaseQueryChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseRectangle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseReportTemplate.h"
#include "org/oss/pdfreporter/engine/base/JRBaseScriptlet.h"
#include "org/oss/pdfreporter/engine/base/JRBaseSection.h"
#include "org/oss/pdfreporter/engine/base/JRBaseSortField.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStaticText.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseSubreport.h"
#include "org/oss/pdfreporter/engine/base/JRBaseSubreportParameter.h"
#include "org/oss/pdfreporter/engine/base/JRBaseSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/base/JRBaseTextField.h"
#include "org/oss/pdfreporter/engine/base/JRBaseVariable.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseObjectFactory

@synthesize defaultStyleProvider = defaultStyleProvider_;
@synthesize expressionCollector = expressionCollector_;

- (id)initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  if ((self = [super init])) {
    self.defaultStyleProvider = defaultStyleProvider;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider
           withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector {
  if ((self = [super init])) {
    self.defaultStyleProvider = defaultStyleProvider;
    self.expressionCollector = expressionCollector;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)expressionCollector {
  if ((self = [super init])) {
    self.expressionCollector = expressionCollector;
  }
  return self;
}

- (void)setDefaultStyleProviderWithOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  self.defaultStyleProvider = defaultStyleProvider;
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  OrgOssPdfreporterEngineBaseJRBaseStyle *baseStyle = nil;
  if (style != nil) {
    baseStyle = (OrgOssPdfreporterEngineBaseJRBaseStyle *) [self getWithId:style];
    if (baseStyle == nil) {
      baseStyle = [[OrgOssPdfreporterEngineBaseJRBaseStyle alloc] initWithOrgOssPdfreporterEngineJRStyle:style withOrgOssPdfreporterEngineJRAbstractObjectFactory:self];
      [self putWithId:style withId:baseStyle];
    }
  }
  return baseStyle;
}

- (void)setStyleWithOrgOssPdfreporterEngineJRStyleSetter:(id<OrgOssPdfreporterEngineJRStyleSetter>)setter
             withOrgOssPdfreporterEngineJRStyleContainer:(id<OrgOssPdfreporterEngineJRStyleContainer>)styleContainer {
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyle];
  NSString *nameReference = [((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyleNameReference];
  if (style != nil) {
    id<OrgOssPdfreporterEngineJRStyle> newStyle = [self getStyleWithOrgOssPdfreporterEngineJRStyle:style];
    [((id<OrgOssPdfreporterEngineJRStyleSetter>) nil_chk(setter)) setStyleWithOrgOssPdfreporterEngineJRStyle:newStyle];
  }
  else if (nameReference != nil) {
    [self handleStyleNameReferenceWithOrgOssPdfreporterEngineJRStyleSetter:setter withNSString:nameReference];
  }
}

- (void)handleStyleNameReferenceWithOrgOssPdfreporterEngineJRStyleSetter:(id<OrgOssPdfreporterEngineJRStyleSetter>)setter
                                                            withNSString:(NSString *)nameReference {
  [((id<OrgOssPdfreporterEngineJRStyleSetter>) nil_chk(setter)) setStyleNameReferenceWithNSString:nameReference];
}

- (OrgOssPdfreporterEngineBaseJRBaseScriptlet *)getScriptletWithOrgOssPdfreporterEngineJRScriptlet:(id<OrgOssPdfreporterEngineJRScriptlet>)scriptlet {
  OrgOssPdfreporterEngineBaseJRBaseScriptlet *baseScriptlet = nil;
  if (scriptlet != nil) {
    baseScriptlet = (OrgOssPdfreporterEngineBaseJRBaseScriptlet *) [self getWithId:scriptlet];
    if (baseScriptlet == nil) {
      baseScriptlet = [[OrgOssPdfreporterEngineBaseJRBaseScriptlet alloc] initWithOrgOssPdfreporterEngineJRScriptlet:scriptlet withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseScriptlet;
}

- (OrgOssPdfreporterEngineBaseJRBaseParameter *)getParameterWithOrgOssPdfreporterEngineJRParameter:(id<OrgOssPdfreporterEngineJRParameter>)parameter {
  OrgOssPdfreporterEngineBaseJRBaseParameter *baseParameter = nil;
  if (parameter != nil) {
    baseParameter = (OrgOssPdfreporterEngineBaseJRBaseParameter *) [self getWithId:parameter];
    if (baseParameter == nil) {
      baseParameter = [[OrgOssPdfreporterEngineBaseJRBaseParameter alloc] initWithOrgOssPdfreporterEngineJRParameter:parameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseParameter;
}

- (OrgOssPdfreporterEngineBaseJRBaseQuery *)getQueryWithOrgOssPdfreporterEngineJRQuery:(id<OrgOssPdfreporterEngineJRQuery>)query {
  OrgOssPdfreporterEngineBaseJRBaseQuery *baseQuery = nil;
  if (query != nil) {
    baseQuery = (OrgOssPdfreporterEngineBaseJRBaseQuery *) [self getWithId:query];
    if (baseQuery == nil) {
      baseQuery = [[OrgOssPdfreporterEngineBaseJRBaseQuery alloc] initWithOrgOssPdfreporterEngineJRQuery:query withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseQuery;
}

- (OrgOssPdfreporterEngineBaseJRBaseQueryChunk *)getQueryChunkWithOrgOssPdfreporterEngineJRQueryChunk:(id<OrgOssPdfreporterEngineJRQueryChunk>)queryChunk {
  OrgOssPdfreporterEngineBaseJRBaseQueryChunk *baseQueryChunk = nil;
  if (queryChunk != nil) {
    baseQueryChunk = (OrgOssPdfreporterEngineBaseJRBaseQueryChunk *) [self getWithId:queryChunk];
    if (baseQueryChunk == nil) {
      baseQueryChunk = [[OrgOssPdfreporterEngineBaseJRBaseQueryChunk alloc] initWithOrgOssPdfreporterEngineJRQueryChunk:queryChunk withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseQueryChunk;
}

- (OrgOssPdfreporterEngineBaseJRBaseField *)getFieldWithOrgOssPdfreporterEngineJRField:(id<OrgOssPdfreporterEngineJRField>)field {
  OrgOssPdfreporterEngineBaseJRBaseField *baseField = nil;
  if (field != nil) {
    baseField = (OrgOssPdfreporterEngineBaseJRBaseField *) [self getWithId:field];
    if (baseField == nil) {
      baseField = [[OrgOssPdfreporterEngineBaseJRBaseField alloc] initWithOrgOssPdfreporterEngineJRField:field withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseField;
}

- (OrgOssPdfreporterEngineBaseJRBaseSortField *)getSortFieldWithOrgOssPdfreporterEngineJRSortField:(id<OrgOssPdfreporterEngineJRSortField>)sortField {
  OrgOssPdfreporterEngineBaseJRBaseSortField *baseSortField = nil;
  if (sortField != nil) {
    baseSortField = (OrgOssPdfreporterEngineBaseJRBaseSortField *) [self getWithId:sortField];
    if (baseSortField == nil) {
      baseSortField = [[OrgOssPdfreporterEngineBaseJRBaseSortField alloc] initWithOrgOssPdfreporterEngineJRSortField:sortField withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseSortField;
}

- (OrgOssPdfreporterEngineBaseJRBaseVariable *)getVariableWithOrgOssPdfreporterEngineJRVariable:(id<OrgOssPdfreporterEngineJRVariable>)variable {
  OrgOssPdfreporterEngineBaseJRBaseVariable *baseVariable = nil;
  if (variable != nil) {
    baseVariable = (OrgOssPdfreporterEngineBaseJRBaseVariable *) [self getWithId:variable];
    if (baseVariable == nil) {
      baseVariable = [[OrgOssPdfreporterEngineBaseJRBaseVariable alloc] initWithOrgOssPdfreporterEngineJRVariable:variable withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseVariable;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                                                       withBOOL:(BOOL)assignNotUsedId {
  OrgOssPdfreporterEngineBaseJRBaseExpression *baseExpression = nil;
  if (expression != nil) {
    baseExpression = (OrgOssPdfreporterEngineBaseJRBaseExpression *) [self getWithId:expression];
    if (baseExpression == nil) {
      JavaLangInteger *expressionId = [self getCollectedExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression withBOOL:assignNotUsedId];
      baseExpression = [[OrgOssPdfreporterEngineBaseJRBaseExpression alloc] initWithOrgOssPdfreporterEngineJRExpression:expression withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self withJavaLangInteger:expressionId];
    }
  }
  return baseExpression;
}

- (JavaLangInteger *)getCollectedExpressionIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                                            withBOOL:(BOOL)assignNotUsedId {
  JavaLangInteger *expressionId = nil;
  if (expressionCollector_ != nil) {
    expressionId = [expressionCollector_ getExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression];
    if (expressionId == nil) {
      if (assignNotUsedId) {
        expressionId = [OrgOssPdfreporterEngineJRExpression NOT_USED_ID];
      }
      else {
        @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Expression ID not found for expression <<%@>>.", [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getText]]];
      }
    }
  }
  return expressionId;
}

- (OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *)getExpressionChunkWithOrgOssPdfreporterEngineJRExpressionChunk:(id<OrgOssPdfreporterEngineJRExpressionChunk>)expressionChunk {
  OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *baseExpressionChunk = nil;
  if (expressionChunk != nil) {
    baseExpressionChunk = (OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *) [self getWithId:expressionChunk];
    if (baseExpressionChunk == nil) {
      baseExpressionChunk = [[OrgOssPdfreporterEngineBaseJRBaseExpressionChunk alloc] initWithOrgOssPdfreporterEngineJRExpressionChunk:expressionChunk withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseExpressionChunk;
}

- (OrgOssPdfreporterEngineBaseJRBaseGroup *)getGroupWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group {
  OrgOssPdfreporterEngineBaseJRBaseGroup *baseGroup = nil;
  if (group != nil) {
    baseGroup = (OrgOssPdfreporterEngineBaseJRBaseGroup *) [self getWithId:group];
    if (baseGroup == nil) {
      baseGroup = [[OrgOssPdfreporterEngineBaseJRBaseGroup alloc] initWithOrgOssPdfreporterEngineJRGroup:group withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseGroup;
}

- (OrgOssPdfreporterEngineBaseJRBaseSection *)getSectionWithOrgOssPdfreporterEngineJRSection:(id<OrgOssPdfreporterEngineJRSection>)section {
  OrgOssPdfreporterEngineBaseJRBaseSection *baseSection = nil;
  if (section != nil) {
    baseSection = (OrgOssPdfreporterEngineBaseJRBaseSection *) [self getWithId:section];
    if (baseSection == nil) {
      baseSection = [[OrgOssPdfreporterEngineBaseJRBaseSection alloc] initWithOrgOssPdfreporterEngineJRSection:section withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseSection;
}

- (OrgOssPdfreporterEngineBaseJRBaseBand *)getBandWithOrgOssPdfreporterEngineJRBand:(id<OrgOssPdfreporterEngineJRBand>)band {
  OrgOssPdfreporterEngineBaseJRBaseBand *baseBand = nil;
  if (band != nil) {
    baseBand = (OrgOssPdfreporterEngineBaseJRBaseBand *) [self getWithId:band];
    if (baseBand == nil) {
      baseBand = [[OrgOssPdfreporterEngineBaseJRBaseBand alloc] initWithOrgOssPdfreporterEngineJRBand:band withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseBand;
}

- (void)visitElementGroupWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)elementGroup {
  id<OrgOssPdfreporterEngineJRElementGroup> baseElementGroup = nil;
  if (elementGroup != nil) {
    baseElementGroup = (id<OrgOssPdfreporterEngineJRElementGroup>) [self getWithId:elementGroup];
    if (baseElementGroup == nil) {
      baseElementGroup = [[OrgOssPdfreporterEngineBaseJRBaseElementGroup alloc] initWithOrgOssPdfreporterEngineJRElementGroup:elementGroup withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseElementGroup];
}

- (void)visitBreakWithOrgOssPdfreporterEngineJRBreak:(id<OrgOssPdfreporterEngineJRBreak>)breakElement {
  OrgOssPdfreporterEngineBaseJRBaseBreak *baseBreak = nil;
  if (breakElement != nil) {
    baseBreak = (OrgOssPdfreporterEngineBaseJRBaseBreak *) [self getWithId:breakElement];
    if (baseBreak == nil) {
      baseBreak = [[OrgOssPdfreporterEngineBaseJRBaseBreak alloc] initWithOrgOssPdfreporterEngineJRBreak:breakElement withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseBreak];
}

- (void)visitLineWithOrgOssPdfreporterEngineJRLine:(id<OrgOssPdfreporterEngineJRLine>)line {
  OrgOssPdfreporterEngineBaseJRBaseLine *baseLine = nil;
  if (line != nil) {
    baseLine = (OrgOssPdfreporterEngineBaseJRBaseLine *) [self getWithId:line];
    if (baseLine == nil) {
      baseLine = [[OrgOssPdfreporterEngineBaseJRBaseLine alloc] initWithOrgOssPdfreporterEngineJRLine:line withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseLine];
}

- (void)visitRectangleWithOrgOssPdfreporterEngineJRRectangle:(id<OrgOssPdfreporterEngineJRRectangle>)rectangle {
  OrgOssPdfreporterEngineBaseJRBaseRectangle *baseRectangle = nil;
  if (rectangle != nil) {
    baseRectangle = (OrgOssPdfreporterEngineBaseJRBaseRectangle *) [self getWithId:rectangle];
    if (baseRectangle == nil) {
      baseRectangle = [[OrgOssPdfreporterEngineBaseJRBaseRectangle alloc] initWithOrgOssPdfreporterEngineJRRectangle:rectangle withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseRectangle];
}

- (void)visitEllipseWithOrgOssPdfreporterEngineJREllipse:(id<OrgOssPdfreporterEngineJREllipse>)ellipse {
  OrgOssPdfreporterEngineBaseJRBaseEllipse *baseEllipse = nil;
  if (ellipse != nil) {
    baseEllipse = (OrgOssPdfreporterEngineBaseJRBaseEllipse *) [self getWithId:ellipse];
    if (baseEllipse == nil) {
      baseEllipse = [[OrgOssPdfreporterEngineBaseJRBaseEllipse alloc] initWithOrgOssPdfreporterEngineJREllipse:ellipse withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseEllipse];
}

- (void)visitImageWithOrgOssPdfreporterEngineJRImage:(id<OrgOssPdfreporterEngineJRImage>)image {
  OrgOssPdfreporterEngineBaseJRBaseImage *baseImage = nil;
  if (image != nil) {
    baseImage = (OrgOssPdfreporterEngineBaseJRBaseImage *) [self getWithId:image];
    if (baseImage == nil) {
      baseImage = [[OrgOssPdfreporterEngineBaseJRBaseImage alloc] initWithOrgOssPdfreporterEngineJRImage:image withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseImage];
}

- (void)visitStaticTextWithOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  OrgOssPdfreporterEngineBaseJRBaseStaticText *baseStaticText = nil;
  if (staticText != nil) {
    baseStaticText = (OrgOssPdfreporterEngineBaseJRBaseStaticText *) [self getWithId:staticText];
    if (baseStaticText == nil) {
      baseStaticText = [[OrgOssPdfreporterEngineBaseJRBaseStaticText alloc] initWithOrgOssPdfreporterEngineJRStaticText:staticText withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseStaticText];
}

- (void)visitTextFieldWithOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  OrgOssPdfreporterEngineBaseJRBaseTextField *baseTextField = nil;
  if (textField != nil) {
    baseTextField = (OrgOssPdfreporterEngineBaseJRBaseTextField *) [self getWithId:textField];
    if (baseTextField == nil) {
      baseTextField = [[OrgOssPdfreporterEngineBaseJRBaseTextField alloc] initWithOrgOssPdfreporterEngineJRTextField:textField withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseTextField];
}

- (void)visitSubreportWithOrgOssPdfreporterEngineJRSubreport:(id<OrgOssPdfreporterEngineJRSubreport>)subreport {
  OrgOssPdfreporterEngineBaseJRBaseSubreport *baseSubreport = nil;
  if (subreport != nil) {
    baseSubreport = (OrgOssPdfreporterEngineBaseJRBaseSubreport *) [self getWithId:subreport];
    if (baseSubreport == nil) {
      baseSubreport = [[OrgOssPdfreporterEngineBaseJRBaseSubreport alloc] initWithOrgOssPdfreporterEngineJRSubreport:subreport withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseSubreport];
}

- (OrgOssPdfreporterEngineBaseJRBaseSubreportParameter *)getSubreportParameterWithOrgOssPdfreporterEngineJRSubreportParameter:(id<OrgOssPdfreporterEngineJRSubreportParameter>)subreportParameter {
  OrgOssPdfreporterEngineBaseJRBaseSubreportParameter *baseSubreportParameter = nil;
  if (subreportParameter != nil) {
    baseSubreportParameter = (OrgOssPdfreporterEngineBaseJRBaseSubreportParameter *) [self getWithId:subreportParameter];
    if (baseSubreportParameter == nil) {
      baseSubreportParameter = [[OrgOssPdfreporterEngineBaseJRBaseSubreportParameter alloc] initWithOrgOssPdfreporterEngineJRSubreportParameter:subreportParameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
      [self putWithId:subreportParameter withId:baseSubreportParameter];
    }
  }
  return baseSubreportParameter;
}

- (OrgOssPdfreporterEngineBaseJRBaseDatasetParameter *)getDatasetParameterWithOrgOssPdfreporterEngineJRDatasetParameter:(id<OrgOssPdfreporterEngineJRDatasetParameter>)datasetParameter {
  OrgOssPdfreporterEngineBaseJRBaseDatasetParameter *baseSubreportParameter = nil;
  if (datasetParameter != nil) {
    baseSubreportParameter = (OrgOssPdfreporterEngineBaseJRBaseDatasetParameter *) [self getWithId:datasetParameter];
    if (baseSubreportParameter == nil) {
      baseSubreportParameter = [[OrgOssPdfreporterEngineBaseJRBaseDatasetParameter alloc] initWithOrgOssPdfreporterEngineJRDatasetParameter:datasetParameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
      [self putWithId:datasetParameter withId:baseSubreportParameter];
    }
  }
  return baseSubreportParameter;
}

- (OrgOssPdfreporterEngineBaseJRBaseSubreportReturnValue *)getSubreportReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)returnValue {
  OrgOssPdfreporterEngineBaseJRBaseSubreportReturnValue *baseSubreportReturnValue = nil;
  if (returnValue != nil) {
    baseSubreportReturnValue = (OrgOssPdfreporterEngineBaseJRBaseSubreportReturnValue *) [self getWithId:returnValue];
    if (baseSubreportReturnValue == nil) {
      baseSubreportReturnValue = [[OrgOssPdfreporterEngineBaseJRBaseSubreportReturnValue alloc] initWithOrgOssPdfreporterEngineJRSubreportReturnValue:returnValue withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
      [self putWithId:returnValue withId:baseSubreportReturnValue];
    }
  }
  return baseSubreportReturnValue;
}

- (id<OrgOssPdfreporterEngineJRConditionalStyle>)getConditionalStyleWithOrgOssPdfreporterEngineJRConditionalStyle:(id<OrgOssPdfreporterEngineJRConditionalStyle>)conditionalStyle
                                                                               withOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  OrgOssPdfreporterEngineBaseJRBaseConditionalStyle *baseConditionalStyle = nil;
  if (conditionalStyle != nil) {
    baseConditionalStyle = (OrgOssPdfreporterEngineBaseJRBaseConditionalStyle *) [self getWithId:conditionalStyle];
    if (baseConditionalStyle == nil) {
      baseConditionalStyle = [[OrgOssPdfreporterEngineBaseJRBaseConditionalStyle alloc] initWithOrgOssPdfreporterEngineJRConditionalStyle:conditionalStyle withOrgOssPdfreporterEngineJRStyle:style withOrgOssPdfreporterEngineJRAbstractObjectFactory:self];
      [self putWithId:conditionalStyle withId:baseConditionalStyle];
    }
  }
  return baseConditionalStyle;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabDataset *)getCrosstabDatasetWithOrgOssPdfreporterCrosstabsJRCrosstabDataset:(id<OrgOssPdfreporterCrosstabsJRCrosstabDataset>)crosstabDataset {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabDataset *baseCrosstabDataset = nil;
  if (crosstabDataset != nil) {
    baseCrosstabDataset = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabDataset *) [self getWithId:crosstabDataset];
    if (baseCrosstabDataset == nil) {
      baseCrosstabDataset = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabDataset alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabDataset:crosstabDataset withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCrosstabDataset;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabRowGroup *)getCrosstabRowGroupWithOrgOssPdfreporterCrosstabsJRCrosstabRowGroup:(id<OrgOssPdfreporterCrosstabsJRCrosstabRowGroup>)group {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabRowGroup *baseCrosstabRowGroup = nil;
  if (group != nil) {
    baseCrosstabRowGroup = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabRowGroup *) [self getWithId:group];
    if (baseCrosstabRowGroup == nil) {
      baseCrosstabRowGroup = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabRowGroup alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabRowGroup:group withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCrosstabRowGroup;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabColumnGroup *)getCrosstabColumnGroupWithOrgOssPdfreporterCrosstabsJRCrosstabColumnGroup:(id<OrgOssPdfreporterCrosstabsJRCrosstabColumnGroup>)group {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabColumnGroup *baseCrosstabDataset = nil;
  if (group != nil) {
    baseCrosstabDataset = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabColumnGroup *) [self getWithId:group];
    if (baseCrosstabDataset == nil) {
      baseCrosstabDataset = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabColumnGroup alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabColumnGroup:group withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCrosstabDataset;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabBucket *)getCrosstabBucketWithOrgOssPdfreporterCrosstabsJRCrosstabBucket:(id<OrgOssPdfreporterCrosstabsJRCrosstabBucket>)bucket {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabBucket *baseCrosstabBucket = nil;
  if (bucket != nil) {
    baseCrosstabBucket = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabBucket *) [self getWithId:bucket];
    if (baseCrosstabBucket == nil) {
      baseCrosstabBucket = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabBucket alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabBucket:bucket withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCrosstabBucket;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *)getCrosstabMeasureWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure:(id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>)measure {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *baseCrosstabMeasure = nil;
  if (measure != nil) {
    baseCrosstabMeasure = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *) [self getWithId:measure];
    if (baseCrosstabMeasure == nil) {
      baseCrosstabMeasure = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure:measure withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCrosstabMeasure;
}

- (void)visitCrosstabWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstab *baseCrosstab = nil;
  if (crosstab != nil) {
    baseCrosstab = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstab *) [self getWithId:crosstab];
    if (baseCrosstab == nil) {
      JavaLangInteger *id_ = [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(expressionCollector_)) getCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
      if (id_ == nil) {
        @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:@"Crosstab ID not found."];
      }
      baseCrosstab = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstab alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self withInt:[((JavaLangInteger *) nil_chk(id_)) intValue]];
    }
  }
  [self setVisitResultWithId:baseCrosstab];
}

- (OrgOssPdfreporterEngineBaseJRBaseDataset *)getDatasetWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  OrgOssPdfreporterEngineBaseJRBaseDataset *baseDataset = nil;
  if (dataset != nil) {
    baseDataset = (OrgOssPdfreporterEngineBaseJRBaseDataset *) [self getWithId:dataset];
    if (baseDataset == nil) {
      baseDataset = [[OrgOssPdfreporterEngineBaseJRBaseDataset alloc] initWithOrgOssPdfreporterEngineJRDataset:dataset withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseDataset;
}

- (OrgOssPdfreporterEngineBaseJRBaseDatasetRun *)getDatasetRunWithOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun {
  OrgOssPdfreporterEngineBaseJRBaseDatasetRun *baseDatasetRun = nil;
  if (datasetRun != nil) {
    baseDatasetRun = (OrgOssPdfreporterEngineBaseJRBaseDatasetRun *) [self getWithId:datasetRun];
    if (baseDatasetRun == nil) {
      baseDatasetRun = [[OrgOssPdfreporterEngineBaseJRBaseDatasetRun alloc] initWithOrgOssPdfreporterEngineJRDatasetRun:datasetRun withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseDatasetRun;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *)getCellWithOrgOssPdfreporterCrosstabsJRCellContents:(id<OrgOssPdfreporterCrosstabsJRCellContents>)cell {
  OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *baseCell = nil;
  if (cell != nil) {
    baseCell = (OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) [self getWithId:cell];
    if (baseCell == nil) {
      baseCell = [[OrgOssPdfreporterCrosstabsBaseJRBaseCellContents alloc] initWithOrgOssPdfreporterCrosstabsJRCellContents:cell withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCell;
}

- (id<OrgOssPdfreporterCrosstabsJRCrosstabCell>)getCrosstabCellWithOrgOssPdfreporterCrosstabsJRCrosstabCell:(id<OrgOssPdfreporterCrosstabsJRCrosstabCell>)cell {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabCell *baseCell = nil;
  if (cell != nil) {
    baseCell = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabCell *) [self getWithId:cell];
    if (baseCell == nil) {
      baseCell = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabCell alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabCell:cell withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseCell;
}

- (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabParameter *)getCrosstabParameterWithOrgOssPdfreporterCrosstabsJRCrosstabParameter:(id<OrgOssPdfreporterCrosstabsJRCrosstabParameter>)parameter {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabParameter *baseParameter = nil;
  if (parameter != nil) {
    baseParameter = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabParameter *) [self getWithId:parameter];
    if (baseParameter == nil) {
      baseParameter = [[OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabParameter alloc] initWithOrgOssPdfreporterCrosstabsJRCrosstabParameter:parameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseParameter;
}

- (void)visitFrameWithOrgOssPdfreporterEngineJRFrame:(id<OrgOssPdfreporterEngineJRFrame>)frame {
  OrgOssPdfreporterEngineBaseJRBaseFrame *baseFrame = nil;
  if (frame != nil) {
    baseFrame = (OrgOssPdfreporterEngineBaseJRBaseFrame *) [self getWithId:frame];
    if (baseFrame == nil) {
      baseFrame = [[OrgOssPdfreporterEngineBaseJRBaseFrame alloc] initWithOrgOssPdfreporterEngineJRFrame:frame withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:baseFrame];
}

- (id<OrgOssPdfreporterEngineJRHyperlinkParameter>)getHyperlinkParameterWithOrgOssPdfreporterEngineJRHyperlinkParameter:(id<OrgOssPdfreporterEngineJRHyperlinkParameter>)parameter {
  id<OrgOssPdfreporterEngineJRHyperlinkParameter> baseParameter = nil;
  if (parameter != nil) {
    baseParameter = (id<OrgOssPdfreporterEngineJRHyperlinkParameter>) [self getWithId:parameter];
    if (baseParameter == nil) {
      baseParameter = [[OrgOssPdfreporterEngineBaseJRBaseHyperlinkParameter alloc] initWithOrgOssPdfreporterEngineJRHyperlinkParameter:parameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseParameter;
}

- (id<OrgOssPdfreporterEngineJRHyperlink>)getHyperlinkWithOrgOssPdfreporterEngineJRHyperlink:(id<OrgOssPdfreporterEngineJRHyperlink>)hyperlink {
  id<OrgOssPdfreporterEngineJRHyperlink> link = nil;
  if (hyperlink != nil) {
    link = (id<OrgOssPdfreporterEngineJRHyperlink>) [self getWithId:hyperlink];
    if (link == nil) {
      link = [[OrgOssPdfreporterEngineBaseJRBaseHyperlink alloc] initWithOrgOssPdfreporterEngineJRHyperlink:hyperlink withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return link;
}

- (id<OrgOssPdfreporterEngineJRReportTemplate>)getReportTemplateWithOrgOssPdfreporterEngineJRReportTemplate:(id<OrgOssPdfreporterEngineJRReportTemplate>)template_ {
  id<OrgOssPdfreporterEngineJRReportTemplate> baseTemplate = nil;
  if (template_ != nil) {
    baseTemplate = (id<OrgOssPdfreporterEngineJRReportTemplate>) [self getWithId:template_];
    if (baseTemplate == nil) {
      baseTemplate = [[OrgOssPdfreporterEngineBaseJRBaseReportTemplate alloc] initWithOrgOssPdfreporterEngineJRReportTemplate:template_ withOrgOssPdfreporterEngineJRAbstractObjectFactory:self];
    }
  }
  return baseTemplate;
}

- (id<OrgOssPdfreporterEngineJRPropertyExpression>)getPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:(id<OrgOssPdfreporterEngineJRPropertyExpression>)propertyExpression {
  id<OrgOssPdfreporterEngineJRPropertyExpression> baseProp = nil;
  if (propertyExpression != nil) {
    baseProp = (id<OrgOssPdfreporterEngineJRPropertyExpression>) [self getWithId:propertyExpression];
    if (baseProp == nil) {
      baseProp = [[OrgOssPdfreporterEngineBaseJRBasePropertyExpression alloc] initWithOrgOssPdfreporterEngineJRPropertyExpression:propertyExpression withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseProp;
}

- (void)visitComponentElementWithOrgOssPdfreporterEngineJRComponentElement:(id<OrgOssPdfreporterEngineJRComponentElement>)componentElement {
  OrgOssPdfreporterEngineBaseJRBaseComponentElement *base = nil;
  if (componentElement != nil) {
    base = (OrgOssPdfreporterEngineBaseJRBaseComponentElement *) [self getWithId:componentElement];
    if (base == nil) {
      base = [[OrgOssPdfreporterEngineBaseJRBaseComponentElement alloc] initWithOrgOssPdfreporterEngineJRComponentElement:componentElement withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:base];
}

- (id<OrgOssPdfreporterEngineJRGenericElementParameter>)getGenericElementParameterWithOrgOssPdfreporterEngineJRGenericElementParameter:(id<OrgOssPdfreporterEngineJRGenericElementParameter>)elementParameter {
  id<OrgOssPdfreporterEngineJRGenericElementParameter> baseParameter = nil;
  if (elementParameter != nil) {
    baseParameter = (id<OrgOssPdfreporterEngineJRGenericElementParameter>) [self getWithId:elementParameter];
    if (baseParameter == nil) {
      baseParameter = [[OrgOssPdfreporterEngineBaseJRBaseGenericElementParameter alloc] initWithOrgOssPdfreporterEngineJRGenericElementParameter:elementParameter withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  return baseParameter;
}

- (void)visitGenericElementWithOrgOssPdfreporterEngineJRGenericElement:(id<OrgOssPdfreporterEngineJRGenericElement>)element {
  OrgOssPdfreporterEngineBaseJRBaseGenericElement *base = nil;
  if (element != nil) {
    base = (OrgOssPdfreporterEngineBaseJRBaseGenericElement *) [self getWithId:element];
    if (base == nil) {
      base = [[OrgOssPdfreporterEngineBaseJRBaseGenericElement alloc] initWithOrgOssPdfreporterEngineJRGenericElement:element withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:self];
    }
  }
  [self setVisitResultWithId:base];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseObjectFactory *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) copy;
  typedCopy.defaultStyleProvider = defaultStyleProvider_;
  typedCopy.expressionCollector = expressionCollector_;
}

@end
