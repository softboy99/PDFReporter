//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseStyle.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRAbstractObjectFactory.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBaseParagraph.h"
#include "org/oss/pdfreporter/engine/base/JRBasePen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/FillEnum.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/ScaleImageEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseStyle

static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BACKCOLOR_ = @"backcolor";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BLANK_WHEN_NULL_ = @"blankWhenNull";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BOLD_ = @"bold";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FILL_ = @"fill";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_NAME_ = @"fontName";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_SIZE_ = @"fontSize";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FORECOLOR_ = @"forecolor";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_HORIZONTAL_ALIGNMENT_ = @"horizontalAlignment";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ITALIC_ = @"italic";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_LINE_SPACING_ = @"lineSpacing";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MODE_ = @"mode";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PATTERN_ = @"pattern";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_EMBEDDED_ = @"pdfEmbedded";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_ENCODING_ = @"pdfEncoding";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_FONT_NAME_ = @"pdfFontName";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_RADIUS_ = @"radius";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ROTATION_ = @"rotation";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_SCALE_IMAGE_ = @"scaleImage";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_STRIKE_THROUGH_ = @"strikeThrough";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MARKUP_ = @"markup";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_UNDERLINE_ = @"underline";
static NSString * OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_VERTICAL_ALIGNMENT_ = @"verticalAlignment";

@synthesize defaultStyleProvider = defaultStyleProvider_;
@synthesize parentStyle = parentStyle_;
@synthesize parentStyleNameReference = parentStyleNameReference_;
@synthesize name = name_;
@synthesize isDefault_ = isDefault__;
@synthesize positionType = positionType_;
@synthesize stretchType = stretchType_;
@synthesize modeValue = modeValue_;
@synthesize forecolor = forecolor_;
@synthesize backcolor = backcolor_;
@synthesize linePen = linePen_;
@synthesize fillValue = fillValue_;
@synthesize radius = radius_;
@synthesize scaleImageValue = scaleImageValue_;
@synthesize horizontalAlignmentValue = horizontalAlignmentValue_;
@synthesize verticalAlignmentValue = verticalAlignmentValue_;
@synthesize lineBox = lineBox_;
@synthesize paragraph = paragraph_;
@synthesize fontName = fontName_;
@synthesize isBold_ = isBold__;
@synthesize isItalic_ = isItalic__;
@synthesize isUnderline_ = isUnderline__;
@synthesize isStrikeThrough_ = isStrikeThrough__;
@synthesize fontSize = fontSize_;
@synthesize pdfFontName = pdfFontName_;
@synthesize pdfEncoding = pdfEncoding_;
@synthesize isPdfEmbedded_ = isPdfEmbedded__;
@synthesize rotationValue = rotationValue_;
@synthesize markup = markup_;
@synthesize pattern = pattern_;
@synthesize isBlankWhenNull_ = isBlankWhenNull__;
@synthesize conditionalStyles = conditionalStyles_;
@synthesize eventSupport = eventSupport_;

+ (NSString *)PROPERTY_BACKCOLOR {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BACKCOLOR_;
}

+ (NSString *)PROPERTY_BLANK_WHEN_NULL {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BLANK_WHEN_NULL_;
}

+ (NSString *)PROPERTY_BOLD {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BOLD_;
}

+ (NSString *)PROPERTY_FILL {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FILL_;
}

+ (NSString *)PROPERTY_FONT_NAME {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_NAME_;
}

+ (NSString *)PROPERTY_FONT_SIZE {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_SIZE_;
}

+ (NSString *)PROPERTY_FORECOLOR {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FORECOLOR_;
}

+ (NSString *)PROPERTY_HORIZONTAL_ALIGNMENT {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_HORIZONTAL_ALIGNMENT_;
}

+ (NSString *)PROPERTY_ITALIC {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ITALIC_;
}

+ (NSString *)PROPERTY_LINE_SPACING {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_LINE_SPACING_;
}

+ (NSString *)PROPERTY_MODE {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MODE_;
}

+ (NSString *)PROPERTY_PATTERN {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PATTERN_;
}

+ (NSString *)PROPERTY_PDF_EMBEDDED {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_EMBEDDED_;
}

+ (NSString *)PROPERTY_PDF_ENCODING {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_ENCODING_;
}

+ (NSString *)PROPERTY_PDF_FONT_NAME {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_FONT_NAME_;
}

+ (NSString *)PROPERTY_RADIUS {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_RADIUS_;
}

+ (NSString *)PROPERTY_ROTATION {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ROTATION_;
}

+ (NSString *)PROPERTY_SCALE_IMAGE {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_SCALE_IMAGE_;
}

+ (NSString *)PROPERTY_STRIKE_THROUGH {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_STRIKE_THROUGH_;
}

+ (NSString *)PROPERTY_MARKUP {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MARKUP_;
}

+ (NSString *)PROPERTY_UNDERLINE {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_UNDERLINE_;
}

+ (NSString *)PROPERTY_VERTICAL_ALIGNMENT {
  return OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_VERTICAL_ALIGNMENT_;
}

- (id)init {
  if ((self = [super init])) {
    linePen_ = [[OrgOssPdfreporterEngineBaseJRBasePen alloc] initWithOrgOssPdfreporterEngineJRPenContainer:self];
    lineBox_ = [[OrgOssPdfreporterEngineBaseJRBaseLineBox alloc] initWithOrgOssPdfreporterEngineJRBoxContainer:self];
    paragraph_ = [[OrgOssPdfreporterEngineBaseJRBaseParagraph alloc] initWithOrgOssPdfreporterEngineJRParagraphContainer:self];
  }
  return self;
}

- (id)initWithNSString:(NSString *)name {
  if ((self = [super init])) {
    self.name = name;
    linePen_ = [[OrgOssPdfreporterEngineBaseJRBasePen alloc] initWithOrgOssPdfreporterEngineJRPenContainer:self];
    lineBox_ = [[OrgOssPdfreporterEngineBaseJRBaseLineBox alloc] initWithOrgOssPdfreporterEngineJRBoxContainer:self];
    paragraph_ = [[OrgOssPdfreporterEngineBaseJRBaseParagraph alloc] initWithOrgOssPdfreporterEngineJRParagraphContainer:self];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style
withOrgOssPdfreporterEngineJRAbstractObjectFactory:(OrgOssPdfreporterEngineJRAbstractObjectFactory *)factory {
  if ((self = [super init])) {
    name_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName];
    [((OrgOssPdfreporterEngineJRAbstractObjectFactory *) nil_chk(factory)) setStyleWithOrgOssPdfreporterEngineJRStyleSetter:[[OrgOssPdfreporterEngineBaseJRBaseStyle_$1 alloc] initWithOrgOssPdfreporterEngineBaseJRBaseStyle:self] withOrgOssPdfreporterEngineJRStyleContainer:style];
    isDefault__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isDefault];
    modeValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnModeValue];
    forecolor_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnForecolor];
    backcolor_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnBackcolor];
    linePen_ = [((id<OrgOssPdfreporterEngineJRPen>) nil_chk([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getLinePen])) cloneWithOrgOssPdfreporterEngineJRPenContainer:self];
    fillValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnFillValue];
    radius_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnRadius];
    scaleImageValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnScaleImageValue];
    horizontalAlignmentValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnHorizontalAlignmentValue];
    verticalAlignmentValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnVerticalAlignmentValue];
    lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
    paragraph_ = [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getParagraph])) cloneWithOrgOssPdfreporterEngineJRParagraphContainer:self];
    rotationValue_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnRotationValue];
    markup_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnMarkup];
    pattern_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnPattern];
    fontName_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnFontName];
    isBold__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnBold];
    isItalic__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnItalic];
    isUnderline__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnUnderline];
    isStrikeThrough__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnStrikeThrough];
    fontSize_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnFontSize];
    pdfFontName_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnPdfFontName];
    pdfEncoding_ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getOwnPdfEncoding];
    isPdfEmbedded__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnPdfEmbedded];
    isBlankWhenNull__ = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) isOwnBlankWhenNull];
    IOSObjectArray *condStyles = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getConditionalStyles];
    if (condStyles != nil && (int) [((IOSObjectArray *) nil_chk(condStyles)) count] > 0) {
      self.conditionalStyles = [IOSObjectArray arrayWithLength:(int) [((IOSObjectArray *) nil_chk(condStyles)) count] type:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineJRConditionalStyle)]];
      for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(condStyles)) count]; i++) {
        (void) [((IOSObjectArray *) nil_chk(self.conditionalStyles)) replaceObjectAtIndex:i withObject:[((OrgOssPdfreporterEngineJRAbstractObjectFactory *) nil_chk(factory)) getConditionalStyleWithOrgOssPdfreporterEngineJRConditionalStyle:[((IOSObjectArray *) nil_chk(condStyles)) objectAtIndex:i] withOrgOssPdfreporterEngineJRStyle:self]];
      }
    }
  }
  return self;
}

- (void)setParentStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)parentStyle {
  self.parentStyle = parentStyle;
  [self checkCircularParent];
}

- (void)checkCircularParent {
  for (id<OrgOssPdfreporterEngineJRStyle> ancestor = parentStyle_; ancestor != nil; ancestor = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(ancestor)) getStyle]) {
    if (ancestor == self) {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Circular dependency detected for style %@", [self getName]]];
    }
  }
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return parentStyle_;
}

- (NSString *)getName {
  return name_;
}

- (void)renameWithNSString:(NSString *)newName {
  self.name = newName;
}

- (BOOL)isDefault {
  return isDefault__;
}

- (id<OrgOssPdfreporterGeometryIColor>)getForecolor {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getForecolorWithOrgOssPdfreporterEngineJRStyle:self];
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnForecolor {
  return forecolor_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getBackcolorWithOrgOssPdfreporterEngineJRStyle:self];
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnBackcolor {
  return backcolor_;
}

- (id<OrgOssPdfreporterEngineJRPen>)getLinePen {
  return linePen_;
}

- (OrgOssPdfreporterEngineTypeFillEnumEnum *)getFillValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFillValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeFillEnumEnum *)getOwnFillValue {
  return fillValue_;
}

- (JavaLangInteger *)getRadius {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getRadiusWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangInteger *)getOwnRadius {
  return radius_;
}

- (OrgOssPdfreporterEngineTypeScaleImageEnumEnum *)getScaleImageValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getScaleImageValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeScaleImageEnumEnum *)getOwnScaleImageValue {
  return self.scaleImageValue;
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getHorizontalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getHorizontalAlignmentValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getOwnHorizontalAlignmentValue {
  return horizontalAlignmentValue_;
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getVerticalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getVerticalAlignmentValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getOwnVerticalAlignmentValue {
  return verticalAlignmentValue_;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph {
  return paragraph_;
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getRotationValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getRotationValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getOwnRotationValue {
  return self.rotationValue;
}

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnumEnum:(OrgOssPdfreporterEngineTypeRotationEnumEnum *)rotationValue {
  id old = self.rotationValue;
  self.rotationValue = rotationValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ROTATION_ withId:old withId:self.rotationValue];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getLineSpacing];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getOwnLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getOwnLineSpacing];
}

- (NSString *)getMarkup {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getMarkupWithOrgOssPdfreporterEngineJRStyle:self];
}

- (NSString *)getOwnMarkup {
  return markup_;
}

- (JavaLangBoolean *)isBlankWhenNull {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isBlankWhenNullWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnBlankWhenNull {
  return isBlankWhenNull__;
}

- (NSString *)getFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontNameWithOrgOssPdfreporterEngineJRStyle:self];
}

- (NSString *)getOwnFontName {
  return fontName_;
}

- (JavaLangBoolean *)isBold {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isBoldWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnBold {
  return isBold__;
}

- (JavaLangBoolean *)isItalic {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isItalicWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnItalic {
  return isItalic__;
}

- (JavaLangBoolean *)isUnderline {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isUnderlineWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnUnderline {
  return isUnderline__;
}

- (JavaLangBoolean *)isStrikeThrough {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isStrikeThroughWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnStrikeThrough {
  return isStrikeThrough__;
}

- (JavaLangInteger *)getFontSize {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontSizeWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangInteger *)getOwnFontSize {
  return fontSize_;
}

- (NSString *)getPdfFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfFontNameWithOrgOssPdfreporterEngineJRStyle:self];
}

- (NSString *)getOwnPdfFontName {
  return pdfFontName_;
}

- (NSString *)getPdfEncoding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfEncodingWithOrgOssPdfreporterEngineJRStyle:self];
}

- (NSString *)getOwnPdfEncoding {
  return pdfEncoding_;
}

- (JavaLangBoolean *)isPdfEmbedded {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isPdfEmbeddedWithOrgOssPdfreporterEngineJRStyle:self];
}

- (JavaLangBoolean *)isOwnPdfEmbedded {
  return isPdfEmbedded__;
}

- (NSString *)getPattern {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPatternWithOrgOssPdfreporterEngineJRStyle:self];
}

- (NSString *)getOwnPattern {
  return pattern_;
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getModeValueWithOrgOssPdfreporterEngineJRStyle:self];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getOwnModeValue {
  return modeValue_;
}

- (void)setForecolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)forecolor {
  id old = self.forecolor;
  self.forecolor = forecolor;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FORECOLOR_ withId:old withId:self.forecolor];
}

- (void)setBackcolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)backcolor {
  id old = self.backcolor;
  self.backcolor = backcolor;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BACKCOLOR_ withId:old withId:self.backcolor];
}

- (void)setModeWithOrgOssPdfreporterEngineTypeModeEnumEnum:(OrgOssPdfreporterEngineTypeModeEnumEnum *)modeValue {
  id old = self.modeValue;
  self.modeValue = modeValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MODE_ withId:old withId:self.modeValue];
}

- (void)setFillWithOrgOssPdfreporterEngineTypeFillEnumEnum:(OrgOssPdfreporterEngineTypeFillEnumEnum *)fillValue {
  id old = self.fillValue;
  self.fillValue = fillValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FILL_ withId:old withId:self.fillValue];
}

- (void)setRadiusWithInt:(int)radius {
  [self setRadiusWithJavaLangInteger:[JavaLangInteger valueOfWithInt:radius]];
}

- (void)setRadiusWithJavaLangInteger:(JavaLangInteger *)radius {
  id old = self.radius;
  self.radius = radius;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_RADIUS_ withId:old withId:self.radius];
}

- (void)setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnumEnum:(OrgOssPdfreporterEngineTypeScaleImageEnumEnum *)scaleImageValue {
  id old = self.scaleImageValue;
  self.scaleImageValue = scaleImageValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_SCALE_IMAGE_ withId:old withId:self.scaleImageValue];
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)horizontalAlignmentValue {
  id old = self.horizontalAlignmentValue;
  self.horizontalAlignmentValue = horizontalAlignmentValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_HORIZONTAL_ALIGNMENT_ withId:old withId:self.horizontalAlignmentValue];
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnumEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)verticalAlignmentValue {
  id old = self.verticalAlignmentValue;
  self.verticalAlignmentValue = verticalAlignmentValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_VERTICAL_ALIGNMENT_ withId:old withId:self.verticalAlignmentValue];
}

- (void)setFontNameWithNSString:(NSString *)fontName {
  id old = self.fontName;
  self.fontName = fontName;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_NAME_ withId:old withId:self.fontName];
}

- (void)setBoldWithBOOL:(BOOL)bold {
  [self setBoldWithJavaLangBoolean:bold ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)bold {
  id old = self.isBold_;
  self.isBold_ = bold;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BOLD_ withId:old withId:self.isBold_];
}

- (void)setItalicWithBOOL:(BOOL)italic {
  [self setItalicWithJavaLangBoolean:italic ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)italic {
  id old = self.isItalic_;
  self.isItalic_ = italic;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_ITALIC_ withId:old withId:self.isItalic_];
}

- (void)setPdfEmbeddedWithBOOL:(BOOL)pdfEmbedded {
  [self setPdfEmbeddedWithJavaLangBoolean:pdfEmbedded ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)pdfEmbedded {
  id old = self.isPdfEmbedded_;
  self.isPdfEmbedded_ = pdfEmbedded;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_EMBEDDED_ withId:old withId:self.isPdfEmbedded_];
}

- (void)setStrikeThroughWithBOOL:(BOOL)strikeThrough {
  [self setStrikeThroughWithJavaLangBoolean:strikeThrough ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)strikeThrough {
  id old = self.isStrikeThrough_;
  self.isStrikeThrough_ = strikeThrough;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_STRIKE_THROUGH_ withId:old withId:self.isStrikeThrough_];
}

- (void)setMarkupWithNSString:(NSString *)markup {
  id old = self.markup;
  self.markup = markup;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_MARKUP_ withId:old withId:self.markup];
}

- (void)setBlankWhenNullWithBOOL:(BOOL)isBlankWhenNull {
  [self setBlankWhenNullWithJavaLangBoolean:isBlankWhenNull ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setBlankWhenNullWithJavaLangBoolean:(JavaLangBoolean *)isBlankWhenNull {
  id old = self.isBlankWhenNull_;
  self.isBlankWhenNull_ = isBlankWhenNull;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_BLANK_WHEN_NULL_ withId:old withId:self.isBlankWhenNull_];
}

- (void)setUnderlineWithBOOL:(BOOL)underline {
  [self setUnderlineWithJavaLangBoolean:underline ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)underline {
  id old = self.isUnderline_;
  self.isUnderline_ = underline;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_UNDERLINE_ withId:old withId:self.isUnderline_];
}

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)lineSpacing {
  [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:lineSpacing];
}

- (void)setPatternWithNSString:(NSString *)pattern {
  id old = self.pattern;
  self.pattern = pattern;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PATTERN_ withId:old withId:self.pattern];
}

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding {
  id old = self.pdfEncoding;
  self.pdfEncoding = pdfEncoding;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_ENCODING_ withId:old withId:self.pdfEncoding];
}

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName {
  id old = self.pdfFontName;
  self.pdfFontName = pdfFontName;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_PDF_FONT_NAME_ withId:old withId:self.pdfFontName];
}

- (void)setFontSizeWithInt:(int)fontSize {
  [self setFontSizeWithJavaLangInteger:[JavaLangInteger valueOfWithInt:fontSize]];
}

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)fontSize {
  id old = self.fontSize;
  self.fontSize = fontSize;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FONT_SIZE_ withId:old withId:self.fontSize];
}

- (IOSObjectArray *)getConditionalStyles {
  return conditionalStyles_;
}

- (NSString *)getStyleNameReference {
  return parentStyleNameReference_;
}

- (JavaLangFloat *)getDefaultLineWidth {
  return nil;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized (self) {
    if (eventSupport_ == nil) {
      eventSupport_ = [[OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport alloc] initWithId:self];
    }
  }
  return eventSupport_;
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseStyle *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseStyle *) [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
  ((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(clone)).lineBox = lineBox_ == nil ? nil : [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(clone)).linePen = linePen_ == nil ? nil : [((id<OrgOssPdfreporterEngineJRPen>) nil_chk(linePen_)) cloneWithOrgOssPdfreporterEngineJRPenContainer:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(clone)).paragraph = paragraph_ == nil ? nil : [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph_)) cloneWithOrgOssPdfreporterEngineJRParagraphContainer:clone];
  ((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(clone)).conditionalStyles = [OrgOssPdfreporterEngineUtilJRCloneUtils cloneArrayWithOrgOssPdfreporterEngineJRCloneableArray:conditionalStyles_];
  ((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(clone)).eventSupport = nil;
  return clone;
}

- (int)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = [OrgOssPdfreporterEngineUtilObjectUtils hash__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdentityWithId:parentStyle_];
  [self addStyleHashWithOrgOssPdfreporterEngineUtilObjectUtils_HashCode:hash_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithNSObjectArray:conditionalStyles_];
  return [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) getHashCode];
}

- (void)addStyleHashWithOrgOssPdfreporterEngineUtilObjectUtils_HashCode:(OrgOssPdfreporterEngineUtilObjectUtils_HashCode *)hash_ {
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:name_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithBOOL:isDefault__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:modeValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:forecolor_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:backcolor_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:linePen_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:fillValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:radius_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:scaleImageValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:horizontalAlignmentValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:verticalAlignmentValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:lineBox_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:paragraph_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:fontName_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isBold__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isItalic__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isUnderline__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isStrikeThrough__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:fontSize_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pdfFontName_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pdfEncoding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isPdfEmbedded__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:rotationValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:markup_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pattern_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isBlankWhenNull__];
}

- (BOOL)isIdenticalWithId:(id)object {
  if (self == object) {
    return YES;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineBaseJRBaseStyle class]])) {
    return NO;
  }
  OrgOssPdfreporterEngineBaseJRBaseStyle *style = (OrgOssPdfreporterEngineBaseJRBaseStyle *) object;
  return [OrgOssPdfreporterEngineUtilObjectUtils equalsIdentityWithId:parentStyle_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).parentStyle] && [self identicalStyleWithOrgOssPdfreporterEngineBaseJRBaseStyle:style] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithNSObjectArray:conditionalStyles_ withNSObjectArray:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).conditionalStyles];
}

- (BOOL)identicalStyleWithOrgOssPdfreporterEngineBaseJRBaseStyle:(OrgOssPdfreporterEngineBaseJRBaseStyle *)style {
  return [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:name_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).name] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithBOOL:isDefault__ withBOOL:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isDefault_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:modeValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).modeValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:forecolor_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).forecolor] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:backcolor_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).backcolor] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:linePen_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).linePen] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:fillValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).fillValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:radius_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).radius] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:scaleImageValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).scaleImageValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:horizontalAlignmentValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).horizontalAlignmentValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:verticalAlignmentValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).verticalAlignmentValue] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:lineBox_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).lineBox] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:paragraph_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).paragraph] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:fontName_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).fontName] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isBold__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isBold_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isItalic__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isItalic_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isUnderline__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isUnderline_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isStrikeThrough__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isStrikeThrough_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:fontSize_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).fontSize] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pdfFontName_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).pdfFontName] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pdfEncoding_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).pdfEncoding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isPdfEmbedded__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isPdfEmbedded_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:rotationValue_ withJavaLangEnum:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).rotationValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:markup_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).markup] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pattern_ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).pattern] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isBlankWhenNull__ withId:((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)).isBlankWhenNull_];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseStyle *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseStyle *) copy;
  typedCopy.defaultStyleProvider = defaultStyleProvider_;
  typedCopy.parentStyle = parentStyle_;
  typedCopy.parentStyleNameReference = parentStyleNameReference_;
  typedCopy.name = name_;
  typedCopy.isDefault_ = isDefault__;
  typedCopy.positionType = positionType_;
  typedCopy.stretchType = stretchType_;
  typedCopy.modeValue = modeValue_;
  typedCopy.forecolor = forecolor_;
  typedCopy.backcolor = backcolor_;
  typedCopy.linePen = linePen_;
  typedCopy.fillValue = fillValue_;
  typedCopy.radius = radius_;
  typedCopy.scaleImageValue = scaleImageValue_;
  typedCopy.horizontalAlignmentValue = horizontalAlignmentValue_;
  typedCopy.verticalAlignmentValue = verticalAlignmentValue_;
  typedCopy.lineBox = lineBox_;
  typedCopy.paragraph = paragraph_;
  typedCopy.fontName = fontName_;
  typedCopy.isBold_ = isBold__;
  typedCopy.isItalic_ = isItalic__;
  typedCopy.isUnderline_ = isUnderline__;
  typedCopy.isStrikeThrough_ = isStrikeThrough__;
  typedCopy.fontSize = fontSize_;
  typedCopy.pdfFontName = pdfFontName_;
  typedCopy.pdfEncoding = pdfEncoding_;
  typedCopy.isPdfEmbedded_ = isPdfEmbedded__;
  typedCopy.rotationValue = rotationValue_;
  typedCopy.markup = markup_;
  typedCopy.pattern = pattern_;
  typedCopy.isBlankWhenNull_ = isBlankWhenNull__;
  typedCopy.conditionalStyles = conditionalStyles_;
  typedCopy.eventSupport = eventSupport_;
}

@end
@implementation OrgOssPdfreporterEngineBaseJRBaseStyle_$1

@synthesize this$0 = this$0_;

- (void)setStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)aStyle {
  [this$0_ setParentStyleWithOrgOssPdfreporterEngineJRStyle:aStyle];
}

- (void)setStyleNameReferenceWithNSString:(NSString *)name {
  this$0_.parentStyleNameReference = name;
}

- (id)initWithOrgOssPdfreporterEngineBaseJRBaseStyle:(OrgOssPdfreporterEngineBaseJRBaseStyle *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseStyle_$1 *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseStyle_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
