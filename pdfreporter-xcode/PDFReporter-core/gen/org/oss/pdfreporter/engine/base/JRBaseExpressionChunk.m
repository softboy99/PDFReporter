//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"

@implementation OrgOssPdfreporterEngineBaseJRBaseExpressionChunk

@synthesize type = type_;
@synthesize text = text_;

- (id)init {
  if ((self = [super init])) {
    type_ = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJRExpressionChunk:(id<OrgOssPdfreporterEngineJRExpressionChunk>)queryChunk
    withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super init])) {
    type_ = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
    [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:queryChunk withId:self];
    type_ = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(queryChunk)) getType];
    text_ = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(queryChunk)) getText];
  }
  return self;
}

- (char)getType {
  return self.type;
}

- (NSString *)getText {
  return self.text;
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *typedCopy = (OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *) copy;
  typedCopy.type = type_;
  typedCopy.text = text_;
}

@end
