//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/ParagraphUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/TabStop.h"
#include "org/oss/pdfreporter/engine/type/TabStopAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/ParagraphUtil.h"

@implementation OrgOssPdfreporterEngineUtilParagraphUtil

+ (IOSObjectArray *)getTabStopsWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                                                            withFloat:(float)endX {
  id<JavaUtilList> tabStopList = [[JavaUtilArrayList alloc] init];
  OrgOssPdfreporterEngineTabStop *lastTabStop = [[OrgOssPdfreporterEngineTabStop alloc] init];
  IOSObjectArray *tabStops = [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStops];
  if (tabStops != nil && (int) [((IOSObjectArray *) nil_chk(tabStops)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(tabStops)) count]; i++) {
      lastTabStop = [((IOSObjectArray *) nil_chk(tabStops)) objectAtIndex:i];
      if ([((OrgOssPdfreporterEngineTabStop *) nil_chk(lastTabStop)) getPosition] <= endX) {
        [((id<JavaUtilList>) nil_chk(tabStopList)) addWithId:lastTabStop];
      }
    }
  }
  while ([((OrgOssPdfreporterEngineTabStop *) nil_chk(lastTabStop)) getPosition] + [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStopWidth])) intValue] <= endX) {
    lastTabStop = [[OrgOssPdfreporterEngineTabStop alloc] initWithInt:([((OrgOssPdfreporterEngineTabStop *) nil_chk(lastTabStop)) getPosition] / [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStopWidth])) intValue] + 1) * [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStopWidth])) intValue] withOrgOssPdfreporterEngineTypeTabStopAlignEnumEnum:[OrgOssPdfreporterEngineTypeTabStopAlignEnumEnum LEFT]];
    [((id<JavaUtilList>) nil_chk(tabStopList)) addWithId:lastTabStop];
  }
  return [((id<JavaUtilList>) nil_chk(tabStopList)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(tabStopList)) size] type:[IOSClass classWithClass:[OrgOssPdfreporterEngineTabStop class]]]];
}

+ (float)getRightXWithOrgOssPdfreporterEngineTabStop:(OrgOssPdfreporterEngineTabStop *)tabStop
                                           withFloat:(float)advance {
  float rightX = advance;
  if (tabStop != nil) {
    switch ([[tabStop getAlignment] ordinal]) {
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_RIGHT:
      {
        rightX = [tabStop getPosition];
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_CENTER:
      {
        rightX = [tabStop getPosition] + advance / 2;
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_LEFT:
      default:
      {
        rightX = [tabStop getPosition] + advance;
      }
    }
  }
  return rightX;
}

+ (float)getLeftXWithOrgOssPdfreporterEngineTabStop:(OrgOssPdfreporterEngineTabStop *)tabStop
                                          withFloat:(float)advance {
  float leftX = 0;
  if (tabStop != nil) {
    switch ([[tabStop getAlignment] ordinal]) {
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_RIGHT:
      {
        leftX = [tabStop getPosition] - advance;
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_CENTER:
      {
        leftX = [tabStop getPosition] - advance / 2;
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_LEFT:
      default:
      {
        leftX = [tabStop getPosition];
      }
    }
  }
  return leftX;
}

+ (float)getSegmentOffsetWithOrgOssPdfreporterEngineTabStop:(OrgOssPdfreporterEngineTabStop *)tabStop
                                                  withFloat:(float)rightX {
  float segmentOffset = rightX;
  if (tabStop != nil) {
    switch ([[tabStop getAlignment] ordinal]) {
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_RIGHT:
      {
        segmentOffset = rightX;
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_CENTER:
      {
        segmentOffset = rightX;
        break;
      }
      case OrgOssPdfreporterEngineTypeTabStopAlignEnum_LEFT:
      default:
      {
        segmentOffset = [tabStop getPosition];
      }
    }
  }
  return segmentOffset;
}

+ (OrgOssPdfreporterEngineTabStop *)getNextTabStopWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                                                                               withFloat:(float)endX
                                                                               withFloat:(float)rightX {
  OrgOssPdfreporterEngineTabStop *nextTabStop = nil;
  IOSObjectArray *tabStops = [OrgOssPdfreporterEngineUtilParagraphUtil getTabStopsWithOrgOssPdfreporterEngineJRParagraph:paragraph withFloat:endX];
  int i = 0;
  for (; i < (int) [((IOSObjectArray *) nil_chk(tabStops)) count]; i++) {
    OrgOssPdfreporterEngineTabStop *tabStop = [((IOSObjectArray *) nil_chk(tabStops)) objectAtIndex:i];
    if ([((OrgOssPdfreporterEngineTabStop *) nil_chk(tabStop)) getPosition] > rightX) {
      nextTabStop = tabStop;
      break;
    }
  }
  if (i == (int) [((IOSObjectArray *) nil_chk(tabStops)) count]) {
    nextTabStop = [[OrgOssPdfreporterEngineTabStop alloc] init];
    [((OrgOssPdfreporterEngineTabStop *) nil_chk(nextTabStop)) setPositionWithInt:(int) ((rightX / [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStopWidth])) intValue] + 1) * [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getTabStopWidth])) intValue])];
  }
  return nextTabStop;
}

+ (OrgOssPdfreporterEngineTabStop *)getFirstTabStopWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                                                                                withFloat:(float)endX {
  OrgOssPdfreporterEngineTabStop *firstTabStop = [[OrgOssPdfreporterEngineTabStop alloc] init];
  IOSObjectArray *tabStops = [OrgOssPdfreporterEngineUtilParagraphUtil getTabStopsWithOrgOssPdfreporterEngineJRParagraph:paragraph withFloat:endX];
  firstTabStop = [((IOSObjectArray *) nil_chk(tabStops)) objectAtIndex:0];
  return firstTabStop;
}

+ (OrgOssPdfreporterEngineTabStop *)getLastTabStopWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                                                                               withFloat:(float)endX {
  OrgOssPdfreporterEngineTabStop *lastTabStop = [[OrgOssPdfreporterEngineTabStop alloc] init];
  IOSObjectArray *tabStops = [OrgOssPdfreporterEngineUtilParagraphUtil getTabStopsWithOrgOssPdfreporterEngineJRParagraph:paragraph withFloat:endX];
  int i = (int) [((IOSObjectArray *) nil_chk(tabStops)) count] - 1;
  for (; i >= 0; i--) {
    OrgOssPdfreporterEngineTabStop *tabStop = [((IOSObjectArray *) nil_chk(tabStops)) objectAtIndex:i];
    if ([((OrgOssPdfreporterEngineTabStop *) nil_chk(tabStop)) getPosition] < endX) {
      lastTabStop = tabStop;
      break;
    }
  }
  if (i < 0) {
    [((OrgOssPdfreporterEngineTabStop *) nil_chk(lastTabStop)) setPositionWithInt:(int) endX];
  }
  return lastTabStop;
}

- (id)init {
  return [super init];
}

@end
