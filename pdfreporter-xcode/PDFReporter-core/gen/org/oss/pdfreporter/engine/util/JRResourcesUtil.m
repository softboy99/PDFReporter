//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRResourcesUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "java/io/File.h"
#include "org/oss/pdfreporter/engine/util/FileResolver.h"
#include "org/oss/pdfreporter/engine/util/JRResourcesUtil.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/net/MalformedURLException.h"
#include "org/oss/pdfreporter/net/factory/INetFactory.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"

@implementation OrgOssPdfreporterEngineUtilJRResourcesUtil

+ (id<OrgOssPdfreporterNetIURL>)createURLWithNSString:(NSString *)spec {
  id<OrgOssPdfreporterNetIURL> url;
  @try {
    url = [((id<OrgOssPdfreporterNetFactoryINetFactory>) nil_chk([OrgOssPdfreporterRegistryIRegistry getINetFactory])) newURLWithNSString:spec];
  }
  @catch (OrgOssPdfreporterNetMalformedURLException *e) {
    url = nil;
  }
  return url;
}

+ (JavaIoFile *)resolveFileWithNSString:(NSString *)location
withOrgOssPdfreporterEngineUtilFileResolver:(id<OrgOssPdfreporterEngineUtilFileResolver>)fileRes {
  id<OrgOssPdfreporterEngineUtilFileResolver> fileResolver = fileRes;
  if (fileResolver != nil) {
    return [fileResolver resolveFileWithNSString:location];
  }
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:location];
  if ([((JavaIoFile *) nil_chk(file)) exists] && [((JavaIoFile *) nil_chk(file)) isFile]) {
    return file;
  }
  return nil;
}

- (id)init {
  return [super init];
}

@end
