//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRTextMeasurerUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRCommonText.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPrintText.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyledTextAttributeSelector.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fill/JRMeasuredText.h"
#include "org/oss/pdfreporter/engine/fill/JRTextMeasurer.h"
#include "org/oss/pdfreporter/engine/fill/JRTextMeasurerFactory.h"
#include "org/oss/pdfreporter/engine/util/JRSingletonCache.h"
#include "org/oss/pdfreporter/engine/util/JRStyledText.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextParser.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextUtil.h"
#include "org/oss/pdfreporter/engine/util/JRTextMeasurerFactory.h"
#include "org/oss/pdfreporter/engine/util/JRTextMeasurerUtil.h"

@implementation OrgOssPdfreporterEngineUtilJRTextMeasurerUtil

static NSString * OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_PROPERTY_TEXT_MEASURER_FACTORY_ = @"net.sf.jasperreports.text.measurer.factory";
static OrgOssPdfreporterEngineUtilJRSingletonCache * OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_cache_;

@synthesize jasperReportsContext = jasperReportsContext_;
@synthesize noBackcolorSelector = noBackcolorSelector_;
@synthesize styledTextUtil = styledTextUtil_;

+ (NSString *)PROPERTY_TEXT_MEASURER_FACTORY {
  return OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_PROPERTY_TEXT_MEASURER_FACTORY_;
}

+ (OrgOssPdfreporterEngineUtilJRSingletonCache *)cache {
  return OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_cache_;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
    self.noBackcolorSelector = [OrgOssPdfreporterEngineJRStyledTextAttributeSelector getNoBackcolorSelectorWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
    self.styledTextUtil = [OrgOssPdfreporterEngineUtilJRStyledTextUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
  }
  return self;
}

+ (OrgOssPdfreporterEngineUtilJRTextMeasurerUtil *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterEngineUtilJRTextMeasurerUtil alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<OrgOssPdfreporterEngineFillJRTextMeasurer>)createTextMeasurerWithOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)text {
  id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder = [(id) text conformsToProtocol: @protocol(OrgOssPdfreporterEngineJRPropertiesHolder)] ? (id<OrgOssPdfreporterEngineJRPropertiesHolder>) text : nil;
  return [self createTextMeasurerWithOrgOssPdfreporterEngineJRCommonText:text withOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder];
}

- (id<OrgOssPdfreporterEngineFillJRTextMeasurer>)createTextMeasurerWithOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)text
                                                             withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  id<OrgOssPdfreporterEngineUtilJRTextMeasurerFactory> factory = [self getFactoryWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder];
  return [((id<OrgOssPdfreporterEngineUtilJRTextMeasurerFactory>) nil_chk(factory)) createMeasurerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_ withOrgOssPdfreporterEngineJRCommonText:text];
}

- (id<OrgOssPdfreporterEngineFillJRTextMeasurerFactory>)getTextMeasurerFactoryWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  return [self getFactoryWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder];
}

- (id<OrgOssPdfreporterEngineUtilJRTextMeasurerFactory>)getFactoryWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  NSString *factoryClass = [self getTextMeasurerFactoryClassWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder];
  @try {
    id<OrgOssPdfreporterEngineFillJRTextMeasurerFactory> factory = [((OrgOssPdfreporterEngineUtilJRSingletonCache *) nil_chk(OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_cache_)) getCachedInstanceWithNSString:factoryClass];
    if ([(id) factory conformsToProtocol: @protocol(OrgOssPdfreporterEngineUtilJRTextMeasurerFactory)]) {
      return (id<OrgOssPdfreporterEngineUtilJRTextMeasurerFactory>) factory;
    }
    return [[OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_WrappingTextMeasurerFactory alloc] initWithOrgOssPdfreporterEngineFillJRTextMeasurerFactory:factory];
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (NSString *)getTextMeasurerFactoryClassWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  NSString *factory = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([OrgOssPdfreporterEngineJRPropertiesUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_])) getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_PROPERTY_TEXT_MEASURER_FACTORY_];
  NSString *factoryClassProperty = [NSString stringWithFormat:@"net.sf.jasperreports.text.measurer.factory.%@", factory];
  NSString *factoryClass = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([OrgOssPdfreporterEngineJRPropertiesUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_])) getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:factoryClassProperty];
  if (factoryClass == nil) {
    factoryClass = factory;
  }
  return factoryClass;
}

- (void)measureTextElementWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText {
  NSString *text = [((OrgOssPdfreporterEngineUtilJRStyledTextUtil *) nil_chk(styledTextUtil_)) getTruncatedTextWithOrgOssPdfreporterEngineJRPrintText:printText];
  id<OrgOssPdfreporterEngineFillJRTextMeasurer> textMeasurer = [self createTextMeasurerWithOrgOssPdfreporterEngineJRCommonText:printText];
  if (text == nil) {
    text = @"";
  }
  OrgOssPdfreporterEngineUtilJRStyledText *styledText = [((OrgOssPdfreporterEngineUtilJRStyledTextParser *) nil_chk([OrgOssPdfreporterEngineUtilJRStyledTextParser getInstance])) getStyledTextWithJavaUtilMap:[((OrgOssPdfreporterEngineJRStyledTextAttributeSelector *) nil_chk(noBackcolorSelector_)) getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:printText] withNSString:text withBOOL:[((NSString *) nil_chk([OrgOssPdfreporterEngineJRCommonText MARKUP_STYLED_TEXT])) isEqual:[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getMarkup]] withJavaUtilLocale:[OrgOssPdfreporterEngineJRStyledTextAttributeSelector getTextLocaleWithOrgOssPdfreporterEngineJRPrintText:printText]];
  id<OrgOssPdfreporterEngineFillJRMeasuredText> measuredText = [((id<OrgOssPdfreporterEngineFillJRTextMeasurer>) nil_chk(textMeasurer)) measureWithOrgOssPdfreporterEngineUtilJRStyledText:styledText withInt:0 withInt:0 withBOOL:NO];
  [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) setTextHeightWithFloat:[((id<OrgOssPdfreporterEngineFillJRMeasuredText>) nil_chk(measuredText)) getTextHeight] < [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getHeight] ? [((id<OrgOssPdfreporterEngineFillJRMeasuredText>) nil_chk(measuredText)) getTextHeight] : [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getHeight]];
  [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) setLeadingOffsetWithFloat:[((id<OrgOssPdfreporterEngineFillJRMeasuredText>) nil_chk(measuredText)) getLeadingOffset]];
  [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) setLineSpacingFactorWithFloat:[((id<OrgOssPdfreporterEngineFillJRMeasuredText>) nil_chk(measuredText)) getLineSpacingFactor]];
  int textEnd = [((id<OrgOssPdfreporterEngineFillJRMeasuredText>) nil_chk(measuredText)) getTextOffset];
  NSString *printedText;
  if ([((NSString *) nil_chk([OrgOssPdfreporterEngineJRCommonText MARKUP_STYLED_TEXT])) isEqual:[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) getMarkup]]) {
    printedText = [((OrgOssPdfreporterEngineUtilJRStyledTextParser *) nil_chk([OrgOssPdfreporterEngineUtilJRStyledTextParser getInstance])) writeWithOrgOssPdfreporterEngineUtilJRStyledText:styledText withInt:0 withInt:textEnd];
  }
  else {
    printedText = [((NSString *) nil_chk(text)) substring:0 endIndex:textEnd];
  }
  [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(printText)) setTextWithNSString:printedText];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilJRTextMeasurerUtil class]) {
    OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_cache_ = [[OrgOssPdfreporterEngineUtilJRSingletonCache alloc] initWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineFillJRTextMeasurerFactory)]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilJRTextMeasurerUtil *typedCopy = (OrgOssPdfreporterEngineUtilJRTextMeasurerUtil *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
  typedCopy.noBackcolorSelector = noBackcolorSelector_;
  typedCopy.styledTextUtil = styledTextUtil_;
}

@end
@implementation OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_WrappingTextMeasurerFactory

@synthesize factory = factory_;

- (id)initWithOrgOssPdfreporterEngineFillJRTextMeasurerFactory:(id<OrgOssPdfreporterEngineFillJRTextMeasurerFactory>)factory {
  if ((self = [super init])) {
    self.factory = factory;
  }
  return self;
}

- (id<OrgOssPdfreporterEngineFillJRTextMeasurer>)createMeasurerWithOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)text {
  return [((id<OrgOssPdfreporterEngineFillJRTextMeasurerFactory>) nil_chk(factory_)) createMeasurerWithOrgOssPdfreporterEngineJRCommonText:text];
}

- (id<OrgOssPdfreporterEngineFillJRTextMeasurer>)createMeasurerWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                       withOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)text {
  return [((id<OrgOssPdfreporterEngineFillJRTextMeasurerFactory>) nil_chk(factory_)) createMeasurerWithOrgOssPdfreporterEngineJRCommonText:text];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_WrappingTextMeasurerFactory *typedCopy = (OrgOssPdfreporterEngineUtilJRTextMeasurerUtil_WrappingTextMeasurerFactory *) copy;
  typedCopy.factory = factory_;
}

@end
