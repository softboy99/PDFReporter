//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/LocalJasperReportsContext.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/ClassLoader.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/util/AbstrLocalJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/util/FileResolver.h"
#include "org/oss/pdfreporter/engine/util/LocalJasperReportsContext.h"
#include "org/oss/pdfreporter/repo/DefaultRepositoryService.h"

@implementation OrgOssPdfreporterEngineUtilLocalJasperReportsContext

@synthesize delegate = delegate_;
@synthesize localRepositoryService = localRepositoryService_;

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)parent {
  if ((self = [super init])) {
    delegate_ = [[OrgOssPdfreporterEngineUtilAbstrLocalJasperReportsContext alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:parent];
  }
  return self;
}

+ (id<OrgOssPdfreporterEngineJasperReportsContext>)getLocalContextWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                                                  withJavaUtilMap:(id<JavaUtilMap>)parameterValues {
  if ([((id<JavaUtilMap>) nil_chk(parameterValues)) containsKeyWithId:[OrgOssPdfreporterEngineJRParameter REPORT_CLASS_LOADER]] || [((id<JavaUtilMap>) nil_chk(parameterValues)) containsKeyWithId:[OrgOssPdfreporterEngineJRParameter REPORT_FILE_RESOLVER]]) {
    OrgOssPdfreporterEngineUtilLocalJasperReportsContext *localJasperReportsContext = [[OrgOssPdfreporterEngineUtilLocalJasperReportsContext alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
    if ([((id<JavaUtilMap>) nil_chk(parameterValues)) containsKeyWithId:[OrgOssPdfreporterEngineJRParameter REPORT_CLASS_LOADER]]) {
      [((OrgOssPdfreporterEngineUtilLocalJasperReportsContext *) nil_chk(localJasperReportsContext)) setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *) [((id<JavaUtilMap>) nil_chk(parameterValues)) getWithId:[OrgOssPdfreporterEngineJRParameter REPORT_CLASS_LOADER]]];
    }
    if ([((id<JavaUtilMap>) nil_chk(parameterValues)) containsKeyWithId:[OrgOssPdfreporterEngineJRParameter REPORT_FILE_RESOLVER]]) {
      [((OrgOssPdfreporterEngineUtilLocalJasperReportsContext *) nil_chk(localJasperReportsContext)) setFileResolverWithOrgOssPdfreporterEngineUtilFileResolver:(id<OrgOssPdfreporterEngineUtilFileResolver>) [((id<JavaUtilMap>) nil_chk(parameterValues)) getWithId:[OrgOssPdfreporterEngineJRParameter REPORT_FILE_RESOLVER]]];
    }
    return localJasperReportsContext;
  }
  return jasperReportsContext;
}

- (OrgOssPdfreporterRepoDefaultRepositoryService *)getLocalRepositoryService {
  if (localRepositoryService_ == nil) {
    localRepositoryService_ = [[OrgOssPdfreporterRepoDefaultRepositoryService alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:self];
  }
  return localRepositoryService_;
}

- (void)setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  [((OrgOssPdfreporterRepoDefaultRepositoryService *) nil_chk([self getLocalRepositoryService])) setClassLoaderWithJavaLangClassLoader:classLoader];
}

- (id<OrgOssPdfreporterEngineUtilFileResolver>)getFileResolver {
  return localRepositoryService_ == nil ? nil : [((OrgOssPdfreporterRepoDefaultRepositoryService *) nil_chk(localRepositoryService_)) getFileResolver];
}

- (void)setFileResolverWithOrgOssPdfreporterEngineUtilFileResolver:(id<OrgOssPdfreporterEngineUtilFileResolver>)fileResolver {
  [((OrgOssPdfreporterRepoDefaultRepositoryService *) nil_chk([self getLocalRepositoryService])) setFileResolverWithOrgOssPdfreporterEngineUtilFileResolver:fileResolver];
}

- (id<JavaUtilList>)getExtensionsWithIOSClass:(IOSClass *)extensionType {
  return [((OrgOssPdfreporterEngineUtilAbstrLocalJasperReportsContext *) nil_chk(delegate_)) getExtensionsWithIOSClass:extensionType];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilLocalJasperReportsContext *typedCopy = (OrgOssPdfreporterEngineUtilLocalJasperReportsContext *) copy;
  typedCopy.delegate = delegate_;
  typedCopy.localRepositoryService = localRepositoryService_;
}

@end
