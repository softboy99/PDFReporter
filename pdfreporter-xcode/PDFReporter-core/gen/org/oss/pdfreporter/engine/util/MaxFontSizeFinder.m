//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/MaxFontSizeFinder.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/util/MaxFontSizeFinder.h"
#include "org/oss/pdfreporter/font/text/TextAttribute.h"
#include "org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.h"

@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder

static OrgOssPdfreporterEngineUtilMaxFontSizeFinder * OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER_;
static OrgOssPdfreporterEngineUtilMaxFontSizeFinder * OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER_;

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)STYLED_TEXT_MAX_FONT_FINDER {
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER_;
}

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)DEFAULT_MAX_FONT_FINDER {
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER_;
}

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)getInstanceWithBOOL:(BOOL)isStyledText {
  if (isStyledText) {
    return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER_;
  }
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER_;
}

- (int)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                               withInt:(int)defaultFontSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilMaxFontSizeFinder class]) {
    OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER_ = [[OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 alloc] init];
    OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER_ = [[OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 alloc] init];
  }
}

@end
@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1

@synthesize ZERO = ZERO_;

- (int)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                               withInt:(int)defaultFontSize {
  [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) setIndexWithInt:0];
  JavaLangFloat *maxFontSize = ZERO_;
  int runLimit = 0;
  while (runLimit < [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) getEndIndex] && (runLimit = [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) getRunLimitWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:[OrgOssPdfreporterFontTextTextAttribute SIZE]]) <= [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) getEndIndex]) {
    JavaLangFloat *size = (JavaLangFloat *) [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) getAttributeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:[OrgOssPdfreporterFontTextTextAttribute SIZE]];
    if ([((JavaLangFloat *) nil_chk(maxFontSize)) compareToWithId:size] < 0) {
      maxFontSize = size;
    }
    [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) setIndexWithInt:runLimit];
  }
  return [((JavaLangFloat *) nil_chk(maxFontSize)) intValue];
}

- (id)init {
  if ((self = [super init])) {
    ZERO_ = [[JavaLangFloat alloc] initWithFloat:0];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *typedCopy = (OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *) copy;
  typedCopy.ZERO = ZERO_;
}

@end
@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2

- (int)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                               withInt:(int)defaultFontSize {
  return defaultFontSize;
}

- (id)init {
  return [super init];
}

@end
