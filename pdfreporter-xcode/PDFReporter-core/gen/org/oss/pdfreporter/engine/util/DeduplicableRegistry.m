//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/DeduplicableRegistry.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/Deduplicable.h"
#include "org/oss/pdfreporter/engine/util/DeduplicableRegistry.h"

@implementation OrgOssPdfreporterEngineUtilDeduplicableRegistry

@synthesize typesMap = typesMap_;

- (id)deduplicateWithId:(id<OrgOssPdfreporterEngineDeduplicable>)object {
  OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *typeMap = [self typeMapWithId:object];
  return [((OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *) nil_chk(typeMap)) deduplicateWithId:object];
}

- (OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *)typeMapWithId:(id<OrgOssPdfreporterEngineDeduplicable>)object {
  OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *typeMap = (OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *) [((id<JavaUtilMap>) nil_chk(typesMap_)) getWithId:[((id<OrgOssPdfreporterEngineDeduplicable>) nil_chk(object)) getClass]];
  if (typeMap == nil) {
    typeMap = [[OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap alloc] init];
    (void) [((id<JavaUtilMap>) nil_chk(typesMap_)) putWithId:[((id<OrgOssPdfreporterEngineDeduplicable>) nil_chk(object)) getClass] withId:typeMap];
  }
  return typeMap;
}

- (id)init {
  if ((self = [super init])) {
    typesMap_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilDeduplicableRegistry *typedCopy = (OrgOssPdfreporterEngineUtilDeduplicableRegistry *) copy;
  typedCopy.typesMap = typesMap_;
}

@end
@implementation OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper

@synthesize object = object_;
@synthesize hash_ = hash__;

- (id)initWithId:(id<OrgOssPdfreporterEngineDeduplicable>)object {
  if ((self = [super init])) {
    self.object = object;
    self.hash_ = [((id<OrgOssPdfreporterEngineDeduplicable>) nil_chk(object)) getHashCode];
  }
  return self;
}

- (NSUInteger)hash {
  return hash__;
}

- (BOOL)isEqual:(id)other {
  return [((id<OrgOssPdfreporterEngineDeduplicable>) nil_chk(object_)) isIdenticalWithId:((OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper *) other).object];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper *typedCopy = (OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper *) copy;
  typedCopy.object = object_;
  typedCopy.hash_ = hash__;
}

@end
@implementation OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap

@synthesize objects = objects_;

- (id)deduplicateWithId:(id<OrgOssPdfreporterEngineDeduplicable>)object {
  OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper *key = [[OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableWrapper alloc] initWithId:object];
  id<OrgOssPdfreporterEngineDeduplicable> existing = [((id<JavaUtilMap>) nil_chk(objects_)) getWithId:key];
  if (existing == nil) {
    (void) [((id<JavaUtilMap>) nil_chk(objects_)) putWithId:key withId:object];
    existing = object;
  }
  return existing;
}

- (id)init {
  if ((self = [super init])) {
    objects_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *typedCopy = (OrgOssPdfreporterEngineUtilDeduplicableRegistry_DeduplicableMap *) copy;
  typedCopy.objects = objects_;
}

@end
