//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/xml/JRXPathExecuterUtils.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/util/JRSingletonCache.h"
#include "org/oss/pdfreporter/engine/util/xml/JRXPathExecuter.h"
#include "org/oss/pdfreporter/engine/util/xml/JRXPathExecuterFactory.h"
#include "org/oss/pdfreporter/engine/util/xml/JRXPathExecuterUtils.h"

@implementation OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils

static NSString * OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_PROPERTY_XPATH_EXECUTER_FACTORY_ = @"net.sf.jasperreports.xpath.executer.factory";
static OrgOssPdfreporterEngineUtilJRSingletonCache * OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_cache_;

+ (NSString *)PROPERTY_XPATH_EXECUTER_FACTORY {
  return OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_PROPERTY_XPATH_EXECUTER_FACTORY_;
}

+ (OrgOssPdfreporterEngineUtilJRSingletonCache *)cache {
  return OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_cache_;
}

+ (id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuterFactory>)getXPathExecuterFactoryWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  NSString *factoryClassName = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([OrgOssPdfreporterEngineJRPropertiesUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext])) getPropertyWithNSString:OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_PROPERTY_XPATH_EXECUTER_FACTORY_];
  if (factoryClassName == nil) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:[NSString stringWithFormat:@"%@net.sf.jasperreports.xpath.executer.factory.", @"XPath executer factory property not found. Create a propery named "]];
  }
  return [((OrgOssPdfreporterEngineUtilJRSingletonCache *) nil_chk(OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_cache_)) getCachedInstanceWithNSString:factoryClassName];
}

+ (id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuterFactory>)getXPathExecuterFactory {
  return [OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils getXPathExecuterFactoryWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
}

+ (id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuter>)getXPathExecuterWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuterFactory> executerFactory = [OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils getXPathExecuterFactoryWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
  return [((id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuterFactory>) nil_chk(executerFactory)) getXPathExecuter];
}

+ (id<OrgOssPdfreporterEngineUtilXmlJRXPathExecuter>)getXPathExecuter {
  return [OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils getXPathExecuterWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils class]) {
    OrgOssPdfreporterEngineUtilXmlJRXPathExecuterUtils_cache_ = [[OrgOssPdfreporterEngineUtilJRSingletonCache alloc] initWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineUtilXmlJRXPathExecuterFactory)]];
  }
}

@end
