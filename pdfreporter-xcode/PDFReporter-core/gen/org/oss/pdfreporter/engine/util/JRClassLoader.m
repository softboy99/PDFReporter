//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRClassLoader.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/StringBuffer.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"

@implementation OrgOssPdfreporterEngineUtilJRClassLoader

- (id)init {
  return [super init];
}

+ (IOSClass *)loadClassForNameWithNSString:(NSString *)className_ {
  IOSClass *clazz = nil;
  NSString *classRealName = className_;
  JavaLangClassNotFoundException *initialEx = nil;
  @try {
    clazz = [OrgOssPdfreporterEngineUtilJRClassLoader loadClassForRealNameWithNSString:classRealName];
  }
  @catch (JavaLangClassNotFoundException *e) {
    initialEx = e;
  }
  int lastDotIndex = 0;
  while (clazz == nil && (lastDotIndex = [((NSString *) nil_chk(classRealName)) lastIndexOf:'.']) > 0) {
    classRealName = [NSString stringWithFormat:@"%@$%@", [((NSString *) nil_chk(classRealName)) substring:0 endIndex:lastDotIndex], [((NSString *) nil_chk(classRealName)) substring:lastDotIndex + 1]];
    @try {
      clazz = [OrgOssPdfreporterEngineUtilJRClassLoader loadClassForRealNameWithNSString:classRealName];
    }
    @catch (JavaLangClassNotFoundException *e) {
    }
  }
  if (clazz == nil) {
    @throw initialEx;
  }
  return clazz;
}

+ (IOSClass *)loadClassForRealNameWithNSString:(NSString *)className_ {
  IOSClass *clazz = [IOSClass forName:className_];
  if (clazz == nil) {
    @throw [[JavaLangClassNotFoundException alloc] initWithNSString:className_];
  }
  return clazz;
}

+ (NSString *)getClassRealNameWithNSString:(NSString *)className_ {
  if (className_ == nil) {
    return nil;
  }
  int arrayDimension = 0;
  int classNameEnd = [((NSString *) nil_chk(className_)) length];
  int index = 0;
  int pos = 0;
  while (index < classNameEnd && (pos = [((NSString *) nil_chk(className_)) indexOf:'[' fromIndex:index]) >= 0) {
    if (index == 0) {
      classNameEnd = pos;
    }
    index = pos;
    arrayDimension++;
  }
  if (arrayDimension > 0) {
    JavaLangStringBuffer *sbuffer = [[JavaLangStringBuffer alloc] init];
    for (int i = 0; i < arrayDimension; i++) {
      (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithUnichar:'['];
    }
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithUnichar:'L'];
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:[((NSString *) nil_chk(className_)) substring:0 endIndex:classNameEnd]];
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithUnichar:';'];
    return [((JavaLangStringBuffer *) nil_chk(sbuffer)) description];
  }
  return className_;
}

@end
