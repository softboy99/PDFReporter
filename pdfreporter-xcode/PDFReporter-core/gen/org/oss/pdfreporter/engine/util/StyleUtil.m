//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/StyleUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRBoxContainer.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRStyleContainer.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/StyleUtil.h"

@implementation OrgOssPdfreporterEngineUtilStyleUtil

static OrgOssPdfreporterEngineUtilStyleUtil * OrgOssPdfreporterEngineUtilStyleUtil_INSTANCE_;
static id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector> OrgOssPdfreporterEngineUtilStyleUtil_RIGHT_SIDE_;
static id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector> OrgOssPdfreporterEngineUtilStyleUtil_TOP_SIDE_;
static id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector> OrgOssPdfreporterEngineUtilStyleUtil_LEFT_SIDE_;
static id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector> OrgOssPdfreporterEngineUtilStyleUtil_BOTTOM_SIDE_;

+ (OrgOssPdfreporterEngineUtilStyleUtil *)INSTANCE {
  return OrgOssPdfreporterEngineUtilStyleUtil_INSTANCE_;
}

+ (id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)RIGHT_SIDE {
  return OrgOssPdfreporterEngineUtilStyleUtil_RIGHT_SIDE_;
}

+ (id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)TOP_SIDE {
  return OrgOssPdfreporterEngineUtilStyleUtil_TOP_SIDE_;
}

+ (id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)LEFT_SIDE {
  return OrgOssPdfreporterEngineUtilStyleUtil_LEFT_SIDE_;
}

+ (id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)BOTTOM_SIDE {
  return OrgOssPdfreporterEngineUtilStyleUtil_BOTTOM_SIDE_;
}

+ (OrgOssPdfreporterEngineUtilStyleUtil *)instance {
  return OrgOssPdfreporterEngineUtilStyleUtil_INSTANCE_;
}

- (id)init {
  return [super init];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)resolveModeWithOrgOssPdfreporterEngineJRStyleContainer:(id<OrgOssPdfreporterEngineJRStyleContainer>)styleContainer {
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyle];
  if (style != nil) {
    OrgOssPdfreporterEngineTypeModeEnumEnum *styleMode = [style getOwnModeValue];
    if (styleMode != nil) {
      IOSObjectArray *conditionalStyles = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getConditionalStyles];
      if (conditionalStyles != nil) {
        {
          IOSObjectArray *a__ = conditionalStyles;
          int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
          for (int i__ = 0; i__ < n__; i__++) {
            id<OrgOssPdfreporterEngineJRConditionalStyle> conditionalStyle = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
            OrgOssPdfreporterEngineTypeModeEnumEnum *conditionalMode = [((id<OrgOssPdfreporterEngineJRConditionalStyle>) nil_chk(conditionalStyle)) getOwnModeValue];
            if (conditionalMode != nil && conditionalMode != styleMode) {
              return nil;
            }
          }
        }
      }
      return styleMode;
    }
    return [self resolveModeWithOrgOssPdfreporterEngineJRStyleContainer:style];
  }
  if ([((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyleNameReference] != nil) {
    return nil;
  }
  return [OrgOssPdfreporterEngineTypeModeEnumEnum TRANSPARENT];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)resolveElementModeWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  OrgOssPdfreporterEngineTypeModeEnumEnum *elementMode = [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element)) getOwnModeValue];
  if (elementMode != nil) {
    return elementMode;
  }
  return [self resolveModeWithOrgOssPdfreporterEngineJRStyleContainer:element];
}

- (BOOL)hasBoxWithOrgOssPdfreporterEngineJRBoxContainer:(id<OrgOssPdfreporterEngineJRBoxContainer>)boxContainer {
  return [self hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_RIGHT_SIDE_] || [self hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_TOP_SIDE_] || [self hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_LEFT_SIDE_] || [self hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_BOTTOM_SIDE_] || [self hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_RIGHT_SIDE_] || [self hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_TOP_SIDE_] || [self hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_LEFT_SIDE_] || [self hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:boxContainer withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:OrgOssPdfreporterEngineUtilStyleUtil_BOTTOM_SIDE_];
}

- (BOOL)hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:(id<OrgOssPdfreporterEngineJRBoxContainer>)boxContainer
  withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:(id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)selector {
  id<OrgOssPdfreporterEngineJRLineBox> lineBox = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getLineBox];
  JavaLangFloat *rightLineWidth = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>) nil_chk(selector)) getPenWithOrgOssPdfreporterEngineJRLineBox:lineBox])) getOwnLineWidth];
  if (rightLineWidth != nil) {
    return [rightLineWidth floatValue] > .0f;
  }
  JavaLangFloat *lineWidth = [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getPen])) getOwnLineWidth];
  if (lineWidth != nil) {
    return [lineWidth floatValue] > .0f;
  }
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getStyle];
  if (style != nil) {
    return [self hasBorderWithOrgOssPdfreporterEngineJRBoxContainer:style withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:selector];
  }
  NSString *styleReference = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getStyleNameReference];
  if (styleReference != nil) {
    return YES;
  }
  return NO;
}

- (BOOL)hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:(id<OrgOssPdfreporterEngineJRBoxContainer>)boxContainer
   withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:(id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>)penSelector {
  id<OrgOssPdfreporterEngineJRLineBox> lineBox = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getLineBox];
  JavaLangInteger *sidePadding = [((id<OrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector>) nil_chk(penSelector)) getPaddingWithOrgOssPdfreporterEngineJRLineBox:lineBox];
  if (sidePadding != nil) {
    return [sidePadding intValue] > 0;
  }
  JavaLangInteger *padding = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getOwnPadding];
  if (padding != nil) {
    return [padding intValue] > 0;
  }
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getStyle];
  if (style != nil) {
    return [self hasPaddingWithOrgOssPdfreporterEngineJRBoxContainer:style withOrgOssPdfreporterEngineUtilStyleUtil_BoxSideSelector:penSelector];
  }
  NSString *styleReference = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getStyleNameReference];
  if (styleReference != nil) {
    return YES;
  }
  return NO;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilStyleUtil class]) {
    OrgOssPdfreporterEngineUtilStyleUtil_INSTANCE_ = [[OrgOssPdfreporterEngineUtilStyleUtil alloc] init];
    OrgOssPdfreporterEngineUtilStyleUtil_RIGHT_SIDE_ = [[OrgOssPdfreporterEngineUtilStyleUtil_$1 alloc] init];
    OrgOssPdfreporterEngineUtilStyleUtil_TOP_SIDE_ = [[OrgOssPdfreporterEngineUtilStyleUtil_$2 alloc] init];
    OrgOssPdfreporterEngineUtilStyleUtil_LEFT_SIDE_ = [[OrgOssPdfreporterEngineUtilStyleUtil_$3 alloc] init];
    OrgOssPdfreporterEngineUtilStyleUtil_BOTTOM_SIDE_ = [[OrgOssPdfreporterEngineUtilStyleUtil_$4 alloc] init];
  }
}

@end
@implementation OrgOssPdfreporterEngineUtilStyleUtil_$1

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getPenWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getRightPen];
}

- (JavaLangInteger *)getPaddingWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getOwnRightPadding];
}

- (id)init {
  return [super init];
}

@end
@implementation OrgOssPdfreporterEngineUtilStyleUtil_$2

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getPenWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getTopPen];
}

- (JavaLangInteger *)getPaddingWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getOwnTopPadding];
}

- (id)init {
  return [super init];
}

@end
@implementation OrgOssPdfreporterEngineUtilStyleUtil_$3

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getPenWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getLeftPen];
}

- (JavaLangInteger *)getPaddingWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getOwnLeftPadding];
}

- (id)init {
  return [super init];
}

@end
@implementation OrgOssPdfreporterEngineUtilStyleUtil_$4

- (id<OrgOssPdfreporterEngineBaseJRBoxPen>)getPenWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getBottomPen];
}

- (JavaLangInteger *)getPaddingWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)lineBox {
  return [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getOwnBottomPadding];
}

- (id)init {
  return [super init];
}

@end
