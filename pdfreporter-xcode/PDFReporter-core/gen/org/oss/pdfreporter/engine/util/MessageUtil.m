//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/util/MessageUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/util/LocalizedMessageProvider.h"
#include "org/oss/pdfreporter/engine/util/MessageProvider.h"
#include "org/oss/pdfreporter/engine/util/MessageProviderFactory.h"
#include "org/oss/pdfreporter/engine/util/MessageUtil.h"

@implementation OrgOssPdfreporterEngineUtilMessageUtil

@synthesize jasperReportsContext = jasperReportsContext_;

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
  }
  return self;
}

+ (OrgOssPdfreporterEngineUtilMessageUtil *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterEngineUtilMessageUtil alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<OrgOssPdfreporterEngineUtilMessageProvider>)getMessageProviderWithNSString:(NSString *)name {
  id<JavaUtilList> factories = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getExtensionsWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterEngineUtilMessageProviderFactory)]];
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(factories)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineUtilMessageProviderFactory> factory = [((id<JavaUtilIterator>) nil_chk(it)) next];
    id<OrgOssPdfreporterEngineUtilMessageProvider> provider = [((id<OrgOssPdfreporterEngineUtilMessageProviderFactory>) nil_chk(factory)) getMessageProviderWithNSString:name];
    if (provider != nil) {
      return provider;
    }
  }
  @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Message provider '%@' not found.", name]];
}

- (OrgOssPdfreporterEngineUtilLocalizedMessageProvider *)getLocalizedMessageProviderWithNSString:(NSString *)name
                                                                              withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [[OrgOssPdfreporterEngineUtilLocalizedMessageProvider alloc] initWithOrgOssPdfreporterEngineUtilMessageProvider:[self getMessageProviderWithNSString:name] withJavaUtilLocale:locale];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineUtilMessageUtil *typedCopy = (OrgOssPdfreporterEngineUtilMessageUtil *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
}

@end
