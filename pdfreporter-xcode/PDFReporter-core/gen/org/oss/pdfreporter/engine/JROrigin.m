//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/JROrigin.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/type/BandTypeEnum.h"

@implementation OrgOssPdfreporterEngineJROrigin

@synthesize bandTypeValue = bandTypeValue_;
@synthesize groupName = groupName_;
@synthesize reportName = reportName_;
@synthesize hashCode_ = hashCode__;

- (id)initWithOrgOssPdfreporterEngineTypeBandTypeEnumEnum:(OrgOssPdfreporterEngineTypeBandTypeEnumEnum *)bandType {
  return [self initOrgOssPdfreporterEngineJROriginWithNSString:nil withNSString:nil withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:bandType];
}

- (id)initWithNSString:(NSString *)reportName
withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:(OrgOssPdfreporterEngineTypeBandTypeEnumEnum *)bandType {
  return [self initOrgOssPdfreporterEngineJROriginWithNSString:reportName withNSString:nil withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:bandType];
}

- (id)initOrgOssPdfreporterEngineJROriginWithNSString:(NSString *)reportName
                                         withNSString:(NSString *)groupName
      withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:(OrgOssPdfreporterEngineTypeBandTypeEnumEnum *)bandTypeValue {
  if ((self = [super init])) {
    bandTypeValue_ = [OrgOssPdfreporterEngineTypeBandTypeEnumEnum UNKNOWN];
    self.reportName = reportName;
    self.groupName = groupName;
    self.bandTypeValue = bandTypeValue;
  }
  return self;
}

- (id)initWithNSString:(NSString *)reportName
          withNSString:(NSString *)groupName
withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:(OrgOssPdfreporterEngineTypeBandTypeEnumEnum *)bandTypeValue {
  return [self initOrgOssPdfreporterEngineJROriginWithNSString:reportName withNSString:groupName withOrgOssPdfreporterEngineTypeBandTypeEnumEnum:bandTypeValue];
}

- (NSString *)getReportName {
  return reportName_;
}

- (NSString *)getGroupName {
  return groupName_;
}

- (OrgOssPdfreporterEngineTypeBandTypeEnumEnum *)getBandTypeValue {
  return bandTypeValue_;
}

- (BOOL)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgOssPdfreporterEngineJROrigin class]]) {
    OrgOssPdfreporterEngineJROrigin *origin = (OrgOssPdfreporterEngineJROrigin *) obj;
    NSString *groupName2 = [((OrgOssPdfreporterEngineJROrigin *) nil_chk(origin)) getGroupName];
    NSString *reportName2 = [((OrgOssPdfreporterEngineJROrigin *) nil_chk(origin)) getReportName];
    return [((OrgOssPdfreporterEngineJROrigin *) nil_chk(origin)) getBandTypeValue] == bandTypeValue_ && (groupName_ == nil ? groupName2 == nil : groupName2 != nil && [((NSString *) nil_chk(groupName_)) isEqual:groupName2]) && (reportName_ == nil ? reportName2 == nil : reportName2 != nil && [((NSString *) nil_chk(reportName_)) isEqual:reportName2]);
  }
  return NO;
}

- (NSUInteger)hash {
  if (hashCode__ == nil) {
    int hash_ = 17;
    hash_ = 31 * hash_ + (reportName_ == nil ? 0 : [((NSString *) nil_chk(reportName_)) hash]);
    hash_ = 31 * hash_ + (groupName_ == nil ? 0 : [((NSString *) nil_chk(groupName_)) hash]);
    hash_ = 31 * hash_ + [((OrgOssPdfreporterEngineTypeBandTypeEnumEnum *) nil_chk(bandTypeValue_)) hash];
    hashCode__ = [[JavaLangInteger alloc] initWithInt:hash_];
  }
  return [((JavaLangInteger *) nil_chk(hashCode__)) intValue];
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (NSString *)description {
  return [NSString stringWithFormat:@"{reportName: %@, groupName: %@,bandType: %@}", reportName_, groupName_, bandTypeValue_];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineJROrigin *typedCopy = (OrgOssPdfreporterEngineJROrigin *) copy;
  typedCopy.bandTypeValue = bandTypeValue_;
  typedCopy.groupName = groupName_;
  typedCopy.reportName = reportName_;
  typedCopy.hashCode_ = hashCode__;
}

@end
