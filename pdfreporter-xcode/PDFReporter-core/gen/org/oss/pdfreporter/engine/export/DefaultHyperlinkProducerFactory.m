//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/export/DefaultHyperlinkProducerFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/export/DefaultHyperlinkProducerFactory.h"
#include "org/oss/pdfreporter/engine/export/JRHyperlinkProducer.h"
#include "org/oss/pdfreporter/engine/export/JRHyperlinkProducerFactory.h"

@implementation OrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactory

@synthesize jasperReportsContext = jasperReportsContext_;

- (id)init {
  return [self initOrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactoryWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
}

- (id)initOrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactoryWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [self initOrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactoryWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<OrgOssPdfreporterEngineExportJRHyperlinkProducer>)getHandlerWithNSString:(NSString *)linkType {
  if (linkType == nil) {
    return nil;
  }
  id<JavaUtilList> factories = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getExtensionsWithIOSClass:[IOSClass classWithClass:[OrgOssPdfreporterEngineExportJRHyperlinkProducerFactory class]]];
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(factories)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    OrgOssPdfreporterEngineExportJRHyperlinkProducerFactory *factory = [((id<JavaUtilIterator>) nil_chk(it)) next];
    id<OrgOssPdfreporterEngineExportJRHyperlinkProducer> producer = [((OrgOssPdfreporterEngineExportJRHyperlinkProducerFactory *) nil_chk(factory)) getHandlerWithNSString:linkType];
    if (producer != nil) {
      return producer;
    }
  }
  return nil;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactory *typedCopy = (OrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactory *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
}

@end
