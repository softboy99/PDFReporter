//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/style/PropertyStyleProviderFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/style/PropertyStyleProvider.h"
#include "org/oss/pdfreporter/engine/style/PropertyStyleProviderFactory.h"
#include "org/oss/pdfreporter/engine/style/StyleProvider.h"
#include "org/oss/pdfreporter/engine/style/StyleProviderContext.h"

@implementation OrgOssPdfreporterEngineStylePropertyStyleProviderFactory

static OrgOssPdfreporterEngineStylePropertyStyleProviderFactory * OrgOssPdfreporterEngineStylePropertyStyleProviderFactory_INSTANCE_;

+ (OrgOssPdfreporterEngineStylePropertyStyleProviderFactory *)INSTANCE {
  return OrgOssPdfreporterEngineStylePropertyStyleProviderFactory_INSTANCE_;
}

- (id)init {
  return [super init];
}

+ (OrgOssPdfreporterEngineStylePropertyStyleProviderFactory *)getInstance {
  return OrgOssPdfreporterEngineStylePropertyStyleProviderFactory_INSTANCE_;
}

- (id<OrgOssPdfreporterEngineStyleStyleProvider>)getStyleProviderWithOrgOssPdfreporterEngineStyleStyleProviderContext:(id<OrgOssPdfreporterEngineStyleStyleProviderContext>)context
                                                                      withOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperreportsContext {
  id<JavaUtilMap> stylePropertyExpressions = nil;
  IOSObjectArray *propertyExpressions = [((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((id<OrgOssPdfreporterEngineStyleStyleProviderContext>) nil_chk(context)) getElement])) getPropertyExpressions];
  if (propertyExpressions != nil) {
    {
      IOSObjectArray *a__ = propertyExpressions;
      int n__ = (int) [((IOSObjectArray *) nil_chk(a__)) count];
      for (int i__ = 0; i__ < n__; i__++) {
        id<OrgOssPdfreporterEngineJRPropertyExpression> propertyExpression = [((IOSObjectArray *) nil_chk(a__)) objectAtIndex:i__];
        if ([((NSString *) nil_chk([((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(propertyExpression)) getName])) hasPrefix:[OrgOssPdfreporterEngineStylePropertyStyleProvider STYLE_PROPERTY_PREFIX]]) {
          if (stylePropertyExpressions == nil) {
            stylePropertyExpressions = [[JavaUtilHashMap alloc] init];
          }
          (void) [((id<JavaUtilMap>) nil_chk(stylePropertyExpressions)) putWithId:[((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(propertyExpression)) getName] withId:propertyExpression];
        }
      }
    }
  }
  id<JavaUtilList> styleProperties = [OrgOssPdfreporterEngineJRPropertiesUtil getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:[((id<OrgOssPdfreporterEngineStyleStyleProviderContext>) nil_chk(context)) getElement] withNSString:[OrgOssPdfreporterEngineStylePropertyStyleProvider STYLE_PROPERTY_PREFIX]];
  if (stylePropertyExpressions != nil || (styleProperties != nil && [((id<JavaUtilList>) nil_chk(styleProperties)) size] > 0)) {
    return [[OrgOssPdfreporterEngineStylePropertyStyleProvider alloc] initWithOrgOssPdfreporterEngineStyleStyleProviderContext:context withJavaUtilMap:stylePropertyExpressions];
  }
  return nil;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineStylePropertyStyleProviderFactory class]) {
    OrgOssPdfreporterEngineStylePropertyStyleProviderFactory_INSTANCE_ = [[OrgOssPdfreporterEngineStylePropertyStyleProviderFactory alloc] init];
  }
}

@end
