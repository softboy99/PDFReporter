//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fonts/LazyFontFace.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/Boolean.h"
#include "java/lang/RuntimeException.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/fonts/FontFace.h"
#include "org/oss/pdfreporter/engine/fonts/FontFamily.h"
#include "org/oss/pdfreporter/engine/fonts/LazyFontFace.h"
#include "org/oss/pdfreporter/font/IFont.h"
#include "org/oss/pdfreporter/font/IFontManager.h"
#include "org/oss/pdfreporter/font/factory/IFontFactory.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/repo/DigireportFileResourceLoader.h"

@implementation OrgOssPdfreporterEngineFontsLazyFontFace

static JavaUtilLoggingLogger * OrgOssPdfreporterEngineFontsLazyFontFace_logger_;

@synthesize fontFamily = fontFamily_;
@synthesize style = style_;
@synthesize url = url_;
@synthesize font = font_;

+ (JavaUtilLoggingLogger *)logger {
  return OrgOssPdfreporterEngineFontsLazyFontFace_logger_;
}

- (id)initWithOrgOssPdfreporterEngineFontsFontFamily:(id<OrgOssPdfreporterEngineFontsFontFamily>)fontFamily
        withOrgOssPdfreporterFontIFont_FontStyleEnum:(OrgOssPdfreporterFontIFont_FontStyleEnum *)style
                        withOrgOssPdfreporterNetIURL:(id<OrgOssPdfreporterNetIURL>)url {
  if ((self = [super init])) {
    font_ = nil;
    self.fontFamily = fontFamily;
    self.style = style;
    self.url = url;
  }
  return self;
}

+ (id<OrgOssPdfreporterEngineFontsFontFace>)getInstanceWithOrgOssPdfreporterEngineFontsFontFamily:(id<OrgOssPdfreporterEngineFontsFontFamily>)fontFamily
                                                     withOrgOssPdfreporterFontIFont_FontStyleEnum:(OrgOssPdfreporterFontIFont_FontStyleEnum *)style
                                                                                     withNSString:(NSString *)file {
  id<OrgOssPdfreporterNetIURL> url = [OrgOssPdfreporterRepoDigireportFileResourceLoader getURLWithNSString:file];
  if (url == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Font file: %@ not found.", file]];
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFontsLazyFontFace_logger_)) finestWithNSString:[NSString stringWithFormat:@"Add font resource: %@, Style: %@, Resource: %@", [((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(fontFamily)) getName], style, file]];
  return [[OrgOssPdfreporterEngineFontsLazyFontFace alloc] initWithOrgOssPdfreporterEngineFontsFontFamily:fontFamily withOrgOssPdfreporterFontIFont_FontStyleEnum:style withOrgOssPdfreporterNetIURL:url];
}

- (NSString *)getName {
  return [((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(fontFamily_)) getName];
}

- (NSString *)getFile {
  return [((id<OrgOssPdfreporterNetIURL>) nil_chk(url_)) getPath];
}

- (id<OrgOssPdfreporterFontIFont>)getFont {
  if (font_ == nil) {
    [self loadFont];
  }
  return font_;
}

- (void)loadFont {
  id<OrgOssPdfreporterFontIFontManager> fontManager = [((id<OrgOssPdfreporterFontFactoryIFontFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getFontFactory])) getFontManager];
  self.font = [((id<OrgOssPdfreporterFontIFontManager>) nil_chk(fontManager)) loadFontWithNSString:[((id<OrgOssPdfreporterNetIURL>) nil_chk(url_)) getPath] withNSString:[((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(fontFamily_)) getPdfEncoding] withBOOL:[((JavaLangBoolean *) nil_chk([((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(fontFamily_)) isPdfEmbedded])) booleanValue] withNSString:[((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(fontFamily_)) getName] withOrgOssPdfreporterFontIFont_FontStyleEnum:style_];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFontsLazyFontFace class]) {
    OrgOssPdfreporterEngineFontsLazyFontFace_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineFontsLazyFontFace class]] getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFontsLazyFontFace *typedCopy = (OrgOssPdfreporterEngineFontsLazyFontFace *) copy;
  typedCopy.fontFamily = fontFamily_;
  typedCopy.style = style_;
  typedCopy.url = url_;
  typedCopy.font = font_;
}

@end
