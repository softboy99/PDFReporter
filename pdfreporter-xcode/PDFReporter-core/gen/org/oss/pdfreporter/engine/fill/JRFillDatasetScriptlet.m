//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillDatasetScriptlet.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRAbstractScriptlet.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDatasetScriptlet.h"

@implementation OrgOssPdfreporterEngineFillJRFillDatasetScriptlet

@synthesize dataset = dataset_;

- (id)initWithOrgOssPdfreporterEngineFillJRFillDataset:(OrgOssPdfreporterEngineFillJRFillDataset *)dataset {
  if ((self = [super init])) {
    self.dataset = dataset;
  }
  return self;
}

- (void)setDataWithJavaUtilMap:(id<JavaUtilMap>)parsm
               withJavaUtilMap:(id<JavaUtilMap>)fldsm
               withJavaUtilMap:(id<JavaUtilMap>)varsm
withOrgOssPdfreporterEngineFillJRFillGroupArray:(IOSObjectArray *)grps {
  [super setDataWithJavaUtilMap:parsm withJavaUtilMap:fldsm withJavaUtilMap:varsm withOrgOssPdfreporterEngineFillJRFillGroupArray:grps];
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) setDataWithJavaUtilMap:parsm withJavaUtilMap:fldsm withJavaUtilMap:varsm withOrgOssPdfreporterEngineFillJRFillGroupArray:grps];
  }
}

- (void)beforeReportInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) beforeReportInit];
  }
}

- (void)afterReportInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) afterReportInit];
  }
}

- (void)beforePageInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) beforePageInit];
  }
}

- (void)afterPageInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) afterPageInit];
  }
}

- (void)beforeColumnInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) beforeColumnInit];
  }
}

- (void)afterColumnInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) afterColumnInit];
  }
}

- (void)beforeGroupInitWithNSString:(NSString *)groupName {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) beforeGroupInitWithNSString:groupName];
  }
}

- (void)afterGroupInitWithNSString:(NSString *)groupName {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) afterGroupInitWithNSString:groupName];
  }
}

- (void)beforeDetailEval {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) beforeDetailEval];
  }
}

- (void)afterDetailEval {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)).scriptlets)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) afterDetailEval];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRFillDatasetScriptlet *typedCopy = (OrgOssPdfreporterEngineFillJRFillDatasetScriptlet *) copy;
  typedCopy.dataset = dataset_;
}

@end
