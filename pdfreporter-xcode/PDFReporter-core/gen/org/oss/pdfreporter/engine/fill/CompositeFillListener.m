//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/CompositeFillListener.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/fill/CompositeFillListener.h"
#include "org/oss/pdfreporter/engine/fill/FillListener.h"

@implementation OrgOssPdfreporterEngineFillCompositeFillListener

@synthesize listeners = listeners_;

+ (id<OrgOssPdfreporterEngineFillFillListener>)addListenerWithOrgOssPdfreporterEngineFillFillListener:(id<OrgOssPdfreporterEngineFillFillListener>)existingListener
                                                          withOrgOssPdfreporterEngineFillFillListener:(id<OrgOssPdfreporterEngineFillFillListener>)listener {
  if (existingListener == nil) {
    return listener;
  }
  if (listener == nil) {
    return existingListener;
  }
  if ([(id) existingListener isKindOfClass:[OrgOssPdfreporterEngineFillCompositeFillListener class]]) {
    [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillCompositeFillListener *) existingListener).listeners)) addWithId:listener];
    return existingListener;
  }
  OrgOssPdfreporterEngineFillCompositeFillListener *newListener = [[OrgOssPdfreporterEngineFillCompositeFillListener alloc] init];
  [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillCompositeFillListener *) nil_chk(newListener)).listeners)) addWithId:existingListener];
  [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillCompositeFillListener *) nil_chk(newListener)).listeners)) addWithId:listener];
  return newListener;
}

- (void)pageGeneratedWithOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)jasperPrint
                                                    withInt:(int)pageIndex {
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(listeners_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<OrgOssPdfreporterEngineFillFillListener> listener = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      [((id<OrgOssPdfreporterEngineFillFillListener>) nil_chk(listener)) pageGeneratedWithOrgOssPdfreporterEngineJasperPrint:jasperPrint withInt:pageIndex];
    }
  }
}

- (void)pageUpdatedWithOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)jasperPrint
                                                  withInt:(int)pageIndex {
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(listeners_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<OrgOssPdfreporterEngineFillFillListener> listener = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      [((id<OrgOssPdfreporterEngineFillFillListener>) nil_chk(listener)) pageUpdatedWithOrgOssPdfreporterEngineJasperPrint:jasperPrint withInt:pageIndex];
    }
  }
}

- (id)init {
  if ((self = [super init])) {
    listeners_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillCompositeFillListener *typedCopy = (OrgOssPdfreporterEngineFillCompositeFillListener *) copy;
  typedCopy.listeners = listeners_;
}

@end
