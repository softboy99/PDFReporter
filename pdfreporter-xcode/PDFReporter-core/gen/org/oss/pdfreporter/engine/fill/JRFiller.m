//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFiller.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRDataSource.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillInterruptedException.h"
#include "org/oss/pdfreporter/engine/fill/JRFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRHorizontalFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRVerticalFiller.h"
#include "org/oss/pdfreporter/engine/type/PrintOrderEnum.h"
#include "org/oss/pdfreporter/sql/IConnection.h"

@implementation OrgOssPdfreporterEngineFillJRFiller

+ (OrgOssPdfreporterEngineJasperPrint *)fillWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                    withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                                            withJavaUtilMap:(id<JavaUtilMap>)parameters
                                                        withOrgOssPdfreporterSqlIConnection:(id<OrgOssPdfreporterSqlIConnection>)conn {
  OrgOssPdfreporterEngineFillJRBaseFiller *filler = [OrgOssPdfreporterEngineFillJRFiller createFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport];
  OrgOssPdfreporterEngineJasperPrint *jasperPrint = nil;
  @try {
    jasperPrint = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) fillWithJavaUtilMap:parameters withOrgOssPdfreporterSqlIConnection:conn];
  }
  @catch (OrgOssPdfreporterEngineFillJRFillInterruptedException *e) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:@"The report filling thread was interrupted." withJavaLangThrowable:e];
  }
  return jasperPrint;
}

+ (OrgOssPdfreporterEngineJasperPrint *)fillWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                    withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                                            withJavaUtilMap:(id<JavaUtilMap>)parameters
                                                    withOrgOssPdfreporterEngineJRDataSource:(id<OrgOssPdfreporterEngineJRDataSource>)dataSource {
  OrgOssPdfreporterEngineFillJRBaseFiller *filler = [OrgOssPdfreporterEngineFillJRFiller createFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport];
  OrgOssPdfreporterEngineJasperPrint *jasperPrint = nil;
  @try {
    jasperPrint = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) fillWithJavaUtilMap:parameters withOrgOssPdfreporterEngineJRDataSource:dataSource];
  }
  @catch (OrgOssPdfreporterEngineFillJRFillInterruptedException *e) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:@"The report filling thread was interrupted." withJavaLangThrowable:e];
  }
  return jasperPrint;
}

+ (OrgOssPdfreporterEngineJasperPrint *)fillWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                    withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                                            withJavaUtilMap:(id<JavaUtilMap>)parameters {
  OrgOssPdfreporterEngineFillJRBaseFiller *filler = [OrgOssPdfreporterEngineFillJRFiller createFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport];
  @try {
    OrgOssPdfreporterEngineJasperPrint *jasperPrint = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) fillWithJavaUtilMap:parameters];
    return jasperPrint;
  }
  @catch (OrgOssPdfreporterEngineFillJRFillInterruptedException *e) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:@"The report filling thread was interrupted." withJavaLangThrowable:e];
  }
}

+ (OrgOssPdfreporterEngineFillJRBaseFiller *)createFillerWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                 withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport {
  OrgOssPdfreporterEngineFillJRBaseFiller *filler = nil;
  switch ([[((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport)) getPrintOrderValue] ordinal]) {
    case OrgOssPdfreporterEngineTypePrintOrderEnum_HORIZONTAL:
    {
      filler = [[OrgOssPdfreporterEngineFillJRHorizontalFiller alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport];
      break;
    }
    case OrgOssPdfreporterEngineTypePrintOrderEnum_VERTICAL:
    {
      filler = [[OrgOssPdfreporterEngineFillJRVerticalFiller alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport];
      break;
    }
  }
  return filler;
}

- (id)init {
  return [super init];
}

@end
