//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillElementGroup.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRChild.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseTextField.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"

@implementation OrgOssPdfreporterEngineFillJRFillElementGroup

static JavaUtilLoggingLogger * OrgOssPdfreporterEngineFillJRFillElementGroup_logger_;

@synthesize children = children_;
@synthesize elementGroup = elementGroup_;
@synthesize elements = elements_;
@synthesize topElementInGroup = topElementInGroup_;
@synthesize bottomElementInGroup = bottomElementInGroup_;
@synthesize stretchHeightDiff = stretchHeightDiff_;

+ (JavaUtilLoggingLogger *)logger {
  return OrgOssPdfreporterEngineFillJRFillElementGroup_logger_;
}

- (id)initWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)elementGrp
 withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  if ((self = [super init])) {
    children_ = [[JavaUtilArrayList alloc] init];
    if (elementGrp != nil) {
      [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) putWithId:elementGrp withId:self];
      id<JavaUtilList> list = [elementGrp getChildren];
      if (list != nil && [((id<JavaUtilList>) nil_chk(list)) size] > 0) {
        for (int i = 0; i < [((id<JavaUtilList>) nil_chk(list)) size]; i++) {
          id<OrgOssPdfreporterEngineJRChild> child = [((id<JavaUtilList>) nil_chk(list)) getWithInt:i];
          if ([(id) child isKindOfClass:[OrgOssPdfreporterEngineBaseJRBaseTextField class]] && [((OrgOssPdfreporterEngineBaseJRBaseTextField *) child) getExpression] != nil) {
            [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillElementGroup_logger_)) finestWithNSString:[NSString stringWithFormat:@"addChild: %@, Expression: %d", child, [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk([((OrgOssPdfreporterEngineBaseJRBaseTextField *) child) getExpression])) getId]]];
          }
          else {
            [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillElementGroup_logger_)) finestWithNSString:[NSString stringWithFormat:@"JRElementGroup-addChild: %@", child]];
          }
          child = (id<OrgOssPdfreporterEngineJRChild>) [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) getVisitResultWithOrgOssPdfreporterEngineJRVisitable:child];
          [((id<JavaUtilList>) nil_chk(children_)) addWithId:child];
        }
      }
      (void) [self getElements];
      elementGroup_ = (id<OrgOssPdfreporterEngineJRElementGroup>) [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) getVisitResultWithOrgOssPdfreporterEngineJRVisitable:[elementGrp getElementGroup]];
    }
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineFillJRFillElementGroup:(OrgOssPdfreporterEngineFillJRFillElementGroup *)elementGrp
          withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  if ((self = [super init])) {
    children_ = [[JavaUtilArrayList alloc] init];
    [((OrgOssPdfreporterEngineFillJRFillCloneFactory *) nil_chk(factory)) putWithOrgOssPdfreporterEngineFillJRFillCloneable:elementGrp withOrgOssPdfreporterEngineFillJRFillCloneable:self];
    id<JavaUtilList> list = [((OrgOssPdfreporterEngineFillJRFillElementGroup *) nil_chk(elementGrp)) getChildren];
    if (list != nil) {
      for (int i = 0; i < [list size]; i++) {
        id<OrgOssPdfreporterEngineFillJRFillCloneable> child = (id<OrgOssPdfreporterEngineFillJRFillCloneable>) [list getWithInt:i];
        id<OrgOssPdfreporterEngineFillJRFillCloneable> clone = [((id<OrgOssPdfreporterEngineFillJRFillCloneable>) nil_chk(child)) createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
        [((id<JavaUtilList>) nil_chk(children_)) addWithId:(id<OrgOssPdfreporterEngineJRChild>) clone];
      }
    }
    (void) [self getElements];
    elementGroup_ = (OrgOssPdfreporterEngineFillJRFillElementGroup *) [((OrgOssPdfreporterEngineFillJRFillCloneFactory *) nil_chk(factory)) getCloneWithOrgOssPdfreporterEngineFillJRFillCloneable:(OrgOssPdfreporterEngineFillJRFillElementGroup *) [((OrgOssPdfreporterEngineFillJRFillElementGroup *) nil_chk(elementGrp)) getElementGroup]];
  }
  return self;
}

- (id<JavaUtilList>)getChildren {
  return self.children;
}

- (id<OrgOssPdfreporterEngineJRElementGroup>)getElementGroup {
  return self.elementGroup;
}

- (IOSObjectArray *)getElements {
  if (self.elements == nil) {
    if (self.children != nil) {
      id<JavaUtilList> allElements = [[JavaUtilArrayList alloc] init];
      id child = nil;
      IOSObjectArray *childElementArray = nil;
      for (int i = 0; i < [self.children size]; i++) {
        child = [self.children getWithInt:i];
        if ([child isKindOfClass:[OrgOssPdfreporterEngineFillJRFillElement class]]) {
          [((id<JavaUtilList>) nil_chk(allElements)) addWithId:(id<OrgOssPdfreporterEngineJRElement>) child];
        }
        else if ([child isKindOfClass:[OrgOssPdfreporterEngineFillJRFillElementGroup class]]) {
          childElementArray = [((OrgOssPdfreporterEngineFillJRFillElementGroup *) child) getElements];
          if (childElementArray != nil) {
            [((id<JavaUtilList>) nil_chk(allElements)) addAllWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:childElementArray]];
          }
        }
      }
      self.elements = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(allElements)) size] type:[IOSClass classWithClass:[OrgOssPdfreporterEngineFillJRFillElement class]]];
      (void) [((id<JavaUtilList>) nil_chk(allElements)) toArrayWithNSObjectArray:self.elements];
    }
  }
  return self.elements;
}

- (id<OrgOssPdfreporterEngineJRElement>)getElementByKeyWithNSString:(NSString *)key {
  return nil;
}

- (void)reset {
  topElementInGroup_ = nil;
}

- (int)getStretchHeightDiff {
  if (topElementInGroup_ == nil) {
    stretchHeightDiff_ = 0;
    [self setTopBottomElements];
    IOSObjectArray *allElements = [self getElements];
    if (allElements != nil && (int) [((IOSObjectArray *) nil_chk(allElements)) count] > 0) {
      OrgOssPdfreporterEngineFillJRFillElement *topElem = nil;
      OrgOssPdfreporterEngineFillJRFillElement *bottomElem = nil;
      for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(allElements)) count]; i++) {
        OrgOssPdfreporterEngineFillJRFillElement *element = (OrgOssPdfreporterEngineFillJRFillElement *) [((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i];
        if ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) isToPrint]) {
          if (topElem == nil || ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getRelativeY] + [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getStretchHeight] < [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(topElem)) getRelativeY] + [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(topElem)) getStretchHeight])) {
            topElem = element;
          }
          if (bottomElem == nil || ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getRelativeY] + [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getStretchHeight] > [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(bottomElem)) getRelativeY] + [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(bottomElem)) getStretchHeight])) {
            bottomElem = element;
          }
        }
      }
      if (topElem != nil) {
        stretchHeightDiff_ = [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(bottomElem)) getRelativeY] + [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(bottomElem)) getStretchHeight] - [topElem getRelativeY] - ([((id<OrgOssPdfreporterEngineJRElement>) nil_chk(bottomElementInGroup_)) getY] + [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(bottomElementInGroup_)) getHeight] - [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(topElementInGroup_)) getY]);
      }
      if (stretchHeightDiff_ < 0) {
        stretchHeightDiff_ = 0;
      }
    }
  }
  return stretchHeightDiff_;
}

- (void)setTopBottomElements {
  IOSObjectArray *allElements = [self getElements];
  if (allElements != nil && (int) [((IOSObjectArray *) nil_chk(allElements)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(allElements)) count]; i++) {
      if (topElementInGroup_ == nil || ([((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i])) getY] + [((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i])) getHeight] < [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(topElementInGroup_)) getY] + [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(topElementInGroup_)) getHeight])) {
        topElementInGroup_ = [((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i];
      }
      if (bottomElementInGroup_ == nil || ([((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i])) getY] + [((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i])) getHeight] > [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(bottomElementInGroup_)) getY] + [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(bottomElementInGroup_)) getHeight])) {
        bottomElementInGroup_ = [((IOSObjectArray *) nil_chk(allElements)) objectAtIndex:i];
      }
    }
  }
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitElementGroupWithOrgOssPdfreporterEngineJRElementGroup:self];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return [[OrgOssPdfreporterEngineFillJRFillElementGroup alloc] initWithOrgOssPdfreporterEngineFillJRFillElementGroup:self withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
}

- (id)clone {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id)cloneWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)parentGroup {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRFillElementGroup class]) {
    OrgOssPdfreporterEngineFillJRFillElementGroup_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineFillJRFillElementGroup class]] getName]];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRFillElementGroup *typedCopy = (OrgOssPdfreporterEngineFillJRFillElementGroup *) copy;
  typedCopy.children = children_;
  typedCopy.elementGroup = elementGroup_;
  typedCopy.elements = elements_;
  typedCopy.topElementInGroup = topElementInGroup_;
  typedCopy.bottomElementInGroup = bottomElementInGroup_;
  typedCopy.stretchHeightDiff = stretchHeightDiff_;
}

@end
