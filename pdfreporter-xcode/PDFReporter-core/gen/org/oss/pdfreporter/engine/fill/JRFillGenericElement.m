//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillGenericElement.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRGenericElement.h"
#include "org/oss/pdfreporter/engine/JRGenericElementParameter.h"
#include "org/oss/pdfreporter/engine/JRGenericElementType.h"
#include "org/oss/pdfreporter/engine/JRGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGenericElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRRecordedValuesGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateGenericElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@implementation OrgOssPdfreporterEngineFillJRFillGenericElement

@synthesize parameters = parameters_;
@synthesize parameterValues = parameterValues_;

- (id)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
          withOrgOssPdfreporterEngineJRGenericElement:(id<OrgOssPdfreporterEngineJRGenericElement>)element
   withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRBaseFiller:filler withOrgOssPdfreporterEngineJRElement:element withOrgOssPdfreporterEngineFillJRFillObjectFactory:factory])) {
    parameterValues_ = [[JavaUtilHashMap alloc] init];
    self.parameters = [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(element)) getParameters];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineFillJRFillGenericElement:(OrgOssPdfreporterEngineFillJRFillGenericElement *)element
            withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRFillElement:element withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory])) {
    parameterValues_ = [[JavaUtilHashMap alloc] init];
    self.parameters = ((OrgOssPdfreporterEngineFillJRFillGenericElement *) nil_chk(element)).parameters;
  }
  return self;
}

- (void)evaluateWithChar:(char)evaluation {
  [self initDelayedEvaluations];
  [self reset];
  [self evaluatePrintWhenExpressionWithChar:evaluation];
  if ([self isPrintWhenExpressionNull] || [self isPrintWhenTrue]) {
    if ([self isEvaluateNow]) {
      [self evaluateElementWithChar:evaluation];
    }
  }
}

- (void)collectDelayedEvaluations {
  [super collectDelayedEvaluations];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(parameters_)) count]; i++) {
    id<OrgOssPdfreporterEngineJRGenericElementParameter> parameter = [((IOSObjectArray *) nil_chk(parameters_)) objectAtIndex:i];
    [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getValueExpression]];
  }
}

- (void)evaluateElementWithChar:(char)evaluation {
  [self evaluatePropertiesWithChar:evaluation];
  [self evaluateStyleWithChar:evaluation];
  [((id<JavaUtilMap>) nil_chk(parameterValues_)) clear];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(parameters_)) count]; i++) {
    id<OrgOssPdfreporterEngineJRGenericElementParameter> parameter = [((IOSObjectArray *) nil_chk(parameters_)) objectAtIndex:i];
    id value = nil;
    id<OrgOssPdfreporterEngineJRExpression> valueExpression = [((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getValueExpression];
    if (valueExpression != nil) {
      value = [self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:valueExpression withChar:evaluation];
    }
    if (value != nil || ![((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) isSkipWhenEmpty]) {
      (void) [((id<JavaUtilMap>) nil_chk(parameterValues_)) putWithId:[((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getName] withId:value];
    }
  }
}

- (BOOL)prepareWithInt:(int)availableHeight
              withBOOL:(BOOL)isOverflow {
  BOOL willOverflow = NO;
  [super prepareWithInt:availableHeight withBOOL:isOverflow];
  if (![self isToPrint]) {
    return willOverflow;
  }
  BOOL isToPrint = YES;
  BOOL isReprinted = NO;
  if (isOverflow && [self isAlreadyPrinted] && ![self isPrintWhenDetailOverflows]) {
    isToPrint = NO;
  }
  if (isToPrint && availableHeight < [self getRelativeY] + [self getHeight]) {
    isToPrint = NO;
    willOverflow = YES;
  }
  if (isToPrint && isOverflow && [self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || ![self isPrintRepeatedValues])) {
    isReprinted = YES;
  }
  [self setToPrintWithBOOL:isToPrint];
  [self setReprintedWithBOOL:isReprinted];
  return willOverflow;
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  OrgOssPdfreporterEngineFillJRTemplateGenericPrintElement *printElement;
  if ([self isEvaluateAuto]) {
    OrgOssPdfreporterEngineFillJRRecordedValuesGenericPrintElement *recordedValuesElement = [[OrgOssPdfreporterEngineFillJRRecordedValuesGenericPrintElement alloc] initWithOrgOssPdfreporterEngineFillJRTemplateGenericElement:[self getTemplate] withInt:elementId_ withInt:(int) [((IOSObjectArray *) nil_chk(parameters_)) count]];
    [self copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:recordedValuesElement];
    [self initDelayedEvaluationPrintWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:recordedValuesElement];
    printElement = recordedValuesElement;
  }
  else {
    printElement = [[OrgOssPdfreporterEngineFillJRTemplateGenericPrintElement alloc] initWithOrgOssPdfreporterEngineFillJRTemplateGenericElement:[self getTemplate] withInt:elementId_ withInt:(int) [((IOSObjectArray *) nil_chk(parameters_)) count]];
    [self copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:printElement];
    if ([self isEvaluateNow]) {
      [self copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:printElement];
    }
    else {
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addBoundElementWithOrgOssPdfreporterEngineFillJRFillElement:self withOrgOssPdfreporterEngineJRPrintElement:printElement withOrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum:[self getEvaluationTimeValue] withNSString:[self getEvaluationGroupName] withOrgOssPdfreporterEngineFillJRFillBand:band_];
    }
  }
  return printElement;
}

- (void)copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:(id<OrgOssPdfreporterEngineJRGenericPrintElement>)printElement OBJC_METHOD_FAMILY_NONE {
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[self getUUID]];
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setXWithInt:[self getX]];
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setYWithInt:[self getRelativeY]];
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setWidthWithInt:[self getWidth]];
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setHeightWithInt:[self getStretchHeight]];
}

- (OrgOssPdfreporterEngineFillJRTemplateGenericElement *)getTemplate {
  return (OrgOssPdfreporterEngineFillJRTemplateGenericElement *) [self getElementTemplate];
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  return [[OrgOssPdfreporterEngineFillJRTemplateGenericElement alloc] initWithOrgOssPdfreporterEngineJROrigin:[self getElementOrigin] withOrgOssPdfreporterEngineJRDefaultStyleProvider:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider] withOrgOssPdfreporterEngineJRGenericElement:self];
}

- (void)copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:(id<OrgOssPdfreporterEngineJRGenericPrintElement>)printElement OBJC_METHOD_FAMILY_NONE {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(parameterValues_)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry = [((id<JavaUtilIterator>) nil_chk(it)) next];
    NSString *name = [((id<JavaUtilMap_Entry>) nil_chk(entry)) getKey];
    id value = [((id<JavaUtilMap_Entry>) nil_chk(entry)) getValue];
    [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setParameterValueWithNSString:name withId:value];
  }
  [self transferPropertiesWithOrgOssPdfreporterEngineJRPrintElement:printElement];
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withChar:(char)evaluation {
  id<OrgOssPdfreporterEngineJRGenericPrintElement> genericElement = (id<OrgOssPdfreporterEngineJRGenericPrintElement>) element;
  [self evaluateElementWithChar:evaluation];
  [self copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:genericElement];
}

- (void)rewind {
}

- (OrgOssPdfreporterEngineJRGenericElementType *)getGenericType {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) parent_) getGenericType];
}

- (IOSObjectArray *)getParameters {
  return parameters_;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRGenericElement:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitGenericElementWithOrgOssPdfreporterEngineJRGenericElement:self];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return [[OrgOssPdfreporterEngineFillJRFillGenericElement alloc] initWithOrgOssPdfreporterEngineFillJRFillGenericElement:self withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
}

- (OrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum *)getEvaluationTimeValue {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) parent_) getEvaluationTimeValue];
}

- (NSString *)getEvaluationGroupName {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) parent_) getEvaluationGroupName];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRFillGenericElement *typedCopy = (OrgOssPdfreporterEngineFillJRFillGenericElement *) copy;
  typedCopy.parameters = parameters_;
  typedCopy.parameterValues = parameterValues_;
}

@end
