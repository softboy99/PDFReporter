//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillComponentElement.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/Locale.h"
#include "java/util/TimeZone.h"
#include "org/oss/pdfreporter/engine/JRComponentElement.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/component/Component.h"
#include "org/oss/pdfreporter/engine/component/ComponentFillFactory.h"
#include "org/oss/pdfreporter/engine/component/ComponentKey.h"
#include "org/oss/pdfreporter/engine/component/ComponentManager.h"
#include "org/oss/pdfreporter/engine/component/ComponentsEnvironment.h"
#include "org/oss/pdfreporter/engine/component/FillComponent.h"
#include "org/oss/pdfreporter/engine/component/FillPrepareResult.h"
#include "org/oss/pdfreporter/engine/component/IComponentManager.h"
#include "org/oss/pdfreporter/engine/fill/FillContainerContext.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluationTime.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillComponentElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"

@implementation OrgOssPdfreporterEngineFillJRFillComponentElement

@synthesize fillComponent = fillComponent_;
@synthesize filling = filling_;

- (id)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
        withOrgOssPdfreporterEngineJRComponentElement:(id<OrgOssPdfreporterEngineJRComponentElement>)element
   withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRBaseFiller:filler withOrgOssPdfreporterEngineJRElement:element withOrgOssPdfreporterEngineFillJRFillObjectFactory:factory])) {
    OrgOssPdfreporterEngineComponentComponentKey *componentKey = [((id<OrgOssPdfreporterEngineJRComponentElement>) nil_chk(element)) getComponentKey];
    id<OrgOssPdfreporterEngineComponentComponentManager> manager = (id<OrgOssPdfreporterEngineComponentComponentManager>) [((OrgOssPdfreporterEngineComponentComponentsEnvironment *) nil_chk([OrgOssPdfreporterEngineComponentComponentsEnvironment getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) getManagerWithOrgOssPdfreporterEngineComponentComponentKey:componentKey];
    fillComponent_ = [((id<OrgOssPdfreporterEngineComponentComponentFillFactory>) nil_chk([((id<OrgOssPdfreporterEngineComponentComponentManager>) nil_chk(manager)) getComponentFillFactoryWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) toFillComponentWithOrgOssPdfreporterEngineComponentComponent:[((id<OrgOssPdfreporterEngineJRComponentElement>) nil_chk(element)) getComponent] withOrgOssPdfreporterEngineFillJRFillObjectFactory:factory];
    [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) initialize__WithOrgOssPdfreporterEngineComponentFillContext:self];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineFillJRFillComponentElement:(OrgOssPdfreporterEngineFillJRFillComponentElement *)element
              withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRFillElement:element withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory])) {
    OrgOssPdfreporterEngineComponentComponentKey *componentKey = [((OrgOssPdfreporterEngineFillJRFillComponentElement *) nil_chk(element)) getComponentKey];
    id<OrgOssPdfreporterEngineComponentComponentManager> manager = (id<OrgOssPdfreporterEngineComponentComponentManager>) [((OrgOssPdfreporterEngineComponentComponentsEnvironment *) nil_chk([OrgOssPdfreporterEngineComponentComponentsEnvironment getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext]])) getManagerWithOrgOssPdfreporterEngineComponentComponentKey:componentKey];
    fillComponent_ = [((id<OrgOssPdfreporterEngineComponentComponentFillFactory>) nil_chk([((id<OrgOssPdfreporterEngineComponentComponentManager>) nil_chk(manager)) getComponentFillFactoryWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext]])) cloneFillComponentWithOrgOssPdfreporterEngineComponentFillComponent:((OrgOssPdfreporterEngineFillJRFillComponentElement *) nil_chk(element)).fillComponent withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
    [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) initialize__WithOrgOssPdfreporterEngineComponentFillContext:self];
  }
  return self;
}

- (void)evaluateWithChar:(char)evaluation {
  [self reset];
  [self evaluatePrintWhenExpressionWithChar:evaluation];
  if ([self isPrintWhenExpressionNull] || [self isPrintWhenTrue]) {
    [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) evaluateWithChar:evaluation];
  }
  filling_ = NO;
}

- (BOOL)prepareWithInt:(int)availableHeight
              withBOOL:(BOOL)isOverflow {
  BOOL willOverflow = NO;
  [super prepareWithInt:availableHeight withBOOL:isOverflow];
  if (![self isToPrint]) {
    return willOverflow;
  }
  BOOL isToPrint = YES;
  BOOL isReprinted = NO;
  if (!filling_ && isOverflow && [self isAlreadyPrinted] && ![self isPrintWhenDetailOverflows]) {
    isToPrint = NO;
  }
  if (isToPrint && availableHeight < [self getRelativeY] + [self getHeight]) {
    isToPrint = NO;
    willOverflow = YES;
  }
  if (!filling_ && isToPrint && isOverflow && [self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || ![self isPrintRepeatedValues])) {
    isReprinted = YES;
  }
  if (isToPrint) {
    OrgOssPdfreporterEngineComponentFillPrepareResult *result = [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) prepareWithInt:availableHeight - [self getRelativeY]];
    isToPrint = [((OrgOssPdfreporterEngineComponentFillPrepareResult *) nil_chk(result)) isToPrint];
    willOverflow = [((OrgOssPdfreporterEngineComponentFillPrepareResult *) nil_chk(result)) willOverflow];
    [self setStretchHeightWithInt:[((OrgOssPdfreporterEngineComponentFillPrepareResult *) nil_chk(result)) getStretchHeight]];
    filling_ = willOverflow;
  }
  [self setToPrintWithBOOL:isToPrint];
  [self setReprintedWithBOOL:isReprinted];
  return willOverflow;
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  return [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) fill];
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  return nil;
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withChar:(char)evaluation
                withOrgOssPdfreporterEngineFillJREvaluationTime:(OrgOssPdfreporterEngineFillJREvaluationTime *)evaluationTime {
  [self performDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:element withChar:evaluation];
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withChar:(char)evaluation {
  [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) evaluateDelayedElementWithOrgOssPdfreporterEngineJRPrintElement:element withChar:evaluation];
}

- (void)rewind {
  [((id<OrgOssPdfreporterEngineComponentFillComponent>) nil_chk(fillComponent_)) rewind];
  filling_ = NO;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRComponentElement:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitComponentElementWithOrgOssPdfreporterEngineJRComponentElement:self];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return [[OrgOssPdfreporterEngineFillJRFillComponentElement alloc] initWithOrgOssPdfreporterEngineFillJRFillComponentElement:self withOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
}

- (id<OrgOssPdfreporterEngineComponentComponent>)getComponent {
  return [((id<OrgOssPdfreporterEngineJRComponentElement>) parent_) getComponent];
}

- (OrgOssPdfreporterEngineComponentComponentKey *)getComponentKey {
  return [((id<OrgOssPdfreporterEngineJRComponentElement>) parent_) getComponentKey];
}

- (id)evaluateWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                             withChar:(char)evaluation {
  return [super evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:expression withChar:evaluation];
}

- (OrgOssPdfreporterEngineFillJRFillDataset *)getFillDataset {
  return [((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(expressionEvaluator_)) getFillDataset];
}

- (id<OrgOssPdfreporterEngineJRComponentElement>)getComponentElement {
  return self;
}

- (int)getElementSourceId {
  return elementId_;
}

- (OrgOssPdfreporterEngineJROrigin *)getElementOrigin {
  return [super getElementOrigin];
}

- (int)getElementPrintY {
  return [self getRelativeY];
}

- (id<OrgOssPdfreporterEngineJRStyle>)getElementStyle {
  return [self getStyle];
}

- (void)registerDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)printElement
                     withOrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum:(OrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum *)evaluationTime
                                                              withNSString:(NSString *)evaluationGroup {
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addBoundElementWithOrgOssPdfreporterEngineFillJRFillElement:self withOrgOssPdfreporterEngineJRPrintElement:printElement withOrgOssPdfreporterEngineTypeEvaluationTimeEnumEnum:evaluationTime withNSString:evaluationGroup withOrgOssPdfreporterEngineFillJRFillBand:band_];
}

- (JavaUtilLocale *)getReportLocale {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getLocale];
}

- (JavaUtilTimeZone *)getReportTimezone {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getTimeZone];
}

- (OrgOssPdfreporterEngineFillJRBaseFiller *)getFiller {
  return filler_;
}

- (id<OrgOssPdfreporterEngineFillFillContainerContext>)getFillContainerContext {
  return fillContainerContext_;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRFillComponentElement *typedCopy = (OrgOssPdfreporterEngineFillJRFillComponentElement *) copy;
  typedCopy.fillComponent = fillComponent_;
  typedCopy.filling = filling_;
}

@end
