//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRVirtualizationContext.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/Void.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintImage.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRVirtualizable.h"
#include "org/oss/pdfreporter/engine/JRVirtualizationHelper.h"
#include "org/oss/pdfreporter/engine/JRVirtualizer.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/PrintElementVisitor.h"
#include "org/oss/pdfreporter/engine/Renderable.h"
#include "org/oss/pdfreporter/engine/base/JRVirtualPrintPage.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRVirtualizationContext.h"
#include "org/oss/pdfreporter/engine/fill/VirtualizationListener.h"
#include "org/oss/pdfreporter/engine/util/DeepPrintElementVisitor.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.h"

@implementation OrgOssPdfreporterEngineFillJRVirtualizationContext

static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap * OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_;

@synthesize virtualizer = virtualizer_;
@synthesize jasperReportsContext = jasperReportsContext_;
@synthesize cachedRenderers = cachedRenderers_;
@synthesize cachedTemplates = cachedTemplates_;
@synthesize readOnly = readOnly_;
@synthesize disposed = disposed_;
@synthesize pageElementSize = pageElementSize_;
@synthesize listeners = listeners_;
@synthesize cacheTemplateVisitor = cacheTemplateVisitor_;

+ (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)contexts {
  return OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
    cachedRenderers_ = [[JavaUtilHashMap alloc] init];
    cachedTemplates_ = [[JavaUtilHashMap alloc] init];
    pageElementSize_ = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([OrgOssPdfreporterEngineJRPropertiesUtil getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext])) getIntegerPropertyWithNSString:[OrgOssPdfreporterEngineBaseJRVirtualPrintPage PROPERTY_VIRTUAL_PAGE_ELEMENT_SIZE] withInt:0];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineFillJRVirtualizationContext:(OrgOssPdfreporterEngineFillJRVirtualizationContext *)parentContext {
  if ((self = [super init])) {
    self.virtualizer = ((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(parentContext)).virtualizer;
    self.jasperReportsContext = ((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(parentContext)).jasperReportsContext;
    self.cachedRenderers = ((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(parentContext)).cachedRenderers;
    self.cachedTemplates = ((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(parentContext)).cachedTemplates;
    self.pageElementSize = ((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(parentContext)).pageElementSize;
  }
  return self;
}

- (void)addListenerWithOrgOssPdfreporterEngineFillVirtualizationListener:(id<OrgOssPdfreporterEngineFillVirtualizationListener>)listener {
  if (listeners_ == nil) {
    listeners_ = [[JavaUtilArrayList alloc] init];
  }
  [((id<JavaUtilList>) nil_chk(listeners_)) addWithId:listener];
}

- (void)removeListenerWithOrgOssPdfreporterEngineFillVirtualizationListener:(id<OrgOssPdfreporterEngineFillVirtualizationListener>)listener {
  if (listeners_ != nil) {
    [listeners_ removeWithId:listener];
  }
}

- (void)beforeExternalizationWithOrgOssPdfreporterEngineJRVirtualizable:(id<OrgOssPdfreporterEngineJRVirtualizable>)object {
  if (listeners_ != nil) {
    {
      id<JavaUtilIterator> iter__ = [listeners_ iterator];
      while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
        id<OrgOssPdfreporterEngineFillVirtualizationListener> listener = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
        [((id<OrgOssPdfreporterEngineFillVirtualizationListener>) nil_chk(listener)) beforeExternalizationWithOrgOssPdfreporterEngineJRVirtualizable:object];
      }
    }
  }
}

- (void)afterExternalizationWithOrgOssPdfreporterEngineJRVirtualizable:(id<OrgOssPdfreporterEngineJRVirtualizable>)object {
}

- (void)afterInternalizationWithOrgOssPdfreporterEngineJRVirtualizable:(id<OrgOssPdfreporterEngineJRVirtualizable>)object {
  if (listeners_ != nil) {
    {
      id<JavaUtilIterator> iter__ = [listeners_ iterator];
      while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
        id<OrgOssPdfreporterEngineFillVirtualizationListener> listener = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
        [((id<OrgOssPdfreporterEngineFillVirtualizationListener>) nil_chk(listener)) afterInternalizationWithOrgOssPdfreporterEngineJRVirtualizable:object];
      }
    }
  }
}

- (void)cacheRendererWithOrgOssPdfreporterEngineJRPrintImage:(id<OrgOssPdfreporterEngineJRPrintImage>)image {
  id<OrgOssPdfreporterEngineRenderable> renderer = [((id<OrgOssPdfreporterEngineJRPrintImage>) nil_chk(image)) getRenderable];
  if (renderer != nil) {
    (void) [((id<JavaUtilMap>) nil_chk(cachedRenderers_)) putWithId:[renderer getId] withId:renderer];
  }
}

- (id<OrgOssPdfreporterEngineRenderable>)getCachedRendererWithNSString:(NSString *)id_ {
  return [((id<JavaUtilMap>) nil_chk(cachedRenderers_)) getWithId:id_];
}

- (BOOL)hasCachedRendererWithNSString:(NSString *)id_ {
  return [((id<JavaUtilMap>) nil_chk(cachedRenderers_)) containsKeyWithId:id_];
}

- (BOOL)hasCachedTemplateWithNSString:(NSString *)id_ {
  return [((id<JavaUtilMap>) nil_chk(cachedTemplates_)) containsKeyWithId:id_];
}

- (void)cacheTemplateWithOrgOssPdfreporterEngineFillJRTemplateElement:(OrgOssPdfreporterEngineFillJRTemplateElement *)template_ {
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)getCachedTemplateWithNSString:(NSString *)templateId {
  return [((id<JavaUtilMap>) nil_chk(cachedTemplates_)) getWithId:templateId];
}

- (void)cacheTemplateWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element {
  if (cacheTemplateVisitor_ == nil) {
    cacheTemplateVisitor_ = [[OrgOssPdfreporterEngineFillJRVirtualizationContext_CacheTemplateVisitor alloc] initWithOrgOssPdfreporterEngineFillJRVirtualizationContext:self];
  }
  [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) acceptWithOrgOssPdfreporterEnginePrintElementVisitor:cacheTemplateVisitor_ withId:nil];
}

- (BOOL)isReadOnly {
  return readOnly_;
}

- (void)setReadOnlyWithBOOL:(BOOL)readOnly {
  self.readOnly = readOnly;
}

+ (void)register__WithOrgOssPdfreporterEngineFillJRVirtualizationContext:(OrgOssPdfreporterEngineFillJRVirtualizationContext *)context
                                  withOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)print {
  @synchronized (OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_) {
    (void) [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *) nil_chk(OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_)) putWithId:print withId:context];
  }
}

+ (OrgOssPdfreporterEngineFillJRVirtualizationContext *)getRegisteredWithOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)print {
  @synchronized (OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_) {
    return (OrgOssPdfreporterEngineFillJRVirtualizationContext *) [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *) nil_chk(OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_)) getWithId:print];
  }
}

- (int)getPageElementSize {
  return pageElementSize_;
}

- (void)setPageElementSizeWithInt:(int)pageElementSize {
  self.pageElementSize = pageElementSize;
}

- (id<OrgOssPdfreporterEngineJRVirtualizer>)getVirtualizer {
  return virtualizer_;
}

- (void)setVirtualizerWithOrgOssPdfreporterEngineJRVirtualizer:(id<OrgOssPdfreporterEngineJRVirtualizer>)virtualizer {
  self.virtualizer = virtualizer;
}

- (void)setThreadVirtualizer {
  id<OrgOssPdfreporterEngineJRVirtualizer> threadVirtualizer = [OrgOssPdfreporterEngineJRVirtualizationHelper getThreadVirtualizer];
  if (threadVirtualizer != nil) {
    virtualizer_ = threadVirtualizer;
  }
}

- (void)setThreadJasperReportsContext {
  id<OrgOssPdfreporterEngineJasperReportsContext> threadJasperReportsContext = [OrgOssPdfreporterEngineJRVirtualizationHelper getThreadJasperReportsContext];
  if (threadJasperReportsContext != nil) {
    jasperReportsContext_ = threadJasperReportsContext;
  }
  else if (jasperReportsContext_ == nil) {
    jasperReportsContext_ = [OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance];
  }
}

- (void)traverseDeepElementsWithOrgOssPdfreporterEnginePrintElementVisitor:(id<OrgOssPdfreporterEnginePrintElementVisitor>)visitor
                                                    withJavaUtilCollection:(id<JavaUtilCollection>)elements {
  OrgOssPdfreporterEngineUtilDeepPrintElementVisitor *deepVisitor = [[OrgOssPdfreporterEngineUtilDeepPrintElementVisitor alloc] initWithOrgOssPdfreporterEnginePrintElementVisitor:visitor];
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilCollection>) nil_chk(elements)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<OrgOssPdfreporterEngineJRPrintElement> element = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) acceptWithOrgOssPdfreporterEnginePrintElementVisitor:deepVisitor withId:nil];
    }
  }
}

- (id)replaceSerializedObjectWithId:(id)obj {
  id replace = obj;
  if ([obj isKindOfClass:[OrgOssPdfreporterEngineFillJRTemplateElement class]]) {
    OrgOssPdfreporterEngineFillJRTemplateElement *template_ = (OrgOssPdfreporterEngineFillJRTemplateElement *) obj;
    NSString *templateId = [((OrgOssPdfreporterEngineFillJRTemplateElement *) nil_chk(template_)) getId];
    if ([self hasCachedTemplateWithNSString:templateId]) {
      replace = [[OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement alloc] initWithNSString:templateId];
    }
  }
  else if ([obj conformsToProtocol: @protocol(OrgOssPdfreporterEngineRenderable)]) {
    id<OrgOssPdfreporterEngineRenderable> renderer = (id<OrgOssPdfreporterEngineRenderable>) obj;
    if ([self hasCachedRendererWithNSString:[((id<OrgOssPdfreporterEngineRenderable>) nil_chk(renderer)) getId]]) {
      replace = [[OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer alloc] initWithOrgOssPdfreporterEngineRenderable:renderer];
    }
  }
  return replace;
}

- (id)resolveSerializedObjectWithId:(id)obj {
  id resolve = obj;
  if ([obj isKindOfClass:[OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement class]]) {
    OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement *template_ = (OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement *) obj;
    OrgOssPdfreporterEngineFillJRTemplateElement *cachedTemplate = [self getCachedTemplateWithNSString:[((OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement *) nil_chk(template_)) getId]];
    if (cachedTemplate == nil) {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Template %@ not found in virtualization context.", [((OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderTemplateElement *) nil_chk(template_)) getId]]];
    }
    resolve = cachedTemplate;
  }
  else if ([obj isKindOfClass:[OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer class]]) {
    OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer *renderer = (OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer *) obj;
    id<OrgOssPdfreporterEngineRenderable> cachedRenderer = [self getCachedRendererWithNSString:[((OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer *) nil_chk(renderer)) getId]];
    if (cachedRenderer == nil) {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Renderer %@ not found in virtualization context.", [((OrgOssPdfreporterEngineBaseJRVirtualPrintPage_JRIdHolderRenderer *) nil_chk(renderer)) getId]]];
    }
    resolve = cachedRenderer;
  }
  return resolve;
}

- (void)lock {
}

- (BOOL)tryLock {
  return YES;
}

- (void)unlock {
}

- (void)dispose {
  disposed_ = YES;
}

- (BOOL)isDisposed {
  return disposed_;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRVirtualizationContext class]) {
    OrgOssPdfreporterEngineFillJRVirtualizationContext_contexts_ = [[OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap alloc] initWithInt:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK withInt:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRVirtualizationContext *typedCopy = (OrgOssPdfreporterEngineFillJRVirtualizationContext *) copy;
  typedCopy.virtualizer = virtualizer_;
  typedCopy.jasperReportsContext = jasperReportsContext_;
  typedCopy.cachedRenderers = cachedRenderers_;
  typedCopy.cachedTemplates = cachedTemplates_;
  typedCopy.readOnly = readOnly_;
  typedCopy.disposed = disposed_;
  typedCopy.pageElementSize = pageElementSize_;
  typedCopy.listeners = listeners_;
  typedCopy.cacheTemplateVisitor = cacheTemplateVisitor_;
}

@end
@implementation OrgOssPdfreporterEngineFillJRVirtualizationContext_CacheTemplateVisitor

@synthesize this$0 = this$0_;

- (id)initWithOrgOssPdfreporterEngineFillJRVirtualizationContext:(OrgOssPdfreporterEngineFillJRVirtualizationContext *)outer$ {
  if ((self = [super initWithBOOL:YES])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)visitElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withId:(id)arg {
  if ([(id) element isKindOfClass:[OrgOssPdfreporterEngineFillJRTemplatePrintElement class]]) {
    OrgOssPdfreporterEngineFillJRTemplatePrintElement *templateElement = (OrgOssPdfreporterEngineFillJRTemplatePrintElement *) element;
    OrgOssPdfreporterEngineFillJRTemplateElement *template_ = [((OrgOssPdfreporterEngineFillJRTemplatePrintElement *) nil_chk(templateElement)) getTemplate];
    if (template_ != nil) {
      [this$0_ cacheTemplateWithOrgOssPdfreporterEngineFillJRTemplateElement:template_];
    }
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRVirtualizationContext_CacheTemplateVisitor *typedCopy = (OrgOssPdfreporterEngineFillJRVirtualizationContext_CacheTemplateVisitor *) copy;
  typedCopy.this$0 = this$0_;
}

@end
