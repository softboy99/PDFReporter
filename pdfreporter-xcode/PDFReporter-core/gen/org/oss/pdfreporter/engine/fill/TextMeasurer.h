//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/TextMeasurer.java
//
//  Created by kendra on 9/27/13.
//

#ifndef _OrgOssPdfreporterEngineFillTextMeasurer_H_
#define _OrgOssPdfreporterEngineFillTextMeasurer_H_

@class IOSBooleanArray;
@class IOSIntArray;
@class IOSObjectArray;
@class IOSShortArray;
@class JavaUtilArrayList;
@class JavaUtilLoggingLogger;
@class OrgOssPdfreporterEngineFillComplexTextLineWrapper;
@class OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState;
@class OrgOssPdfreporterEngineUtilJRStyledText;
@protocol JavaUtilList;
@protocol OrgOssPdfreporterEngineFillTextLine;
@protocol OrgOssPdfreporterEngineFillTextLineWrapper;
@protocol OrgOssPdfreporterEngineJRCommonText;
@protocol OrgOssPdfreporterEngineJRParagraph;
@protocol OrgOssPdfreporterEngineJRPropertiesHolder;
@protocol OrgOssPdfreporterEngineJasperReportsContext;

#import "JreEmulation.h"
#include "org/oss/pdfreporter/engine/fill/JRMeasuredText.h"
#include "org/oss/pdfreporter/engine/fill/JRTextMeasurer.h"
#include "org/oss/pdfreporter/engine/fill/TextMeasureContext.h"

@interface OrgOssPdfreporterEngineFillTextMeasurer : NSObject < OrgOssPdfreporterEngineFillJRTextMeasurer > {
 @public
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
  id<OrgOssPdfreporterEngineJRCommonText> textElement_;
  id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder_;
  OrgOssPdfreporterEngineFillComplexTextLineWrapper *complextLineWrapper_;
  int width_;
  int height_;
  int topPadding_;
  int leftPadding_;
  int bottomPadding_;
  int rightPadding_;
  id<OrgOssPdfreporterEngineJRParagraph> jrParagraph_;
  float formatWidth_;
  int maxHeight_;
  BOOL canOverflow_;
  BOOL ignoreMissingFont_;
  OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState *measuredState_;
  OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState *prevMeasuredState_;
}

@property (nonatomic, strong) id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRCommonText> textElement;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder;
@property (nonatomic, strong) OrgOssPdfreporterEngineFillComplexTextLineWrapper *complextLineWrapper;
@property (nonatomic, assign) int width;
@property (nonatomic, assign) int height;
@property (nonatomic, assign) int topPadding;
@property (nonatomic, assign) int leftPadding;
@property (nonatomic, assign) int bottomPadding;
@property (nonatomic, assign) int rightPadding;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRParagraph> jrParagraph;
@property (nonatomic, assign) float formatWidth;
@property (nonatomic, assign) int maxHeight;
@property (nonatomic, assign) BOOL canOverflow;
@property (nonatomic, assign) BOOL ignoreMissingFont;
@property (nonatomic, strong) OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState *measuredState;
@property (nonatomic, strong) OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState *prevMeasuredState;

+ (JavaUtilLoggingLogger *)logger;
+ (NSString *)PROPERTY_MEASURE_SIMPLE_TEXTS;
- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                  withOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)textElement;
- (id)initWithOrgOssPdfreporterEngineJRCommonText:(id<OrgOssPdfreporterEngineJRCommonText>)textElement;
- (void)initialize__WithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText
                                                        withInt:(int)remainingTextStart
                                                        withInt:(int)availableStretchHeight
                                                       withBOOL:(BOOL)canOverflow OBJC_METHOD_FAMILY_NONE;
- (id<OrgOssPdfreporterEngineFillJRMeasuredText>)measureWithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText
                                                                                            withInt:(int)remainingTextStart
                                                                                            withInt:(int)availableStretchHeight
                                                                                           withBOOL:(BOOL)canOverflow;
- (BOOL)hasParagraphIndents;
- (BOOL)renderParagraphWithOrgOssPdfreporterEngineFillTextLineWrapper:(id<OrgOssPdfreporterEngineFillTextLineWrapper>)lineWrapper
                                                              withInt:(int)lastParagraphStart
                                                         withNSString:(NSString *)lastParagraphText;
- (BOOL)renderNextLineWithOrgOssPdfreporterEngineFillTextLineWrapper:(id<OrgOssPdfreporterEngineFillTextLineWrapper>)lineWrapper
                                                    withJavaUtilList:(id<JavaUtilList>)tabIndexes
                                                        withIntArray:(IOSIntArray *)currentTabHolder
                             withOrgOssPdfreporterEngineTabStopArray:(IOSObjectArray *)nextTabStopHolder
                                                    withBooleanArray:(IOSBooleanArray *)requireNextWordHolder;
- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getTextPropertiesHolder;
@end

@interface OrgOssPdfreporterEngineFillTabSegment : NSObject {
 @public
  id<OrgOssPdfreporterEngineFillTextLine> textLine_;
  float leftX_;
  float rightX_;
}

@property (nonatomic, strong) id<OrgOssPdfreporterEngineFillTextLine> textLine;
@property (nonatomic, assign) float leftX;
@property (nonatomic, assign) float rightX;

- (id)init;
@end

@interface OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState : NSObject < OrgOssPdfreporterEngineFillJRMeasuredText, NSCopying > {
 @public
  BOOL saveLineBreakOffsets_;
  int textOffset_;
  int lines_;
  int fontSizeSum_;
  int firstLineMaxFontSize_;
  int paragraphStartLine_;
  float textHeight_;
  float firstLineLeading_;
  BOOL isLeftToRight__;
  NSString *textSuffix_;
  int lastOffset_;
  JavaUtilArrayList *lineBreakOffsets_;
}

@property (nonatomic, assign) BOOL saveLineBreakOffsets;
@property (nonatomic, assign) int textOffset;
@property (nonatomic, assign) int lines;
@property (nonatomic, assign) int fontSizeSum;
@property (nonatomic, assign) int firstLineMaxFontSize;
@property (nonatomic, assign) int paragraphStartLine;
@property (nonatomic, assign) float textHeight;
@property (nonatomic, assign) float firstLineLeading;
@property (nonatomic, assign) BOOL isLeftToRight_;
@property (nonatomic, copy) NSString *textSuffix;
@property (nonatomic, assign) int lastOffset;
@property (nonatomic, strong) JavaUtilArrayList *lineBreakOffsets;

- (id)initWithBOOL:(BOOL)saveLineBreakOffsets;
- (BOOL)isLeftToRight;
- (int)getTextOffset;
- (float)getTextHeight;
- (float)getLineSpacingFactor;
- (float)getLeadingOffset;
- (NSString *)getTextSuffix;
- (OrgOssPdfreporterEngineFillTextMeasurer_TextMeasuredState *)cloneState;
- (void)addLineBreak;
- (IOSShortArray *)getLineBreakOffsets;
- (id)copyWithZone:(NSZone *)zone;
@end

@interface OrgOssPdfreporterEngineFillTextMeasurer_Context : NSObject < OrgOssPdfreporterEngineFillTextMeasureContext > {
 @public
  OrgOssPdfreporterEngineFillTextMeasurer *this$0_;
}

@property (nonatomic, strong) OrgOssPdfreporterEngineFillTextMeasurer *this$0;

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext;
- (id<OrgOssPdfreporterEngineJRCommonText>)getElement;
- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getPropertiesHolder;
- (BOOL)isIgnoreMissingFont;
- (id)initWithOrgOssPdfreporterEngineFillTextMeasurer:(OrgOssPdfreporterEngineFillTextMeasurer *)outer$;
@end

#endif // _OrgOssPdfreporterEngineFillTextMeasurer_H_
