//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/TextLayoutLine.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/engine/fill/TextLayoutLine.h"
#include "org/oss/pdfreporter/font/text/ITextLayout.h"

@implementation OrgOssPdfreporterEngineFillTextLayoutLine

@synthesize textLayout = textLayout_;

- (id)initWithOrgOssPdfreporterFontTextITextLayout:(id<OrgOssPdfreporterFontTextITextLayout>)textLayout {
  if ((self = [super init])) {
    self.textLayout = textLayout;
  }
  return self;
}

- (float)getAscent {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getAscent];
}

- (float)getDescent {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getDescent];
}

- (float)getLeading {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getLeading];
}

- (int)getCharacterCount {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getCharacterCount];
}

- (BOOL)isLeftToRight {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) isLeftToRight];
}

- (float)getAdvance {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getAdvance];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillTextLayoutLine *typedCopy = (OrgOssPdfreporterEngineFillTextLayoutLine *) copy;
  typedCopy.textLayout = textLayout_;
}

@end
