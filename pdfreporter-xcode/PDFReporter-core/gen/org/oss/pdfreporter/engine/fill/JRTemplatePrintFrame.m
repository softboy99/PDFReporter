//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRTemplatePrintFrame.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/PrintElementVisitor.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateFrame.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintFrame.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineFillJRTemplatePrintFrame

@synthesize elements = elements_;

- (id)initWithOrgOssPdfreporterEngineFillJRTemplateFrame:(OrgOssPdfreporterEngineFillJRTemplateFrame *)templateFrame {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRTemplateElement:templateFrame])) {
    elements_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineFillJRTemplateFrame:(OrgOssPdfreporterEngineFillJRTemplateFrame *)templateFrame
                                                 withInt:(int)sourceElementId {
  if ((self = [super initWithOrgOssPdfreporterEngineFillJRTemplateElement:templateFrame withInt:sourceElementId])) {
    elements_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (id<JavaUtilList>)getElements {
  return elements_;
}

- (void)addElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element {
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:element];
}

- (void)addElementsWithJavaUtilCollection:(id<JavaUtilCollection>)elements {
  [((id<JavaUtilList>) nil_chk(self.elements)) addAllWithJavaUtilCollection:elements];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return [((OrgOssPdfreporterEngineFillJRTemplateFrame *) template__) getLineBox];
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (void)acceptWithOrgOssPdfreporterEnginePrintElementVisitor:(id<OrgOssPdfreporterEnginePrintElementVisitor>)visitor
                                                      withId:(id)arg {
  [((id<OrgOssPdfreporterEnginePrintElementVisitor>) nil_chk(visitor)) visitWithOrgOssPdfreporterEngineJRPrintFrame:self withId:arg];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRTemplatePrintFrame *typedCopy = (OrgOssPdfreporterEngineFillJRTemplatePrintFrame *) copy;
  typedCopy.elements = elements_;
}

@end
