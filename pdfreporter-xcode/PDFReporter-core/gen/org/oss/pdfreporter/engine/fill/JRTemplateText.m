//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRTemplateText.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRFont.h"
#include "org/oss/pdfreporter/engine/JRHyperlinkHelper.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRStaticText.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRTextElement.h"
#include "org/oss/pdfreporter/engine/JRTextField.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBaseParagraph.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateText.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTargetEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterEngineFillJRTemplateText

@synthesize horizontalAlignmentValue = horizontalAlignmentValue_;
@synthesize verticalAlignmentValue = verticalAlignmentValue_;
@synthesize rotationValue = rotationValue_;
@synthesize markup = markup_;
@synthesize linkType = linkType_;
@synthesize linkTarget = linkTarget_;
@synthesize lineBox = lineBox_;
@synthesize paragraph = paragraph_;
@synthesize fontName = fontName_;
@synthesize isBold_ = isBold__;
@synthesize isItalic_ = isItalic__;
@synthesize isUnderline_ = isUnderline__;
@synthesize isStrikeThrough_ = isStrikeThrough__;
@synthesize fontSize = fontSize_;
@synthesize pdfFontName = pdfFontName_;
@synthesize pdfEncoding = pdfEncoding_;
@synthesize isPdfEmbedded_ = isPdfEmbedded__;
@synthesize valueClassName = valueClassName_;
@synthesize pattern = pattern_;
@synthesize formatFactoryClass = formatFactoryClass_;
@synthesize localeCode = localeCode_;
@synthesize timeZoneId = timeZoneId_;
@synthesize PSEUDO_SERIAL_VERSION_UID_JRTemplateText = PSEUDO_SERIAL_VERSION_UID_JRTemplateText_;
@synthesize horizontalAlignment = horizontalAlignment_;
@synthesize verticalAlignment = verticalAlignment_;
@synthesize rotation = rotation_;
@synthesize lineSpacing = lineSpacing_;
@synthesize lineSpacingValue = lineSpacingValue_;
@synthesize border = border_;
@synthesize topBorder = topBorder_;
@synthesize leftBorder = leftBorder_;
@synthesize bottomBorder = bottomBorder_;
@synthesize rightBorder = rightBorder_;
@synthesize borderColor = borderColor_;
@synthesize topBorderColor = topBorderColor_;
@synthesize leftBorderColor = leftBorderColor_;
@synthesize bottomBorderColor = bottomBorderColor_;
@synthesize rightBorderColor = rightBorderColor_;
@synthesize padding = padding_;
@synthesize topPadding = topPadding_;
@synthesize leftPadding = leftPadding_;
@synthesize bottomPadding = bottomPadding_;
@synthesize rightPadding = rightPadding_;
@synthesize isStyledText = isStyledText_;
@synthesize hyperlinkType = hyperlinkType_;
@synthesize hyperlinkTarget = hyperlinkTarget_;

- (id)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider
      withOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  if ((self = [super initWithOrgOssPdfreporterEngineJROrigin:origin withOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
    [self setStaticTextWithOrgOssPdfreporterEngineJRStaticText:staticText];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider
       withOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  if ((self = [super initWithOrgOssPdfreporterEngineJROrigin:origin withOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
    [self setTextFieldWithOrgOssPdfreporterEngineJRTextField:textField];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  if ((self = [super initWithOrgOssPdfreporterEngineJROrigin:origin withOrgOssPdfreporterEngineJRDefaultStyleProvider:defaultStyleProvider])) {
    PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
    lineBox_ = [[OrgOssPdfreporterEngineBaseJRBaseLineBox alloc] initWithOrgOssPdfreporterEngineJRBoxContainer:self];
    paragraph_ = [[OrgOssPdfreporterEngineBaseJRBaseParagraph alloc] initWithOrgOssPdfreporterEngineJRParagraphContainer:self];
  }
  return self;
}

- (void)setStaticTextWithOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  [self setTextElementWithOrgOssPdfreporterEngineJRTextElement:staticText];
}

- (void)setTextFieldWithOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  [self setTextElementWithOrgOssPdfreporterEngineJRTextElement:textField];
  [self setLinkTypeWithNSString:[((id<OrgOssPdfreporterEngineJRTextField>) nil_chk(textField)) getLinkType]];
  [self setLinkTargetWithNSString:[((id<OrgOssPdfreporterEngineJRTextField>) nil_chk(textField)) getLinkTarget]];
}

- (void)setTextElementWithOrgOssPdfreporterEngineJRTextElement:(id<OrgOssPdfreporterEngineJRTextElement>)textElement {
  [super setElementWithOrgOssPdfreporterEngineJRElement:textElement];
  [self copyLineBoxWithOrgOssPdfreporterEngineJRLineBox:[((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getLineBox]];
  [self copyParagraphWithOrgOssPdfreporterEngineJRParagraph:[((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getParagraph]];
  fontName_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnFontName];
  isBold__ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) isOwnBold];
  isItalic__ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) isOwnItalic];
  isUnderline__ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) isOwnUnderline];
  isStrikeThrough__ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) isOwnStrikeThrough];
  fontSize_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnFontSize];
  pdfFontName_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnPdfFontName];
  pdfEncoding_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnPdfEncoding];
  isPdfEmbedded__ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) isOwnPdfEmbedded];
  horizontalAlignmentValue_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnHorizontalAlignmentValue];
  verticalAlignmentValue_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnVerticalAlignmentValue];
  rotationValue_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnRotationValue];
  markup_ = [((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getOwnMarkup];
}

- (void)copyLineBoxWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)box OBJC_METHOD_FAMILY_NONE {
  lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
}

- (void)copyParagraphWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)prg OBJC_METHOD_FAMILY_NONE {
  paragraph_ = [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(prg)) cloneWithOrgOssPdfreporterEngineJRParagraphContainer:self];
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getModeWithOrgOssPdfreporterEngineJRCommonElement:self withOrgOssPdfreporterEngineTypeModeEnumEnum:[OrgOssPdfreporterEngineTypeModeEnumEnum TRANSPARENT]];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getHorizontalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getHorizontalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment:self];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getOwnHorizontalAlignmentValue {
  return horizontalAlignmentValue_;
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)horizontalAlignmentValue {
  self.horizontalAlignmentValue = horizontalAlignmentValue;
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getVerticalAlignmentValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getVerticalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment:self];
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getOwnVerticalAlignmentValue {
  return verticalAlignmentValue_;
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnumEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)verticalAlignmentValue {
  self.verticalAlignmentValue = verticalAlignmentValue;
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getRotationValue {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getRotationValueWithOrgOssPdfreporterEngineJRCommonText:self];
}

- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getOwnRotationValue {
  return self.rotationValue;
}

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnumEnum:(OrgOssPdfreporterEngineTypeRotationEnumEnum *)rotationValue {
  self.rotationValue = rotationValue;
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getLineSpacing];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getOwnLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getOwnLineSpacing];
}

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)lineSpacing {
  [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:lineSpacing];
}

- (NSString *)getMarkup {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getMarkupWithOrgOssPdfreporterEngineJRCommonText:self];
}

- (NSString *)getOwnMarkup {
  return markup_;
}

- (void)setMarkupWithNSString:(NSString *)markup {
  self.markup = markup;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph {
  return paragraph_;
}

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  return self;
}

- (OrgOssPdfreporterEngineTypeHyperlinkTypeEnumEnum *)getHyperlinkTypeValue {
  return [OrgOssPdfreporterEngineJRHyperlinkHelper getHyperlinkTypeValueWithNSString:[self getLinkType]];
}

- (char)getHyperlinkTarget {
  return [((OrgOssPdfreporterEngineTypeHyperlinkTargetEnumEnum *) nil_chk([self getHyperlinkTargetValue])) getValue];
}

- (OrgOssPdfreporterEngineTypeHyperlinkTargetEnumEnum *)getHyperlinkTargetValue {
  return [OrgOssPdfreporterEngineJRHyperlinkHelper getHyperlinkTargetValueWithNSString:[self getLinkTarget]];
}

- (NSString *)getFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontNameWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnFontName {
  return fontName_;
}

- (void)setFontNameWithNSString:(NSString *)fontName {
  self.fontName = fontName;
}

- (BOOL)isBold {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isBoldWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnBold {
  return isBold__;
}

- (void)setBoldWithBOOL:(BOOL)isBold {
  [self setBoldWithJavaLangBoolean:isBold ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold {
  self.isBold_ = isBold;
}

- (BOOL)isItalic {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isItalicWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnItalic {
  return isItalic__;
}

- (void)setItalicWithBOOL:(BOOL)isItalic {
  [self setItalicWithJavaLangBoolean:isItalic ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic {
  self.isItalic_ = isItalic;
}

- (BOOL)isUnderline {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isUnderlineWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnUnderline {
  return isUnderline__;
}

- (void)setUnderlineWithBOOL:(BOOL)isUnderline {
  [self setUnderlineWithJavaLangBoolean:isUnderline ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline {
  self.isUnderline_ = isUnderline;
}

- (BOOL)isStrikeThrough {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isStrikeThroughWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnStrikeThrough {
  return isStrikeThrough__;
}

- (void)setStrikeThroughWithBOOL:(BOOL)isStrikeThrough {
  [self setStrikeThroughWithJavaLangBoolean:isStrikeThrough ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough {
  self.isStrikeThrough_ = isStrikeThrough;
}

- (int)getFontSize {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getFontSizeWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangInteger *)getOwnFontSize {
  return fontSize_;
}

- (void)setFontSizeWithInt:(int)fontSize {
  [self setFontSizeWithJavaLangInteger:[JavaLangInteger valueOfWithInt:fontSize]];
}

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)fontSize {
  self.fontSize = fontSize;
}

- (NSString *)getPdfFontName {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfFontNameWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnPdfFontName {
  return pdfFontName_;
}

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName {
  self.pdfFontName = pdfFontName;
}

- (NSString *)getPdfEncoding {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver getPdfEncodingWithOrgOssPdfreporterEngineJRFont:self];
}

- (NSString *)getOwnPdfEncoding {
  return pdfEncoding_;
}

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding {
  self.pdfEncoding = pdfEncoding;
}

- (BOOL)isPdfEmbedded {
  return [OrgOssPdfreporterEngineUtilJRStyleResolver isPdfEmbeddedWithOrgOssPdfreporterEngineJRFont:self];
}

- (JavaLangBoolean *)isOwnPdfEmbedded {
  return isPdfEmbedded__;
}

- (void)setPdfEmbeddedWithBOOL:(BOOL)isPdfEmbedded {
  [self setPdfEmbeddedWithJavaLangBoolean:isPdfEmbedded ? [JavaLangBoolean getTRUE] : [JavaLangBoolean getFALSE]];
}

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded {
  self.isPdfEmbedded_ = isPdfEmbedded;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return parentStyle_;
}

- (NSString *)getPattern {
  return pattern_;
}

- (void)setPatternWithNSString:(NSString *)pattern {
  self.pattern = pattern;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (void)setValueClassNameWithNSString:(NSString *)valueClassName {
  self.valueClassName = valueClassName;
}

- (NSString *)getFormatFactoryClass {
  return formatFactoryClass_;
}

- (void)setFormatFactoryClassWithNSString:(NSString *)formatFactoryClass {
  self.formatFactoryClass = formatFactoryClass;
}

- (NSString *)getLocaleCode {
  return localeCode_;
}

- (void)setLocaleCodeWithNSString:(NSString *)localeCode {
  self.localeCode = localeCode;
}

- (NSString *)getTimeZoneId {
  return timeZoneId_;
}

- (void)setTimeZoneIdWithNSString:(NSString *)timeZoneId {
  self.timeZoneId = timeZoneId;
}

- (NSString *)getLinkType {
  return linkType_;
}

- (void)setLinkTypeWithNSString:(NSString *)linkType {
  self.linkType = linkType;
}

- (void)setLinkTargetWithNSString:(NSString *)linkTarget {
  self.linkTarget = linkTarget;
}

- (NSString *)getLinkTarget {
  return linkTarget_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (int)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = [OrgOssPdfreporterEngineUtilObjectUtils hash__];
  [self addTemplateHashWithOrgOssPdfreporterEngineUtilObjectUtils_HashCode:hash_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:horizontalAlignmentValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:verticalAlignmentValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:rotationValue_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:markup_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:linkType_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:linkTarget_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:lineBox_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addIdenticalWithId:paragraph_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:fontName_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isBold__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isItalic__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isUnderline__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isStrikeThrough__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:fontSize_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pdfFontName_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pdfEncoding_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:isPdfEmbedded__];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:valueClassName_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:pattern_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:formatFactoryClass_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:localeCode_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:timeZoneId_];
  return [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) getHashCode];
}

- (BOOL)isIdenticalWithId:(id)object {
  if (self == object) {
    return YES;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineFillJRTemplateText class]])) {
    return NO;
  }
  OrgOssPdfreporterEngineFillJRTemplateText *template_ = (OrgOssPdfreporterEngineFillJRTemplateText *) object;
  return [self templateIdenticalWithOrgOssPdfreporterEngineFillJRTemplateElement:template_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:horizontalAlignmentValue_ withJavaLangEnum:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).horizontalAlignmentValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:verticalAlignmentValue_ withJavaLangEnum:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).verticalAlignmentValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithJavaLangEnum:rotationValue_ withJavaLangEnum:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).rotationValue] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:markup_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).markup] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:linkType_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).linkType] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:linkTarget_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).linkTarget] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:lineBox_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).lineBox] && [OrgOssPdfreporterEngineUtilObjectUtils identicalWithId:paragraph_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).paragraph] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:fontName_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).fontName] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isBold__ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).isBold_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isItalic__ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).isItalic_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isUnderline__ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).isUnderline_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isStrikeThrough__ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).isStrikeThrough_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:fontSize_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).fontSize] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pdfFontName_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).pdfFontName] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pdfEncoding_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).pdfEncoding] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:isPdfEmbedded__ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).isPdfEmbedded_] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:valueClassName_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).valueClassName] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:pattern_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).pattern] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:formatFactoryClass_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).formatFactoryClass] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:localeCode_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).localeCode] && [OrgOssPdfreporterEngineUtilObjectUtils equalsWithId:timeZoneId_ withId:((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_)).timeZoneId];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRTemplateText *typedCopy = (OrgOssPdfreporterEngineFillJRTemplateText *) copy;
  typedCopy.horizontalAlignmentValue = horizontalAlignmentValue_;
  typedCopy.verticalAlignmentValue = verticalAlignmentValue_;
  typedCopy.rotationValue = rotationValue_;
  typedCopy.markup = markup_;
  typedCopy.linkType = linkType_;
  typedCopy.linkTarget = linkTarget_;
  typedCopy.lineBox = lineBox_;
  typedCopy.paragraph = paragraph_;
  typedCopy.fontName = fontName_;
  typedCopy.isBold_ = isBold__;
  typedCopy.isItalic_ = isItalic__;
  typedCopy.isUnderline_ = isUnderline__;
  typedCopy.isStrikeThrough_ = isStrikeThrough__;
  typedCopy.fontSize = fontSize_;
  typedCopy.pdfFontName = pdfFontName_;
  typedCopy.pdfEncoding = pdfEncoding_;
  typedCopy.isPdfEmbedded_ = isPdfEmbedded__;
  typedCopy.valueClassName = valueClassName_;
  typedCopy.pattern = pattern_;
  typedCopy.formatFactoryClass = formatFactoryClass_;
  typedCopy.localeCode = localeCode_;
  typedCopy.timeZoneId = timeZoneId_;
  typedCopy.PSEUDO_SERIAL_VERSION_UID_JRTemplateText = PSEUDO_SERIAL_VERSION_UID_JRTemplateText_;
  typedCopy.horizontalAlignment = horizontalAlignment_;
  typedCopy.verticalAlignment = verticalAlignment_;
  typedCopy.rotation = rotation_;
  typedCopy.lineSpacing = lineSpacing_;
  typedCopy.lineSpacingValue = lineSpacingValue_;
  typedCopy.border = border_;
  typedCopy.topBorder = topBorder_;
  typedCopy.leftBorder = leftBorder_;
  typedCopy.bottomBorder = bottomBorder_;
  typedCopy.rightBorder = rightBorder_;
  typedCopy.borderColor = borderColor_;
  typedCopy.topBorderColor = topBorderColor_;
  typedCopy.leftBorderColor = leftBorderColor_;
  typedCopy.bottomBorderColor = bottomBorderColor_;
  typedCopy.rightBorderColor = rightBorderColor_;
  typedCopy.padding = padding_;
  typedCopy.topPadding = topPadding_;
  typedCopy.leftPadding = leftPadding_;
  typedCopy.bottomPadding = bottomPadding_;
  typedCopy.rightPadding = rightPadding_;
  typedCopy.isStyledText = isStyledText_;
  typedCopy.hyperlinkType = hyperlinkType_;
  typedCopy.hyperlinkTarget = hyperlinkTarget_;
}

@end
