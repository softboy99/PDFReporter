//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillTextElement.java
//
//  Created by kendra on 9/27/13.
//

#ifndef _OrgOssPdfreporterEngineFillJRFillTextElement_H_
#define _OrgOssPdfreporterEngineFillJRFillTextElement_H_

@class IOSShortArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgOssPdfreporterEngineFillJRBaseFiller;
@class OrgOssPdfreporterEngineFillJRFillCloneFactory;
@class OrgOssPdfreporterEngineFillJRFillObjectFactory;
@class OrgOssPdfreporterEngineJRExpressionCollector;
@class OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum;
@class OrgOssPdfreporterEngineTypeLineSpacingEnumEnum;
@class OrgOssPdfreporterEngineTypeModeEnumEnum;
@class OrgOssPdfreporterEngineTypeRotationEnumEnum;
@class OrgOssPdfreporterEngineTypeRunDirectionEnumEnum;
@class OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum;
@class OrgOssPdfreporterEngineUtilJRSingletonCache;
@class OrgOssPdfreporterEngineUtilJRStyledText;
@protocol JavaUtilMap;
@protocol OrgOssPdfreporterEngineFillJRTextMeasurer;
@protocol OrgOssPdfreporterEngineJRFont;
@protocol OrgOssPdfreporterEngineJRLineBox;
@protocol OrgOssPdfreporterEngineJRParagraph;
@protocol OrgOssPdfreporterEngineJRPrintText;
@protocol OrgOssPdfreporterEngineJRVisitor;
@protocol OrgOssPdfreporterEngineUtilMarkupProcessor;
@protocol OrgOssPdfreporterGeometryIColor;

#import "JreEmulation.h"
#include "org/oss/pdfreporter/engine/JRTextElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"

@interface OrgOssPdfreporterEngineFillJRFillTextElement : OrgOssPdfreporterEngineFillJRFillElement < OrgOssPdfreporterEngineJRTextElement > {
 @public
  BOOL isLeftToRight_;
  id<OrgOssPdfreporterEngineFillJRTextMeasurer> textMeasurer_;
  float lineSpacingFactor_;
  float leadingOffset_;
  float textHeight_;
  int elementStretchHeightDelta_;
  int textStart_;
  int textEnd_;
  IOSShortArray *lineBreakOffsets_;
  NSString *textTruncateSuffix_;
  NSString *rawText_;
  OrgOssPdfreporterEngineUtilJRStyledText *styledText_;
  id<JavaUtilMap> styledTextAttributesMap_;
  id<OrgOssPdfreporterEngineJRLineBox> initLineBox_;
  id<OrgOssPdfreporterEngineJRParagraph> initParagraph_;
  BOOL consumeSpaceOnOverflow_;
  id<OrgOssPdfreporterEngineJRLineBox> lineBox_;
  id<OrgOssPdfreporterEngineJRParagraph> paragraph_;
}

@property (nonatomic, assign) BOOL isLeftToRight;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineFillJRTextMeasurer> textMeasurer;
@property (nonatomic, assign) float lineSpacingFactor;
@property (nonatomic, assign) float leadingOffset;
@property (nonatomic, assign) float textHeight;
@property (nonatomic, assign) int elementStretchHeightDelta;
@property (nonatomic, assign) int textStart;
@property (nonatomic, assign) int textEnd;
@property (nonatomic, strong) IOSShortArray *lineBreakOffsets;
@property (nonatomic, copy) NSString *textTruncateSuffix;
@property (nonatomic, copy) NSString *rawText;
@property (nonatomic, strong) OrgOssPdfreporterEngineUtilJRStyledText *styledText;
@property (nonatomic, strong) id<JavaUtilMap> styledTextAttributesMap;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRLineBox> initLineBox;
- (id<OrgOssPdfreporterEngineJRLineBox>)initLineBox OBJC_METHOD_FAMILY_NONE;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRParagraph> initParagraph;
- (id<OrgOssPdfreporterEngineJRParagraph>)initParagraph OBJC_METHOD_FAMILY_NONE;
@property (nonatomic, assign) BOOL consumeSpaceOnOverflow;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRLineBox> lineBox;
@property (nonatomic, strong) id<OrgOssPdfreporterEngineJRParagraph> paragraph;

+ (NSString *)PROPERTY_CONSUME_SPACE_ON_OVERFLOW;
+ (OrgOssPdfreporterEngineUtilJRSingletonCache *)markupProcessorFactoryCache;
+ (id<JavaUtilMap>)markupProcessors;
- (id)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
             withOrgOssPdfreporterEngineJRTextElement:(id<OrgOssPdfreporterEngineJRTextElement>)textElement
   withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory;
- (id)initWithOrgOssPdfreporterEngineFillJRFillTextElement:(OrgOssPdfreporterEngineFillJRFillTextElement *)textElement
         withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory;
- (void)createTextMeasurer;
- (void)ensureTextMeasurer;
- (void)evaluateStyleWithChar:(char)evaluation;
- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue;
- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getHorizontalAlignmentValue;
- (OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)getOwnHorizontalAlignmentValue;
- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnumEnum *)horizontalAlignment;
- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getVerticalAlignmentValue;
- (OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)getOwnVerticalAlignmentValue;
- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnumEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnumEnum *)verticalAlignment;
- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getRotationValue;
- (OrgOssPdfreporterEngineTypeRotationEnumEnum *)getOwnRotationValue;
- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnumEnum:(OrgOssPdfreporterEngineTypeRotationEnumEnum *)rotation;
- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getLineSpacingValue;
- (OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)getOwnLineSpacingValue;
- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnumEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnumEnum *)lineSpacing;
- (NSString *)getMarkup;
- (NSString *)getOwnMarkup;
- (void)setMarkupWithNSString:(NSString *)markup;
- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox;
- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph;
- (id<OrgOssPdfreporterEngineJRFont>)getFont;
- (id<JavaUtilMap>)getStyledTextAttributes;
- (float)getLineSpacingFactor;
- (void)setLineSpacingFactorWithFloat:(float)lineSpacingFactor;
- (float)getLeadingOffset;
- (void)setLeadingOffsetWithFloat:(float)leadingOffset;
- (OrgOssPdfreporterEngineTypeRunDirectionEnumEnum *)getRunDirectionValue;
- (float)getTextHeight;
- (void)setTextHeightWithFloat:(float)textHeight;
- (int)getTextStart;
- (void)setTextStartWithInt:(int)textStart;
- (int)getTextEnd;
- (void)setTextEndWithInt:(int)textEnd;
- (IOSShortArray *)getLineBreakOffsets;
- (void)setLineBreakOffsetsWithShortArray:(IOSShortArray *)lineBreakOffsets;
- (void)resetTextChunk;
- (NSString *)getRawText;
- (void)setRawTextWithNSString:(NSString *)rawText;
- (void)reset;
- (void)rewind;
- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledText;
- (NSString *)getText;
- (void)chopTextElementWithInt:(int)availableStretchHeight;
- (int)getPrintElementHeight;
- (BOOL)canOverflow;
- (NSString *)getFontName;
- (NSString *)getOwnFontName;
- (void)setFontNameWithNSString:(NSString *)fontName;
- (BOOL)isBold;
- (JavaLangBoolean *)isOwnBold;
- (void)setBoldWithBOOL:(BOOL)isBold;
- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold;
- (BOOL)isItalic;
- (JavaLangBoolean *)isOwnItalic;
- (void)setItalicWithBOOL:(BOOL)isItalic;
- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic;
- (BOOL)isUnderline;
- (JavaLangBoolean *)isOwnUnderline;
- (void)setUnderlineWithBOOL:(BOOL)isUnderline;
- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline;
- (BOOL)isStrikeThrough;
- (JavaLangBoolean *)isOwnStrikeThrough;
- (void)setStrikeThroughWithBOOL:(BOOL)isStrikeThrough;
- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough;
- (int)getFontSize;
- (JavaLangInteger *)getOwnFontSize;
- (void)setFontSizeWithInt:(int)size;
- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)size;
- (NSString *)getPdfFontName;
- (NSString *)getOwnPdfFontName;
- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName;
- (NSString *)getPdfEncoding;
- (NSString *)getOwnPdfEncoding;
- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding;
- (BOOL)isPdfEmbedded;
- (JavaLangBoolean *)isOwnPdfEmbedded;
- (void)setPdfEmbeddedWithBOOL:(BOOL)isPdfEmbedded;
- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded;
- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor;
- (void)setHeightWithInt:(int)height;
- (void)setWidthWithInt:(int)width;
- (NSString *)processMarkupTextWithNSString:(NSString *)text;
- (id<OrgOssPdfreporterEngineUtilMarkupProcessor>)getMarkupProcessorWithNSString:(NSString *)markup;
- (void)setPrintTextWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText;
- (NSString *)getTextTruncateSuffix;
- (void)setTextTruncateSuffixWithNSString:(NSString *)textTruncateSuffix;
- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)param0;
- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)param0;
@end

#endif // _OrgOssPdfreporterEngineFillJRFillTextElement_H_
