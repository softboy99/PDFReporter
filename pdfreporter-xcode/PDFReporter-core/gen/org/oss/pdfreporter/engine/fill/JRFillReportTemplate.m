//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillReportTemplate.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRReportTemplate.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRTemplate.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillReportTemplate.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlTemplateLoader.h"
#include "org/oss/pdfreporter/net/IURL.h"

@implementation OrgOssPdfreporterEngineFillJRFillReportTemplate

@synthesize parent = parent_;
@synthesize filler = filler_;

- (id)initWithOrgOssPdfreporterEngineJRReportTemplate:(id<OrgOssPdfreporterEngineJRReportTemplate>)template_
          withOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
   withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  if ((self = [super init])) {
    [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) putWithId:template_ withId:self];
    parent_ = template_;
    self.filler = filler;
  }
  return self;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getSourceExpression {
  return [((id<OrgOssPdfreporterEngineJRReportTemplate>) nil_chk(parent_)) getSourceExpression];
}

- (id<OrgOssPdfreporterEngineJRTemplate>)evaluate {
  id<OrgOssPdfreporterEngineJRTemplate> template_;
  id<OrgOssPdfreporterEngineJRExpression> sourceExpression = [self getSourceExpression];
  id source = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:sourceExpression withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if (source == nil) {
    template_ = nil;
  }
  else {
    if ([source conformsToProtocol: @protocol(OrgOssPdfreporterEngineJRTemplate)]) {
      template_ = (id<OrgOssPdfreporterEngineJRTemplate>) source;
    }
    else {
      template_ = [OrgOssPdfreporterEngineFillJRFillReportTemplate loadTemplateWithId:source withOrgOssPdfreporterEngineFillJRBaseFiller:filler_];
    }
  }
  return template_;
}

+ (id<OrgOssPdfreporterEngineJRTemplate>)loadTemplateWithId:(id)source
                withOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler {
  id<OrgOssPdfreporterEngineJRTemplate> template_;
  if ([((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)).fillContext)) hasLoadedTemplateWithId:source]) {
    template_ = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)).fillContext)) getLoadedTemplateWithId:source];
  }
  else {
    if ([source isKindOfClass:[NSString class]]) {
      template_ = [((OrgOssPdfreporterEngineXmlJRXmlTemplateLoader *) nil_chk([OrgOssPdfreporterEngineXmlJRXmlTemplateLoader getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) loadTemplateWithNSString:(NSString *) source];
    }
    else if ([source isKindOfClass:[JavaIoFile class]]) {
      template_ = [((OrgOssPdfreporterEngineXmlJRXmlTemplateLoader *) nil_chk([OrgOssPdfreporterEngineXmlJRXmlTemplateLoader getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) loadTemplateWithJavaIoFile:(JavaIoFile *) source];
    }
    else if ([source conformsToProtocol: @protocol(OrgOssPdfreporterNetIURL)]) {
      template_ = [((OrgOssPdfreporterEngineXmlJRXmlTemplateLoader *) nil_chk([OrgOssPdfreporterEngineXmlJRXmlTemplateLoader getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) loadTemplateWithOrgOssPdfreporterNetIURL:(id<OrgOssPdfreporterNetIURL>) source];
    }
    else if ([source isKindOfClass:[JavaIoInputStream class]]) {
      template_ = [((OrgOssPdfreporterEngineXmlJRXmlTemplateLoader *) nil_chk([OrgOssPdfreporterEngineXmlJRXmlTemplateLoader getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getJasperReportsContext]])) loadTemplateWithJavaIoInputStream:(JavaIoInputStream *) source];
    }
    else {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:[NSString stringWithFormat:@"Unknown template source class %@", [[nil_chk(source) getClass] getName]]];
    }
    [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)).fillContext)) registerLoadedTemplateWithId:source withOrgOssPdfreporterEngineJRTemplate:template_];
  }
  return template_;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRFillReportTemplate *typedCopy = (OrgOssPdfreporterEngineFillJRFillReportTemplate *) copy;
  typedCopy.parent = parent_;
  typedCopy.filler = filler_;
}

@end
