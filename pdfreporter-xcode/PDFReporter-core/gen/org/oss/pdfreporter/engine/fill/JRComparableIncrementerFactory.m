//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRComparableIncrementerFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Comparable.h"
#include "org/oss/pdfreporter/engine/fill/AbstractValueProvider.h"
#include "org/oss/pdfreporter/engine/fill/JRCalculable.h"
#include "org/oss/pdfreporter/engine/fill/JRComparableIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRDefaultIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRExtendedIncrementer.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"

@implementation OrgOssPdfreporterEngineFillJRComparableIncrementerFactory

static OrgOssPdfreporterEngineFillJRComparableIncrementerFactory * OrgOssPdfreporterEngineFillJRComparableIncrementerFactory_mainInstance_;

+ (OrgOssPdfreporterEngineFillJRComparableIncrementerFactory *)mainInstance {
  return OrgOssPdfreporterEngineFillJRComparableIncrementerFactory_mainInstance_;
}

+ (void)setMainInstance:(OrgOssPdfreporterEngineFillJRComparableIncrementerFactory *)mainInstance {
  OrgOssPdfreporterEngineFillJRComparableIncrementerFactory_mainInstance_ = mainInstance;
}

- (id)init {
  return [super init];
}

+ (OrgOssPdfreporterEngineFillJRComparableIncrementerFactory *)getInstance {
  return OrgOssPdfreporterEngineFillJRComparableIncrementerFactory_mainInstance_;
}

- (id<OrgOssPdfreporterEngineFillJRExtendedIncrementer>)getExtendedIncrementerWithOrgOssPdfreporterEngineTypeCalculationEnumEnum:(OrgOssPdfreporterEngineTypeCalculationEnumEnum *)calculation {
  id<OrgOssPdfreporterEngineFillJRExtendedIncrementer> incrementer = nil;
  switch ([calculation ordinal]) {
    case OrgOssPdfreporterEngineTypeCalculationEnum_LOWEST:
    {
      incrementer = [OrgOssPdfreporterEngineFillJRComparableLowestIncrementer getInstance];
      break;
    }
    case OrgOssPdfreporterEngineTypeCalculationEnum_HIGHEST:
    {
      incrementer = [OrgOssPdfreporterEngineFillJRComparableHighestIncrementer getInstance];
      break;
    }
    case OrgOssPdfreporterEngineTypeCalculationEnum_SYSTEM:
    case OrgOssPdfreporterEngineTypeCalculationEnum_NOTHING:
    case OrgOssPdfreporterEngineTypeCalculationEnum_COUNT:
    case OrgOssPdfreporterEngineTypeCalculationEnum_SUM:
    case OrgOssPdfreporterEngineTypeCalculationEnum_AVERAGE:
    case OrgOssPdfreporterEngineTypeCalculationEnum_STANDARD_DEVIATION:
    case OrgOssPdfreporterEngineTypeCalculationEnum_VARIANCE:
    case OrgOssPdfreporterEngineTypeCalculationEnum_FIRST:
    case OrgOssPdfreporterEngineTypeCalculationEnum_DISTINCT_COUNT:
    default:
    {
      incrementer = [((OrgOssPdfreporterEngineFillJRDefaultIncrementerFactory *) nil_chk([OrgOssPdfreporterEngineFillJRDefaultIncrementerFactory getInstance])) getExtendedIncrementerWithOrgOssPdfreporterEngineTypeCalculationEnumEnum:calculation];
      break;
    }
  }
  return incrementer;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRComparableIncrementerFactory class]) {
    OrgOssPdfreporterEngineFillJRComparableIncrementerFactory_mainInstance_ = [[OrgOssPdfreporterEngineFillJRComparableIncrementerFactory alloc] init];
  }
}

@end
@implementation OrgOssPdfreporterEngineFillJRComparableLowestIncrementer

static OrgOssPdfreporterEngineFillJRComparableLowestIncrementer * OrgOssPdfreporterEngineFillJRComparableLowestIncrementer_mainInstance_;

+ (OrgOssPdfreporterEngineFillJRComparableLowestIncrementer *)mainInstance {
  return OrgOssPdfreporterEngineFillJRComparableLowestIncrementer_mainInstance_;
}

+ (void)setMainInstance:(OrgOssPdfreporterEngineFillJRComparableLowestIncrementer *)mainInstance {
  OrgOssPdfreporterEngineFillJRComparableLowestIncrementer_mainInstance_ = mainInstance;
}

- (id)init {
  return [super init];
}

+ (OrgOssPdfreporterEngineFillJRComparableLowestIncrementer *)getInstance {
  return OrgOssPdfreporterEngineFillJRComparableLowestIncrementer_mainInstance_;
}

- (id)incrementWithOrgOssPdfreporterEngineFillJRCalculable:(id<OrgOssPdfreporterEngineFillJRCalculable>)variable
                                                    withId:(id)expressionValue
      withOrgOssPdfreporterEngineFillAbstractValueProvider:(OrgOssPdfreporterEngineFillAbstractValueProvider *)valueProvider {
  id<JavaLangComparable> value = (id<JavaLangComparable>) [((id<OrgOssPdfreporterEngineFillJRCalculable>) nil_chk(variable)) getIncrementedValue];
  id<JavaLangComparable> newValue = (id<JavaLangComparable>) expressionValue;
  if (value != nil && ![((id<OrgOssPdfreporterEngineFillJRCalculable>) nil_chk(variable)) isInitialized] && (newValue == nil || [((id<JavaLangComparable>) nil_chk(value)) compareToWithId:newValue] < 0)) {
    newValue = value;
  }
  return newValue;
}

- (id)initialValue OBJC_METHOD_FAMILY_NONE {
  return nil;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRComparableLowestIncrementer class]) {
    OrgOssPdfreporterEngineFillJRComparableLowestIncrementer_mainInstance_ = [[OrgOssPdfreporterEngineFillJRComparableLowestIncrementer alloc] init];
  }
}

@end
@implementation OrgOssPdfreporterEngineFillJRComparableHighestIncrementer

static OrgOssPdfreporterEngineFillJRComparableHighestIncrementer * OrgOssPdfreporterEngineFillJRComparableHighestIncrementer_mainInstance_;

+ (OrgOssPdfreporterEngineFillJRComparableHighestIncrementer *)mainInstance {
  return OrgOssPdfreporterEngineFillJRComparableHighestIncrementer_mainInstance_;
}

+ (void)setMainInstance:(OrgOssPdfreporterEngineFillJRComparableHighestIncrementer *)mainInstance {
  OrgOssPdfreporterEngineFillJRComparableHighestIncrementer_mainInstance_ = mainInstance;
}

- (id)init {
  return [super init];
}

+ (OrgOssPdfreporterEngineFillJRComparableHighestIncrementer *)getInstance {
  return OrgOssPdfreporterEngineFillJRComparableHighestIncrementer_mainInstance_;
}

- (id)incrementWithOrgOssPdfreporterEngineFillJRCalculable:(id<OrgOssPdfreporterEngineFillJRCalculable>)variable
                                                    withId:(id)expressionValue
      withOrgOssPdfreporterEngineFillAbstractValueProvider:(OrgOssPdfreporterEngineFillAbstractValueProvider *)valueProvider {
  id<JavaLangComparable> value = (id<JavaLangComparable>) [((id<OrgOssPdfreporterEngineFillJRCalculable>) nil_chk(variable)) getIncrementedValue];
  id<JavaLangComparable> newValue = (id<JavaLangComparable>) expressionValue;
  if (value != nil && ![((id<OrgOssPdfreporterEngineFillJRCalculable>) nil_chk(variable)) isInitialized] && (newValue == nil || [((id<JavaLangComparable>) nil_chk(value)) compareToWithId:newValue] > 0)) {
    newValue = value;
  }
  return newValue;
}

- (id)initialValue OBJC_METHOD_FAMILY_NONE {
  return nil;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRComparableHighestIncrementer class]) {
    OrgOssPdfreporterEngineFillJRComparableHighestIncrementer_mainInstance_ = [[OrgOssPdfreporterEngineFillJRComparableHighestIncrementer alloc] init];
  }
}

@end
