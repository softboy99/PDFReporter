//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRHorizontalFiller.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Integer.h"
#include "java/util/Iterator.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRAbstractScriptlet.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintPage.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRSection.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fill/DatasetExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRCalculator.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBand.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSection.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/engine/fill/JRHorizontalFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRPrintBand.h"
#include "org/oss/pdfreporter/engine/fill/SavePoint.h"
#include "org/oss/pdfreporter/engine/type/FooterPositionEnum.h"
#include "org/oss/pdfreporter/engine/type/IncrementTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/RunDirectionEnum.h"
#include "org/oss/pdfreporter/engine/type/WhenNoDataTypeEnum.h"

@implementation OrgOssPdfreporterEngineFillJRHorizontalFiller

static JavaUtilLoggingLogger * OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_;

@synthesize lastDetailOffsetX = lastDetailOffsetX_;
@synthesize lastDetailOffsetY = lastDetailOffsetY_;
@synthesize currentDetailOffsetY = currentDetailOffsetY_;
@synthesize maxDetailOffsetY = maxDetailOffsetY_;

+ (JavaUtilLoggingLogger *)logger {
  return OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                  withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport {
  return [self initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillJREvaluator:nil withOrgOssPdfreporterEngineFillJRFillSubreport:nil];
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                  withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
           withOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)parentElement {
  if ((self = [super initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillJREvaluator:nil withOrgOssPdfreporterEngineFillJRFillSubreport:parentElement])) {
    lastDetailOffsetX_ = -1;
    lastDetailOffsetY_ = -1;
    [self setPageHeightWithInt:pageHeight_];
  }
  return self;
}

- (id)initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                               withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                             withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:(id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>)evaluator
                                                        withOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)parentElement {
  if ((self = [super initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:evaluator withOrgOssPdfreporterEngineFillJRFillSubreport:parentElement])) {
    lastDetailOffsetX_ = -1;
    lastDetailOffsetY_ = -1;
    [self setPageHeightWithInt:pageHeight_];
  }
  return self;
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                  withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:(id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>)evaluator
           withOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)parentElement {
  return [self initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:evaluator withOrgOssPdfreporterEngineFillJRFillSubreport:parentElement];
}

- (id)initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                               withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                            withOrgOssPdfreporterEngineFillJREvaluator:(OrgOssPdfreporterEngineFillJREvaluator *)evaluator
                                                        withOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)parentElement {
  return [self initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:(id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>) evaluator withOrgOssPdfreporterEngineFillJRFillSubreport:parentElement];
}

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                  withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
               withOrgOssPdfreporterEngineFillJREvaluator:(OrgOssPdfreporterEngineFillJREvaluator *)evaluator
           withOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)parentElement {
  return [self initOrgOssPdfreporterEngineFillJRHorizontalFillerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineFillJREvaluator:evaluator withOrgOssPdfreporterEngineFillJRFillSubreport:parentElement];
}

- (void)setPageHeightWithInt:(int)pageHeight {
  self.pageHeight = pageHeight;
  columnFooterOffsetY_ = pageHeight - bottomMargin_;
  if (pageFooter_ != nil) {
    columnFooterOffsetY_ -= [pageFooter_ getHeight];
  }
  if (columnFooter_ != nil) {
    columnFooterOffsetY_ -= [columnFooter_ getHeight];
  }
  lastPageColumnFooterOffsetY_ = pageHeight - bottomMargin_;
  if (lastPageFooter_ != nil) {
    lastPageColumnFooterOffsetY_ -= [lastPageFooter_ getHeight];
  }
  if (columnFooter_ != nil) {
    lastPageColumnFooterOffsetY_ -= [columnFooter_ getHeight];
  }
}

- (void)fillReport {
  @synchronized(self) {
    {
      [self setLastPageFooterWithBOOL:NO];
      if ([self next]) {
        [self fillReportStart];
        while ([self next]) {
          [self fillReportContent];
        }
        [self fillReportEnd];
      }
      else {
        switch ([whenNoDataType_ ordinal]) {
          case OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum_ALL_SECTIONS_NO_DETAIL:
          {
            [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforeReportInit];
            [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum REPORT]];
            [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterReportInit];
            printPage_ = [self newPage];
            [self addPageWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
            [self setFirstColumn];
            offsetY_ = topMargin_;
            [self fillBackground];
            [self fillTitle];
            [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
            [self fillColumnHeadersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
            [self fillGroupHeadersWithBOOL:YES];
            [self fillGroupFootersWithBOOL:YES];
            [self fillSummary];
            break;
          }
          case OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum_BLANK_PAGE:
          {
            printPage_ = [self newPage];
            [self addPageWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
            break;
          }
          case OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum_NO_DATA_SECTION:
          {
            [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforeReportInit];
            [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum REPORT]];
            [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterReportInit];
            printPage_ = [self newPage];
            [self addPageWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
            [self setFirstColumn];
            offsetY_ = topMargin_;
            [self fillBackground];
            [self fillNoData];
            break;
          }
          case OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum_NO_PAGES:
          default:
          {
          }
        }
      }
      if ([self isSubreport]) {
        printPageStretchHeight_ = offsetY_ + bottomMargin_;
      }
      if ([((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(fillContext_)) isIgnorePagination]) {
        [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) setPageHeightWithInt:offsetY_ + bottomMargin_];
      }
    }
  }
}

- (void)fillReportStart {
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforeReportInit];
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum REPORT] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum REPORT]];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterReportInit];
  printPage_ = [self newPage];
  [self addPageWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
  [self setFirstColumn];
  offsetY_ = topMargin_;
  [self fillBackground];
  [self fillTitle];
  [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [self fillColumnHeadersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [self fillGroupHeadersWithBOOL:YES];
  [self fillDetail];
}

- (void)setFirstColumn {
  columnIndex_ = 0;
  offsetX_ = leftMargin_;
  [self setColumnNumberVariable];
}

- (void)fillReportContent {
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) estimateGroupRuptures];
  [self fillGroupFootersWithBOOL:NO];
  [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD withBOOL:NO];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforeGroupInit];
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum GROUP] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum GROUP]];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterGroupInit];
  [self fillGroupHeadersWithBOOL:NO];
  [self fillDetail];
}

- (void)fillReportEnd {
  [self fillGroupFootersWithBOOL:YES];
  [self fillSummary];
}

- (void)fillTitle {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) isToPrint]) {
    while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) getBreakHeight] > pageHeight_ - bottomMargin_ - offsetY_) {
      [self addPageWithBOOL:NO];
    }
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) isSplitPrevented] && [self isSubreport]) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
    }
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) willOverflow]) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    }
    [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:title_ withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (isTitleNewPage_) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
    }
  }
}

- (void)fillPageHeaderWithChar:(char)evaluation {
  [self setNewPageColumnInBands];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageHeader_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageHeader_)) isToPrint]) {
    int reattempts = [self getMasterColumnCount];
    if (isCreatingNewPage_) {
      --reattempts;
    }
    BOOL filled = [self fillBandNoOverflowWithOrgOssPdfreporterEngineFillJRFillBand:pageHeader_ withChar:evaluation];
    for (int i = 0; !filled && i < reattempts; ++i) {
      [self resolveGroupBoundElementsWithChar:evaluation withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:evaluation];
      [self resolvePageBoundElementsWithChar:evaluation];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      filled = [self fillBandNoOverflowWithOrgOssPdfreporterEngineFillJRFillBand:pageHeader_ withChar:evaluation];
    }
    if (!filled) {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:@"Infinite loop creating new page due to page header overflow."];
    }
  }
  columnHeaderOffsetY_ = offsetY_;
  isNewPage_ = YES;
  isFirstPageBand_ = YES;
}

- (BOOL)fillBandNoOverflowWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band
                                                           withChar:(char)evaluation {
  int availableHeight = columnFooterOffsetY_ - offsetY_;
  BOOL overflow = availableHeight < [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) getHeight];
  if (!overflow) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) evaluateWithChar:evaluation];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fillWithInt:availableHeight];
    overflow = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) willOverflow];
    if (overflow) {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) rewind];
    }
    else {
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:band withChar:evaluation];
    }
  }
  return !overflow;
}

- (void)fillColumnHeadersWithChar:(char)evaluation {
  [self setNewPageColumnInBands];
  for (columnIndex_ = 0; columnIndex_ < columnCount_; columnIndex_++) {
    [self setColumnNumberVariable];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) evaluatePrintWhenExpressionWithChar:evaluation];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) isToPrint]) {
      int reattempts = [self getMasterColumnCount];
      if (isCreatingNewPage_) {
        --reattempts;
      }
      BOOL fits = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) getHeight] <= columnFooterOffsetY_ - offsetY_;
      for (int i = 0; !fits && i < reattempts; ++i) {
        [self fillPageFooterWithChar:evaluation];
        [self resolveGroupBoundElementsWithChar:evaluation withBOOL:NO];
        [self resolveColumnBoundElementsWithChar:evaluation];
        [self resolvePageBoundElementsWithChar:evaluation];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        [self fillPageHeaderWithChar:evaluation];
        fits = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) getHeight] <= columnFooterOffsetY_ - offsetY_;
      }
      if (!fits) {
        @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:@"Infinite loop creating new page due to column header size."];
      }
      [self setOffsetX];
      offsetY_ = columnHeaderOffsetY_;
      [self fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:columnHeader_ withChar:evaluation withBOOL:NO];
    }
  }
  [self setFirstColumn];
  isNewColumn_ = YES;
  isFirstColumnBand_ = YES;
}

- (void)fillGroupHeadersWithBOOL:(BOOL)isFillAll {
  if (groups_ != nil && (int) [((IOSObjectArray *) nil_chk(groups_)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groups_)) count]; i++) {
      OrgOssPdfreporterEngineFillJRFillGroup *group = [((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i];
      if (isFillAll || [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) hasChanged]) {
        OrgOssPdfreporterEngineFillSavePoint *newSavePoint = [self fillGroupHeaderWithOrgOssPdfreporterEngineFillJRFillGroup:group];
        ((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(newSavePoint)).groupIndex = i;
        if (keepTogetherSavePoint_ == nil && [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isKeepTogether]) {
          keepTogetherSavePoint_ = newSavePoint;
        }
      }
    }
  }
}

- (OrgOssPdfreporterEngineFillSavePoint *)fillGroupHeaderWithOrgOssPdfreporterEngineFillJRFillGroup:(OrgOssPdfreporterEngineFillJRFillGroup *)group {
  OrgOssPdfreporterEngineFillSavePoint *savePoint = nil;
  OrgOssPdfreporterEngineFillJRFillSection *groupHeaderSection = (OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getGroupHeaderSection];
  char evalPrevPage = ([((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isTopLevelChange] ? OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD : OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT);
  if ((([((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isStartNewPage] || [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isResetPageNumber]) && !isNewPage_) || ([((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isStartNewColumn] && !isNewColumn_)) {
    [self fillPageBreakWithBOOL:[((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isResetPageNumber] withChar:evalPrevPage withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
  }
  IOSObjectArray *groupHeaderBands = [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(groupHeaderSection)) getFillBands];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groupHeaderBands)) count]; i++) {
    OrgOssPdfreporterEngineFillJRFillBand *groupHeaderBand = [((IOSObjectArray *) nil_chk(groupHeaderBands)) objectAtIndex:i];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) isToPrint]) {
      while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) getBreakHeight] > columnFooterOffsetY_ - offsetY_ || [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getMinHeightToStartNewPage] > columnFooterOffsetY_ - offsetY_) {
        [self fillPageBreakWithBOOL:NO withChar:evalPrevPage withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      }
    }
    if (i == 0) {
      [self setNewGroupInBandsWithOrgOssPdfreporterEngineJRGroup:group];
      [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) setFooterPrintedWithBOOL:NO];
    }
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) isToPrint]) {
      [self setFirstColumn];
      OrgOssPdfreporterEngineFillSavePoint *newSavePoint = [self fillColumnBandWithOrgOssPdfreporterEngineFillJRFillBand:groupHeaderBand withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      savePoint = [self advanceSavePointWithOrgOssPdfreporterEngineFillSavePoint:savePoint withOrgOssPdfreporterEngineFillSavePoint:newSavePoint];
      isFirstPageBand_ = NO;
      isFirstColumnBand_ = YES;
    }
  }
  [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) setHeaderPrintedWithBOOL:YES];
  isNewGroup_ = YES;
  if (savePoint == nil) {
    savePoint = [[OrgOssPdfreporterEngineFillSavePoint alloc] initWithOrgOssPdfreporterEngineJRPrintPage:[self getCurrentPage] withInt:columnIndex_ withBOOL:isNewPage_ withBOOL:isNewColumn_ withInt:offsetY_];
  }
  return savePoint;
}

- (void)fillGroupHeadersReprintWithChar:(char)evaluation {
  if (groups_ != nil && (int) [((IOSObjectArray *) nil_chk(groups_)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groups_)) count]; i++) {
      [self fillGroupHeaderReprintWithOrgOssPdfreporterEngineFillJRFillGroup:[((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i] withChar:evaluation];
    }
  }
}

- (void)fillGroupHeaderReprintWithOrgOssPdfreporterEngineFillJRFillGroup:(OrgOssPdfreporterEngineFillJRFillGroup *)group
                                                                withChar:(char)evaluation {
  if ([((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isReprintHeaderOnEachPage] && (![((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) hasChanged] || ([((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) hasChanged] && [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) isHeaderPrinted]))) {
    OrgOssPdfreporterEngineFillJRFillSection *groupHeaderSection = (OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getGroupHeaderSection];
    IOSObjectArray *groupHeaderBands = [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(groupHeaderSection)) getFillBands];
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groupHeaderBands)) count]; i++) {
      OrgOssPdfreporterEngineFillJRFillBand *groupHeaderBand = [((IOSObjectArray *) nil_chk(groupHeaderBands)) objectAtIndex:i];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) evaluatePrintWhenExpressionWithChar:evaluation];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) isToPrint]) {
        [self setFirstColumn];
        while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupHeaderBand)) getBreakHeight] > columnFooterOffsetY_ - offsetY_ || [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getMinHeightToStartNewPage] > columnFooterOffsetY_ - offsetY_) {
          [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
        }
        (void) [self fillColumnBandWithOrgOssPdfreporterEngineFillJRFillBand:groupHeaderBand withChar:evaluation];
        isFirstPageBand_ = NO;
        isFirstColumnBand_ = YES;
      }
    }
  }
}

- (void)fillDetail {
  if (![((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(detailSection_)) areAllPrintWhenExpressionsNull]) {
    [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) estimateVariables];
  }
  IOSObjectArray *detailBands = [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(detailSection_)) getFillBands];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(detailBands)) count]; i++) {
    OrgOssPdfreporterEngineFillJRFillBand *detailBand = [((IOSObjectArray *) nil_chk(detailBands)) objectAtIndex:i];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_ESTIMATED];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) isToPrint]) {
      while ((columnIndex_ == columnCount_ - 1 || isNewGroup_) && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) getHeight] > columnFooterOffsetY_ - offsetY_) {
        char evalPrevPage = (isNewGroup_ ? OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT : OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD);
        [self fillPageBreakWithBOOL:NO withChar:evalPrevPage withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      }
      break;
    }
  }
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforeDetailEval];
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) calculateVariables];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterDetailEval];
  if (detailBands != nil) {
    if (offsetX_ == lastDetailOffsetX_ && offsetY_ == lastDetailOffsetY_) {
      if (columnIndex_ == columnCount_ - 1) {
        columnIndex_ = 0;
        [self setOffsetX];
        [self setColumnNumberVariable];
        maxDetailOffsetY_ = 0;
        currentDetailOffsetY_ = offsetY_;
      }
      else {
        columnIndex_++;
        [self setOffsetX];
        offsetY_ = currentDetailOffsetY_;
        [self setColumnNumberVariable];
      }
    }
    else {
      [self setOffsetX];
      currentDetailOffsetY_ = offsetY_;
    }
    for (int i = 0; i < (int) [detailBands count]; i++) {
      OrgOssPdfreporterEngineFillJRFillBand *detailBand = [detailBands objectAtIndex:i];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) isToPrint]) {
        while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(detailBand)) getHeight] > columnFooterOffsetY_ - offsetY_) {
          char evalPrevPage = (isNewGroup_ ? OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT : OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD);
          [self fillPageBreakWithBOOL:NO withChar:evalPrevPage withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
          currentDetailOffsetY_ = offsetY_;
        }
        [self fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:detailBand withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
        isFirstPageBand_ = NO;
        isFirstColumnBand_ = NO;
      }
    }
    maxDetailOffsetY_ = maxDetailOffsetY_ < offsetY_ ? offsetY_ : maxDetailOffsetY_;
    offsetY_ = maxDetailOffsetY_;
    lastDetailOffsetX_ = offsetX_;
    lastDetailOffsetY_ = offsetY_;
  }
  isNewPage_ = NO;
  isNewColumn_ = NO;
  isNewGroup_ = NO;
}

- (void)fillGroupFootersWithBOOL:(BOOL)isFillAll {
  if (groups_ != nil && (int) [((IOSObjectArray *) nil_chk(groups_)) count] > 0) {
    OrgOssPdfreporterEngineFillSavePoint *savePoint = nil;
    char evaluation = (isFillAll) ? OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT : OrgOssPdfreporterEngineJRExpression_EVALUATION_OLD;
    for (int i = (int) [((IOSObjectArray *) nil_chk(groups_)) count] - 1; i >= 0; i--) {
      OrgOssPdfreporterEngineFillJRFillGroup *group = [((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i];
      if (isFillAll || [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) hasChanged]) {
        OrgOssPdfreporterEngineFillSavePoint *newSavePoint = [self fillGroupFooterWithOrgOssPdfreporterEngineFillJRFillGroup:group withChar:evaluation];
        if (newSavePoint != nil) {
          switch ([[((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getFooterPositionValue] ordinal]) {
            case OrgOssPdfreporterEngineTypeFooterPositionEnum_STACK_AT_BOTTOM:
            {
              savePoint = [self advanceSavePointWithOrgOssPdfreporterEngineFillSavePoint:savePoint withOrgOssPdfreporterEngineFillSavePoint:newSavePoint];
              if (savePoint != nil) {
                savePoint.footerPosition = [OrgOssPdfreporterEngineTypeFooterPositionEnumEnum STACK_AT_BOTTOM];
              }
              break;
            }
            case OrgOssPdfreporterEngineTypeFooterPositionEnum_FORCE_AT_BOTTOM:
            {
              savePoint = [self advanceSavePointWithOrgOssPdfreporterEngineFillSavePoint:savePoint withOrgOssPdfreporterEngineFillSavePoint:newSavePoint];
              if (savePoint != nil) {
                [savePoint moveSavePointContent];
                offsetY_ = columnFooterOffsetY_;
              }
              savePoint = nil;
              break;
            }
            case OrgOssPdfreporterEngineTypeFooterPositionEnum_COLLATE_AT_BOTTOM:
            {
              savePoint = [self advanceSavePointWithOrgOssPdfreporterEngineFillSavePoint:savePoint withOrgOssPdfreporterEngineFillSavePoint:newSavePoint];
              break;
            }
            case OrgOssPdfreporterEngineTypeFooterPositionEnum_NORMAL:
            default:
            {
              if (savePoint != nil) {
                if (savePoint.page == ((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(newSavePoint)).page && savePoint.columnIndex == ((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(newSavePoint)).columnIndex) {
                  if (savePoint.footerPosition == [OrgOssPdfreporterEngineTypeFooterPositionEnumEnum STACK_AT_BOTTOM]) {
                    [savePoint saveHeightOffsetWithInt:((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(newSavePoint)).heightOffset];
                  }
                  else {
                    savePoint = nil;
                  }
                }
                else {
                  [savePoint moveSavePointContent];
                  savePoint = nil;
                }
              }
              else {
                savePoint = nil;
              }
            }
          }
        }
        if (keepTogetherSavePoint_ != nil && i <= ((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(keepTogetherSavePoint_)).groupIndex) {
          keepTogetherSavePoint_ = nil;
        }
      }
    }
    if (savePoint != nil) {
      [savePoint moveSavePointContent];
      offsetY_ = columnFooterOffsetY_;
    }
  }
}

- (OrgOssPdfreporterEngineFillSavePoint *)fillGroupFooterWithOrgOssPdfreporterEngineFillJRFillGroup:(OrgOssPdfreporterEngineFillJRFillGroup *)group
                                                                                           withChar:(char)evaluation {
  OrgOssPdfreporterEngineFillSavePoint *savePoint = nil;
  OrgOssPdfreporterEngineFillJRFillSection *groupFooterSection = (OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getGroupFooterSection];
  IOSObjectArray *groupFooterBands = [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(groupFooterSection)) getFillBands];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groupFooterBands)) count]; i++) {
    OrgOssPdfreporterEngineFillJRFillBand *groupFooterBand = [((IOSObjectArray *) nil_chk(groupFooterBands)) objectAtIndex:i];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupFooterBand)) evaluatePrintWhenExpressionWithChar:evaluation];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupFooterBand)) isToPrint]) {
      [self setFirstColumn];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(groupFooterBand)) getBreakHeight] > columnFooterOffsetY_ - offsetY_) {
        [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
      }
      OrgOssPdfreporterEngineFillSavePoint *newSavePoint = [self fillColumnBandWithOrgOssPdfreporterEngineFillJRFillBand:groupFooterBand withChar:evaluation];
      ((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(newSavePoint)).footerPosition = [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) getFooterPositionValue];
      savePoint = [self advanceSavePointWithOrgOssPdfreporterEngineFillSavePoint:savePoint withOrgOssPdfreporterEngineFillSavePoint:newSavePoint];
      isFirstPageBand_ = NO;
      isFirstColumnBand_ = YES;
    }
  }
  isNewPage_ = NO;
  isNewColumn_ = NO;
  [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) setHeaderPrintedWithBOOL:NO];
  [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk(group)) setFooterPrintedWithBOOL:YES];
  return savePoint;
}

- (void)fillColumnFootersWithChar:(char)evaluation {
  if ([self isSubreport] && ![self isSubreportRunToBottom]) {
    columnFooterOffsetY_ = offsetY_;
  }
  int tmpColumnFooterOffsetY = columnFooterOffsetY_;
  if (isFloatColumnFooter_ || [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(fillContext_)) isIgnorePagination]) {
    tmpColumnFooterOffsetY = offsetY_;
  }
  for (columnIndex_ = 0; columnIndex_ < columnCount_; columnIndex_++) {
    [self setColumnNumberVariable];
    [self setOffsetX];
    offsetY_ = tmpColumnFooterOffsetY;
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnFooter_)) evaluatePrintWhenExpressionWithChar:evaluation];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnFooter_)) isToPrint]) {
      [self fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:columnFooter_ withChar:evaluation withBOOL:NO];
    }
  }
}

- (void)fillPageFooterWithChar:(char)evaluation {
  OrgOssPdfreporterEngineFillJRFillBand *crtPageFooter = [self getCurrentPageFooter];
  offsetX_ = leftMargin_;
  if ((![self isSubreport] || [self isSubreportRunToBottom]) && ![((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(fillContext_)) isIgnorePagination]) {
    offsetY_ = pageHeight_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(crtPageFooter)) getHeight] - bottomMargin_;
  }
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(crtPageFooter)) evaluatePrintWhenExpressionWithChar:evaluation];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(crtPageFooter)) isToPrint]) {
    [self fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:crtPageFooter withChar:evaluation];
  }
}

- (void)fillSummary {
  offsetX_ = leftMargin_;
  if (lastPageFooter_ == missingFillBand_) {
    if (!isSummaryNewPage_ && columnIndex_ == 0 && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) getBreakHeight] <= columnFooterOffsetY_ - offsetY_) {
      [self fillSummaryNoLastFooterSamePage];
    }
    else {
      [self fillSummaryNoLastFooterNewPage];
    }
  }
  else {
    if (isSummaryWithPageHeaderAndFooter_) {
      [self fillSummaryWithLastFooterAndPageBands];
    }
    else {
      [self fillSummaryWithLastFooterNoPageBands];
    }
  }
  [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
  [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [self resolveReportBoundElements];
}

- (void)fillSummaryNoLastFooterSamePage {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:columnFooterOffsetY_ - offsetY_];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented]) {
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      if (isSummaryWithPageHeaderAndFooter_) {
        [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - (isSummaryWithPageHeaderAndFooter_ ? [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight] : 0)];
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    }
    else {
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow]) {
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        if (isSummaryWithPageHeaderAndFooter_) {
          [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        }
        printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - (isSummaryWithPageHeaderAndFooter_ ? [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight] : 0)];
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      }
    }
    [self fillSummaryOverflow];
  }
  else {
    [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  }
}

- (void)fillSummaryNoLastFooterNewPage {
  [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
    [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
    [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
    [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
    [self addPageWithBOOL:NO];
    if (isSummaryWithPageHeaderAndFooter_) {
      [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - (isSummaryWithPageHeaderAndFooter_ ? [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight] : 0)];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented] && [self isSubreport]) {
      if (isSummaryWithPageHeaderAndFooter_) {
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      if (isSummaryWithPageHeaderAndFooter_) {
        [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - (isSummaryWithPageHeaderAndFooter_ ? [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight] : 0)];
    }
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    [self fillSummaryOverflow];
  }
}

- (void)fillSummaryWithLastFooterAndPageBands {
  if (!isSummaryNewPage_ && columnIndex_ == 0 && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) getBreakHeight] <= columnFooterOffsetY_ - offsetY_) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:columnFooterOffsetY_ - offsetY_];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented]) {
        [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight]];
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      }
      else {
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        if (![((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow]) {
          [self setLastPageFooterWithBOOL:YES];
        }
        [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      [self fillSummaryOverflow];
    }
    else {
      [self setLastPageFooterWithBOOL:YES];
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
  }
  else if (columnIndex_ == 0 && offsetY_ <= lastPageColumnFooterOffsetY_) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight]];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented] && [self isSubreport]) {
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight]];
      }
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      [self fillSummaryOverflow];
    }
    else {
      [self setLastPageFooterWithBOOL:YES];
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
  }
  else {
    [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
    [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
    [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
    [self addPageWithBOOL:NO];
    [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight]];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented] && [self isSubreport]) {
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight]];
    }
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    [self fillSummaryOverflow];
  }
}

- (void)fillSummaryWithLastFooterNoPageBands {
  if (!isSummaryNewPage_ && columnIndex_ == 0 && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) getBreakHeight] <= lastPageColumnFooterOffsetY_ - offsetY_) {
    [self setLastPageFooterWithBOOL:YES];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:columnFooterOffsetY_ - offsetY_];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented]) {
        [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      }
      else {
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      [self fillSummaryOverflow];
    }
    else {
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
  }
  else if (!isSummaryNewPage_ && columnIndex_ == 0 && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) getBreakHeight] <= columnFooterOffsetY_ - offsetY_) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:columnFooterOffsetY_ - offsetY_];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented]) {
        if (offsetY_ <= lastPageColumnFooterOffsetY_) {
          [self setLastPageFooterWithBOOL:YES];
          [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
          [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
          [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
          [self addPageWithBOOL:NO];
          printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
          [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
          offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        }
        else {
          [self fillPageBreakWithBOOL:NO withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
          [self setLastPageFooterWithBOOL:YES];
          printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:lastPageColumnFooterOffsetY_ - offsetY_];
          [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
          offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
          [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        }
      }
      else {
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        [self fillPageBreakWithBOOL:NO withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
        [self setLastPageFooterWithBOOL:YES];
        if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow]) {
          printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:lastPageColumnFooterOffsetY_ - offsetY_];
          [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
          offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        }
        [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
      [self fillSummaryOverflow];
    }
    else {
      if (offsetY_ > lastPageColumnFooterOffsetY_) {
        [self fillPageBreakWithBOOL:NO withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      }
      [self setLastPageFooterWithBOOL:YES];
      [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
  }
  else if (columnIndex_ == 0 && offsetY_ <= lastPageColumnFooterOffsetY_) {
    [self setLastPageFooterWithBOOL:YES];
    [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
      if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented] && [self isSubreport]) {
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
      }
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
      [self fillSummaryOverflow];
    }
  }
  else {
    [self fillColumnFootersWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
    [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
    [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
    [self addPageWithBOOL:NO];
    [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self setLastPageFooterWithBOOL:YES];
    if (isSummaryNewPage_) {
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
        [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
        [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
        [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
        [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
        [self addPageWithBOOL:NO];
        [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
        if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented] && [self isSubreport]) {
          [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
          [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
          [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
          [self addPageWithBOOL:NO];
          printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
        }
        [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
        offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        [self fillSummaryOverflow];
      }
    }
    else {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      if (summary_ != missingFillBand_ && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isToPrint]) {
        [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:columnFooterOffsetY_ - offsetY_];
        if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) isSplitPrevented]) {
          [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
          [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
          [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
          [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
          [self addPageWithBOOL:NO];
          printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
          [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
          offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
        }
        else {
          [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
          offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
          [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
        }
        [self fillSummaryOverflow];
      }
      else {
        [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      }
    }
  }
}

- (void)fillSummaryOverflow {
  while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) willOverflow]) {
    if (isSummaryWithPageHeaderAndFooter_) {
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
    [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
    [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
    [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
    [self addPageWithBOOL:NO];
    if (isSummaryWithPageHeaderAndFooter_) {
      [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_ - (isSummaryWithPageHeaderAndFooter_ ? [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) getHeight] : 0)];
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
  }
  [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:summary_ withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if (isSummaryWithPageHeaderAndFooter_) {
    if (offsetY_ > pageHeight_ - bottomMargin_ - [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(lastPageFooter_)) getHeight]) {
      [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:YES];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      [self fillPageHeaderWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    }
    if (lastPageFooter_ != missingFillBand_) {
      [self setLastPageFooterWithBOOL:YES];
    }
    [self fillPageFooterWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  }
}

- (void)fillBackground {
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(background_)) getHeight] <= pageHeight_ - bottomMargin_ - offsetY_) {
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(background_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(background_)) isToPrint]) {
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(background_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(background_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    }
  }
}

- (void)addPageWithBOOL:(BOOL)isResetPageNumber {
  if ([self isSubreport]) {
    if (![((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) isBandOverFlowAllowed]) {
      @throw [[OrgOssPdfreporterEngineJRRuntimeException alloc] initWithNSString:@"Subreport overflowed on a band that does not support overflow."];
    }
    printPageStretchHeight_ = offsetY_ + bottomMargin_;
    if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_)) isLoggableWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel FINEST]]) {
      [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_)) finestWithNSString:[NSString stringWithFormat:@"Filler: %d (Report: %@), Page: %d is waiting for parent Filler: %d (Report: %@) to finish Page: %d", [self getFillerId], [((OrgOssPdfreporterEngineJasperReport *) nil_chk([self getJasperReport])) getName], [self getCurrentPageCount], [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getFillerId], [((OrgOssPdfreporterEngineJasperReport *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getJasperReport])) getName], [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getCurrentPageCount]]];
    }
    [self suspendSubreportRunner];
    if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_)) isLoggableWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel FINEST]]) {
      [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_)) finestWithNSString:[NSString stringWithFormat:@"Filler: %d (Report: %@), Page: %d continues for parent Filler: %d (Report: %@) on Page: %d", [self getFillerId], [((OrgOssPdfreporterEngineJasperReport *) nil_chk([self getJasperReport])) getName], [self getCurrentPageCount], [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getFillerId], [((OrgOssPdfreporterEngineJasperReport *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getJasperReport])) getName], [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller_)) getCurrentPageCount]]];
    }
  }
  printPage_ = [self newPage];
  if (isResetPageNumber) {
    [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getPageNumber])) setValueWithId:[JavaLangInteger valueOfWithInt:1]];
  }
  else {
    [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getPageNumber])) setValueWithId:[JavaLangInteger valueOfWithInt:[((NSNumber *) [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getPageNumber])) getValue]) intValue] + 1]];
  }
  [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getPageNumber])) setOldValueWithId:[((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getPageNumber])) getValue]];
  [self addPageWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
  [self setFirstColumn];
  offsetY_ = topMargin_;
  lastDetailOffsetX_ = -1;
  lastDetailOffsetY_ = -1;
  maxDetailOffsetY_ = 0;
  [self fillBackground];
}

- (void)setColumnNumberVariable {
  OrgOssPdfreporterEngineFillJRFillVariable *columnNumberVar = [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) getColumnNumber];
  [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(columnNumberVar)) setValueWithId:[JavaLangInteger valueOfWithInt:columnIndex_ + 1]];
  [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(columnNumberVar)) setOldValueWithId:[((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(columnNumberVar)) getValue]];
}

- (void)fillPageBreakWithBOOL:(BOOL)isResetPageNumber
                     withChar:(char)evalPrevPage
                     withChar:(char)evalNextPage
                     withBOOL:(BOOL)isReprintGroupHeaders {
  if (isCreatingNewPage_) {
    @throw [[OrgOssPdfreporterEngineJRException alloc] initWithNSString:@"Infinite loop creating new page."];
  }
  if (keepTogetherSavePoint_ != nil) {
    [keepTogetherSavePoint_ saveEndOffsetYWithInt:offsetY_];
  }
  isCreatingNewPage_ = YES;
  [self fillColumnFootersWithChar:evalPrevPage];
  [self fillPageFooterWithChar:evalPrevPage];
  [self resolveGroupBoundElementsWithChar:evalPrevPage withBOOL:NO];
  [self resolveColumnBoundElementsWithChar:evalPrevPage];
  [self resolvePageBoundElementsWithChar:evalPrevPage];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
  [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
  if (keepTogetherSavePoint_ != nil && !((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(keepTogetherSavePoint_)).isNewPage) {
    [((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(keepTogetherSavePoint_)) removeContent];
  }
  [self addPageWithBOOL:isResetPageNumber];
  [self fillPageHeaderWithChar:evalNextPage];
  [self fillColumnHeadersWithChar:evalNextPage];
  BOOL savePointContentMoved = [self moveKeepTogetherSavePointContent];
  if (!savePointContentMoved && isReprintGroupHeaders) {
    [self fillGroupHeadersReprintWithChar:evalNextPage];
  }
  isCreatingNewPage_ = NO;
}

- (void)fillPageBandWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band
                                                     withChar:(char)evaluation {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) evaluateWithChar:evaluation];
  OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fillWithInt:columnFooterOffsetY_ - offsetY_];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) isSplitPrevented]) {
    [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
    printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) refillWithInt:columnFooterOffsetY_ - offsetY_];
  }
  [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
  offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
  while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) willOverflow]) {
    [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
    printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fillWithInt:columnFooterOffsetY_ - offsetY_];
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
  }
  [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:band withChar:evaluation];
}

- (OrgOssPdfreporterEngineFillSavePoint *)fillColumnBandWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band
                                                                                         withChar:(char)evaluation {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) evaluateWithChar:evaluation];
  OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fillWithInt:columnFooterOffsetY_ - offsetY_];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) willOverflow] && ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) isSplitPrevented] || keepTogetherSavePoint_ != nil)) {
    [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
    printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) refillWithInt:columnFooterOffsetY_ - offsetY_];
  }
  OrgOssPdfreporterEngineFillSavePoint *savePoint = [[OrgOssPdfreporterEngineFillSavePoint alloc] initWithOrgOssPdfreporterEngineJRPrintPage:[self getCurrentPage] withInt:columnIndex_ withBOOL:isNewPage_ withBOOL:isNewColumn_ withInt:offsetY_];
  [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
  offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
  [((OrgOssPdfreporterEngineFillSavePoint *) nil_chk(savePoint)) saveHeightOffsetWithInt:columnFooterOffsetY_ - offsetY_];
  while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) willOverflow]) {
    [self fillPageBreakWithBOOL:NO withChar:evaluation withChar:evaluation withBOOL:YES];
    printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fillWithInt:columnFooterOffsetY_ - offsetY_];
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
  }
  [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:band withChar:evaluation];
  return savePoint;
}

- (void)fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band
                                                      withChar:(char)evaluation {
  [self fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:band withChar:evaluation withBOOL:YES];
}

- (void)fillFixedBandWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band
                                                      withChar:(char)evaluation
                                                      withBOOL:(BOOL)allowShrinking {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) evaluateWithChar:evaluation];
  OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) fill];
  [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
  offsetY_ += allowShrinking ? [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight] : [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band)) getHeight];
  [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:band withChar:evaluation];
}

- (void)fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:(OrgOssPdfreporterEngineFillJRPrintBand *)band {
  for (id<JavaUtilIterator> it = [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(band)) iterateElements]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRPrintElement> element = [((id<JavaUtilIterator>) nil_chk(it)) next];
    [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) setXWithInt:[((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) getX] + offsetX_];
    [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) setYWithInt:[((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) getY] + offsetY_];
    [((id<OrgOssPdfreporterEngineJRPrintPage>) nil_chk(printPage_)) addElementWithOrgOssPdfreporterEngineJRPrintElement:element];
  }
}

- (void)setNewPageColumnInBands {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageHeader_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(detailSection_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnFooter_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(lastPageFooter_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) setNewPageColumnWithBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) setNewPageColumnWithBOOL:YES];
  if (groups_ != nil && (int) [((IOSObjectArray *) nil_chk(groups_)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groups_)) count]; i++) {
      [((OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk([((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i])) getGroupHeaderSection]) setNewPageColumnWithBOOL:YES];
      [((OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk([((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i])) getGroupFooterSection]) setNewPageColumnWithBOOL:YES];
    }
  }
}

- (void)setNewGroupInBandsWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(title_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageHeader_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnHeader_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(detailSection_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(columnFooter_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(pageFooter_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(lastPageFooter_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(summary_)) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
  if (groups_ != nil && (int) [((IOSObjectArray *) nil_chk(groups_)) count] > 0) {
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(groups_)) count]; i++) {
      [((OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk([((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i])) getGroupHeaderSection]) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
      [((OrgOssPdfreporterEngineFillJRFillSection *) [((OrgOssPdfreporterEngineFillJRFillGroup *) nil_chk([((IOSObjectArray *) nil_chk(groups_)) objectAtIndex:i])) getGroupFooterSection]) setNewGroupWithOrgOssPdfreporterEngineJRGroup:group withBOOL:YES];
    }
  }
}

- (OrgOssPdfreporterEngineFillJRFillBand *)getCurrentPageFooter {
  return isLastPageFooter_ ? lastPageFooter_ : pageFooter_;
}

- (void)setLastPageFooterWithBOOL:(BOOL)isLastPageFooter {
  self.isLastPageFooter = isLastPageFooter;
  if (isLastPageFooter) {
    columnFooterOffsetY_ = lastPageColumnFooterOffsetY_;
  }
}

- (void)fillNoData {
  [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) evaluatePrintWhenExpressionWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) isToPrint]) {
    while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) getBreakHeight] > pageHeight_ - bottomMargin_ - offsetY_) {
      [self addPageWithBOOL:NO];
    }
    [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) evaluateWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
    OrgOssPdfreporterEngineFillJRPrintBand *printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
    if ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) willOverflow] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) isSplitPrevented] && [self isSubreport]) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) refillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
    }
    [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
    offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    while ([((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) willOverflow]) {
      [self resolveGroupBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT withBOOL:NO];
      [self resolveColumnBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [self resolvePageBoundElementsWithChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callBeforePageInit];
      [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnumEnum:[OrgOssPdfreporterEngineTypeResetTypeEnumEnum PAGE] withOrgOssPdfreporterEngineTypeIncrementTypeEnumEnum:[OrgOssPdfreporterEngineTypeIncrementTypeEnumEnum PAGE]];
      [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk(scriptlet_)) callAfterPageInit];
      [self addPageWithBOOL:NO];
      printBand = [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(noData_)) fillWithInt:pageHeight_ - bottomMargin_ - offsetY_];
      [self fillBandWithOrgOssPdfreporterEngineFillJRPrintBand:printBand];
      offsetY_ += [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(printBand)) getHeight];
    }
    [self resolveBandBoundElementsWithOrgOssPdfreporterEngineFillJRFillBand:noData_ withChar:OrgOssPdfreporterEngineJRExpression_EVALUATION_DEFAULT];
  }
}

- (void)setOffsetX {
  if (columnDirection_ == [OrgOssPdfreporterEngineTypeRunDirectionEnumEnum RTL]) {
    offsetX_ = pageWidth_ - rightMargin_ - columnWidth_ - columnIndex_ * (columnSpacing_ + columnWidth_);
  }
  else {
    offsetX_ = leftMargin_ + columnIndex_ * (columnSpacing_ + columnWidth_);
  }
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRHorizontalFiller class]) {
    OrgOssPdfreporterEngineFillJRHorizontalFiller_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[OrgOssPdfreporterEngineFillJRHorizontalFiller class]] getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterEngineFillJRHorizontalFiller *typedCopy = (OrgOssPdfreporterEngineFillJRHorizontalFiller *) copy;
  typedCopy.lastDetailOffsetX = lastDetailOffsetX_;
  typedCopy.lastDetailOffsetY = lastDetailOffsetY_;
  typedCopy.currentDetailOffsetY = currentDetailOffsetY_;
  typedCopy.maxDetailOffsetY = maxDetailOffsetY_;
}

@end
