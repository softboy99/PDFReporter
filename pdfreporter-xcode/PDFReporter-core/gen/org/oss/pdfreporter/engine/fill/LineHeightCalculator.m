//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/engine/fill/LineHeightCalculator.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/fill/LineHeightCalculator.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"

@implementation OrgOssPdfreporterEngineFillLineHeightCalculator

+ (float)getLineHeightWithBOOL:(BOOL)isFirstLine
withOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                     withFloat:(float)maxLeading
                     withFloat:(float)maxAscent {
  float lineHeight = 0;
  switch ([[((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getLineSpacing] ordinal]) {
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_SINGLE:
    default:
    {
      lineHeight = maxLeading + 1.0f * maxAscent;
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_ONE_AND_HALF:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + 1.5f * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_DOUBLE:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + 2.0f * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_PROPORTIONAL:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getLineSpacingSize])) floatValue] * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_AT_LEAST:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = [JavaLangMath maxWithFloat:maxLeading + 1.0f * maxAscent withFloat:[((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getLineSpacingSize])) floatValue]];
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_FIXED:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getLineSpacingSize])) floatValue];
      }
      break;
    }
  }
  return lineHeight;
}

- (id)init {
  return [super init];
}

@end
