//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/IExpressionChunk.java
//
//  Created by kendra on 9/27/13.
//

#ifndef _OrgOssPdfreporterCompilersJevalIExpressionChunk_H_
#define _OrgOssPdfreporterCompilersJevalIExpressionChunk_H_

@class OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum;

#import "JreEmulation.h"
#include "java/lang/Enum.h"

@protocol OrgOssPdfreporterCompilersJevalIExpressionChunk < NSObject, JavaObject >
- (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)getType;
- (NSString *)getText;
@end

typedef enum {
  OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType_TYPE_TEXT = 0,
  OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType_TYPE_PARAMETER = 1,
  OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType_TYPE_FIELD = 2,
  OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType_TYPE_VARIABLE = 3,
  OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType_TYPE_RESOURCE = 4,
} OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionType;

@interface OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum : JavaLangEnum < NSCopying > {
}
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)TYPE_TEXT;
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)TYPE_PARAMETER;
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)TYPE_FIELD;
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)TYPE_VARIABLE;
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)TYPE_RESOURCE;
+ (IOSObjectArray *)values;
+ (OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)valueOfWithNSString:(NSString *)name;
- (id)copyWithZone:(NSZone *)zone;
- (id)initWithNSString:(NSString *)name withInt:(int)ordinal;
@end

#endif // _OrgOssPdfreporterCompilersJevalIExpressionChunk_H_
