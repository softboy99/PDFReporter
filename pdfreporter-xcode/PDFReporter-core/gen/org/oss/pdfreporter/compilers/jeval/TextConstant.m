//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/TextConstant.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/compilers/jeval/ExpressionParseException.h"
#include "org/oss/pdfreporter/compilers/jeval/TextConstant.h"

@implementation OrgOssPdfreporterCompilersJevalTextConstant

static NSString * OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_;

@synthesize text = text_;

+ (NSString *)TEXT_MATCH {
  return OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_;
}

+ (void)setTEXT_MATCH:(NSString *)TEXT_MATCH {
  OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_ = TEXT_MATCH;
}

+ (BOOL)isTextWithNSString:(NSString *)text {
  return [((NSString *) nil_chk(text)) matches:OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_];
}

+ (OrgOssPdfreporterCompilersJevalTextConstant *)parseTextWithNSString:(NSString *)s {
  if ([((NSString *) nil_chk(s)) matches:OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_]) {
    return [[OrgOssPdfreporterCompilersJevalTextConstant alloc] initWithNSString:[OrgOssPdfreporterCompilersJevalTextConstant convertTextChunkWithNSString:s]];
  }
  @throw [[OrgOssPdfreporterCompilersJevalExpressionParseException alloc] initWithNSString:[NSString stringWithFormat:@"Unsupported Text constant %@", s]];
}

+ (NSString *)convertTextChunkWithNSString:(NSString *)chunkText {
  chunkText = [((NSString *) nil_chk(chunkText)) substring:1 endIndex:[((NSString *) nil_chk(chunkText)) length] - 1];
  chunkText = [((NSString *) nil_chk(chunkText)) replace:@"\\n" withSequence:@"\n"];
  chunkText = [((NSString *) nil_chk(chunkText)) replace:@"\\t" withSequence:@"\t"];
  chunkText = [((NSString *) nil_chk(chunkText)) replace:@"\\\"" withSequence:@"\""];
  return chunkText;
}

- (id)initWithNSString:(NSString *)text {
  if ((self = [super init])) {
    self.text = text;
  }
  return self;
}

- (id)getValue {
  return text_;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterCompilersJevalTextConstant class]) {
    OrgOssPdfreporterCompilersJevalTextConstant_TEXT_MATCH_ = @"^\".*\"$";
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterCompilersJevalTextConstant *typedCopy = (OrgOssPdfreporterCompilersJevalTextConstant *) copy;
  typedCopy.text = text_;
}

@end
