//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/JEvalExpression.java
//
//  Created by kendra on 9/27/13.
//

#ifndef _OrgOssPdfreporterCompilersJevalJEvalExpression_H_
#define _OrgOssPdfreporterCompilersJevalJEvalExpression_H_

@class JavaUtilLoggingLogger;
@class OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum;
@class OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgOssPdfreporterCompilersJevalIVariable;
@protocol OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction;

#import "JreEmulation.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/VariableResolver.h"

@interface OrgOssPdfreporterCompilersJevalJEvalExpression : NSObject {
 @public
  id<JavaUtilMap> variables_;
  id<JavaUtilMap> userFunctions_;
  OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *valueEvaluator_;
  OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *oldValueEvaluator_;
  NSString *expression_;
}

@property (nonatomic, strong) id<JavaUtilMap> variables;
@property (nonatomic, strong) id<JavaUtilMap> userFunctions;
@property (nonatomic, strong) OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *valueEvaluator;
@property (nonatomic, strong) OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *oldValueEvaluator;
@property (nonatomic, copy) NSString *expression;

+ (NSString *)EXP_TRUE;
+ (void)setEXP_TRUE:(NSString *)EXP_TRUE;
+ (JavaUtilLoggingLogger *)logger;
- (id)init;
- (void)putFunctionWithOrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction:(id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>)function;
+ (OrgOssPdfreporterCompilersJevalJEvalExpression *)newInstanceWithJavaUtilList:(id<JavaUtilList>)chunks OBJC_METHOD_FAMILY_NONE;
- (void)parseWithJavaUtilList:(id<JavaUtilList>)chunks;
- (NSString *)getExpression;
- (id<OrgOssPdfreporterCompilersJevalIVariable>)getVariableWithNSString:(NSString *)name;
- (id<OrgOssPdfreporterCompilersJevalIVariable>)getParameterWithNSString:(NSString *)name;
- (id<OrgOssPdfreporterCompilersJevalIVariable>)getFieldWithNSString:(NSString *)name;
- (NSString *)buildExpressionWithJavaUtilList:(id<JavaUtilList>)chunks;
- (NSString *)getKeyWithOrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum:(OrgOssPdfreporterCompilersJevalIExpressionChunk_ExpresionTypeEnum *)type
                                                                             withNSString:(NSString *)name;
- (NSString *)evaluateValue;
- (NSString *)evaluateOldValue;
- (NSString *)getStringWithId:(id)value;
@end

@interface OrgOssPdfreporterCompilersJevalJEvalExpression_ValueResolver : NSObject < OrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver > {
 @public
  OrgOssPdfreporterCompilersJevalJEvalExpression *this$0_;
}

@property (nonatomic, strong) OrgOssPdfreporterCompilersJevalJEvalExpression *this$0;

- (NSString *)resolveVariableWithNSString:(NSString *)variableName;
- (id)initWithOrgOssPdfreporterCompilersJevalJEvalExpression:(OrgOssPdfreporterCompilersJevalJEvalExpression *)outer$;
@end

@interface OrgOssPdfreporterCompilersJevalJEvalExpression_OldValueResolver : NSObject < OrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver > {
 @public
  OrgOssPdfreporterCompilersJevalJEvalExpression *this$0_;
}

@property (nonatomic, strong) OrgOssPdfreporterCompilersJevalJEvalExpression *this$0;

- (NSString *)resolveVariableWithNSString:(NSString *)variableName;
- (id)initWithOrgOssPdfreporterCompilersJevalJEvalExpression:(OrgOssPdfreporterCompilersJevalJEvalExpression *)outer$;
@end

#endif // _OrgOssPdfreporterCompilersJevalJEvalExpression_H_
