//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/xml/JRCrosstabRowGroupFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstabRowGroup.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabRowPositionEnum.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCrosstabGroupFactory.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCrosstabRowGroupFactory.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory

static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_rowGroup_ = @"rowGroup";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_crosstabRowHeader_ = @"crosstabRowHeader";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_crosstabTotalRowHeader_ = @"crosstabTotalRowHeader";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_width_ = @"width";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_headerPosition_ = @"headerPosition";

+ (NSString *)ELEMENT_rowGroup {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_rowGroup_;
}

+ (NSString *)ELEMENT_crosstabRowHeader {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_crosstabRowHeader_;
}

+ (NSString *)ELEMENT_crosstabTotalRowHeader {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ELEMENT_crosstabTotalRowHeader_;
}

+ (NSString *)ATTRIBUTE_width {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_width_;
}

+ (NSString *)ATTRIBUTE_headerPosition {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_headerPosition_;
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabRowGroup *group = [[OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabRowGroup alloc] init];
  [self setGroupAttsWithOrgOssPdfreporterXmlParsersIAttributes:attributes withOrgOssPdfreporterCrosstabsDesignJRDesignCrosstabGroup:group];
  NSString *widthAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_width_];
  if (widthAttr != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabRowGroup *) nil_chk(group)) setWidthWithInt:[JavaLangInteger parseIntWithNSString:widthAttr]];
  }
  OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnumEnum *position = [OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabRowGroupFactory_ATTRIBUTE_headerPosition_]];
  if (position != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabRowGroup *) nil_chk(group)) setPositionWithOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnumEnum:position];
  }
  return group;
}

- (id)init {
  return [super init];
}

@end
