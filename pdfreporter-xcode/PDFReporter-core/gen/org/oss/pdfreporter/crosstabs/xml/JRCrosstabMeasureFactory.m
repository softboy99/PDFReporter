//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/xml/JRCrosstabMeasureFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabPercentageEnum.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCrosstabMeasureFactory.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory

static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ELEMENT_measure_ = @"measure";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ELEMENT_measureExpression_ = @"measureExpression";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_name_ = @"name";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_class_ = @"class";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_calculation_ = @"calculation";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_incrementerFactoryClass_ = @"incrementerFactoryClass";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageOf_ = @"percentageOf";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageCalculatorClass_ = @"percentageCalculatorClass";

+ (NSString *)ELEMENT_measure {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ELEMENT_measure_;
}

+ (NSString *)ELEMENT_measureExpression {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ELEMENT_measureExpression_;
}

+ (NSString *)ATTRIBUTE_name {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_name_;
}

+ (NSString *)ATTRIBUTE_class {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_class_;
}

+ (NSString *)ATTRIBUTE_calculation {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_calculation_;
}

+ (NSString *)ATTRIBUTE_incrementerFactoryClass {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_incrementerFactoryClass_;
}

+ (NSString *)ATTRIBUTE_percentageOf {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageOf_;
}

+ (NSString *)ATTRIBUTE_percentageCalculatorClass {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageCalculatorClass_;
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *measure = [[OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure alloc] init];
  [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_name_]];
  [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setValueClassNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_class_]];
  [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setIncrementerFactoryClassNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_incrementerFactoryClass_]];
  NSString *calcAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_calculation_];
  if (calcAttr != nil) {
    OrgOssPdfreporterEngineTypeCalculationEnumEnum *calculation = [OrgOssPdfreporterEngineTypeCalculationEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_calculation]]];
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setCalculationWithOrgOssPdfreporterEngineTypeCalculationEnumEnum:calculation];
  }
  OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnumEnum *percentage = [OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageOf_]];
  if (percentage != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setPercentageTypeWithOrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnumEnum:percentage];
  }
  NSString *percentageCalcAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabMeasureFactory_ATTRIBUTE_percentageCalculatorClass_];
  if (percentageCalcAttr != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabMeasure *) nil_chk(measure)) setPercentageCalculatorClassNameWithNSString:percentageCalcAttr];
  }
  return measure;
}

- (id)init {
  return [super init];
}

@end
