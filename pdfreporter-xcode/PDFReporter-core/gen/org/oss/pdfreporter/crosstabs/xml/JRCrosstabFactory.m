//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/xml/JRCrosstabFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstab.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCrosstabFactory.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/type/RunDirectionEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory

static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_crosstab_ = @"crosstab";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_whenNoDataCell_ = @"whenNoDataCell";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_crosstabHeaderCell_ = @"crosstabHeaderCell";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_parametersMapExpression_ = @"parametersMapExpression";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_columnBreakOffset_ = @"columnBreakOffset";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatColumnHeaders_ = @"isRepeatColumnHeaders";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatRowHeaders_ = @"isRepeatRowHeaders";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_ignoreWidth_ = @"ignoreWidth";

+ (NSString *)ELEMENT_crosstab {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_crosstab_;
}

+ (NSString *)ELEMENT_whenNoDataCell {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_whenNoDataCell_;
}

+ (NSString *)ELEMENT_crosstabHeaderCell {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_crosstabHeaderCell_;
}

+ (NSString *)ELEMENT_parametersMapExpression {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ELEMENT_parametersMapExpression_;
}

+ (NSString *)ATTRIBUTE_columnBreakOffset {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_columnBreakOffset_;
}

+ (NSString *)ATTRIBUTE_isRepeatColumnHeaders {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatColumnHeaders_;
}

+ (NSString *)ATTRIBUTE_isRepeatRowHeaders {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatRowHeaders_;
}

+ (NSString *)ATTRIBUTE_ignoreWidth {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_ignoreWidth_;
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 2];
  OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *crosstab = [[OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab alloc] initWithOrgOssPdfreporterEngineJRDefaultStyleProvider:jasperDesign];
  NSString *columnBreakOffsetAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_columnBreakOffset_];
  if (columnBreakOffsetAttr != nil && [((NSString *) nil_chk(columnBreakOffsetAttr)) length] > 0) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) setColumnBreakOffsetWithInt:[JavaLangInteger parseIntWithNSString:columnBreakOffsetAttr]];
  }
  NSString *repeatColHeadersAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatColumnHeaders_];
  if (repeatColHeadersAttr != nil && [((NSString *) nil_chk(repeatColHeadersAttr)) length] > 0) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) setRepeatColumnHeadersWithBOOL:[[JavaLangBoolean valueOfWithNSString:repeatColHeadersAttr] booleanValue]];
  }
  NSString *repeatRowHeadersAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_isRepeatRowHeaders_];
  if (repeatRowHeadersAttr != nil && [((NSString *) nil_chk(repeatColHeadersAttr)) length] > 0) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) setRepeatRowHeadersWithBOOL:[[JavaLangBoolean valueOfWithNSString:repeatRowHeadersAttr] booleanValue]];
  }
  NSString *runDirectionAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_runDirection]];
  if (runDirectionAttr != nil) {
    OrgOssPdfreporterEngineTypeRunDirectionEnumEnum *runDir = [OrgOssPdfreporterEngineTypeRunDirectionEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:[OrgOssPdfreporterEngineXmlJRXmlConstants ATTRIBUTE_runDirection]]];
    if (runDir != nil) {
      [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) setRunDirectionWithOrgOssPdfreporterEngineTypeRunDirectionEnumEnum:runDir];
    }
  }
  NSString *ignoreWidthAttr = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabFactory_ATTRIBUTE_ignoreWidth_];
  if (ignoreWidthAttr != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(crosstab)) setIgnoreWidthWithJavaLangBoolean:[JavaLangBoolean valueOfWithNSString:ignoreWidthAttr]];
  }
  return crosstab;
}

- (id)init {
  return [super init];
}

@end
