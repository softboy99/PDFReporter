//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/xml/JRCellContentsFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCellContents.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCellContentsFactory.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory

static NSString * OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ELEMENT_cellContents_ = @"cellContents";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_backcolor_ = @"backcolor";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_mode_ = @"mode";
static NSString * OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_style_ = @"style";

+ (NSString *)ELEMENT_cellContents {
  return OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ELEMENT_cellContents_;
}

+ (NSString *)ATTRIBUTE_backcolor {
  return OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_backcolor_;
}

+ (NSString *)ATTRIBUTE_mode {
  return OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_mode_;
}

+ (NSString *)ATTRIBUTE_style {
  return OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_style_;
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  OrgOssPdfreporterCrosstabsDesignJRDesignCellContents *cell = [[OrgOssPdfreporterCrosstabsDesignJRDesignCellContents alloc] init];
  NSString *backcolor = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_backcolor_];
  if (backcolor != nil && [((NSString *) nil_chk(backcolor)) length] > 0) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCellContents *) nil_chk(cell)) setBackcolorWithOrgOssPdfreporterGeometryIColor:[OrgOssPdfreporterEngineUtilJRColorUtil getColorWithNSString:backcolor withOrgOssPdfreporterGeometryIColor:nil]];
  }
  OrgOssPdfreporterEngineTypeModeEnumEnum *mode = [OrgOssPdfreporterEngineTypeModeEnumEnum getByNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_mode_]];
  if (mode != nil) {
    [((OrgOssPdfreporterCrosstabsDesignJRDesignCellContents *) nil_chk(cell)) setModeWithOrgOssPdfreporterEngineTypeModeEnumEnum:mode];
  }
  NSString *styleName = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCellContentsFactory_ATTRIBUTE_style_];
  if (styleName != nil) {
    OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getCount] - 2];
    id<JavaUtilMap> stylesMap = [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getStylesMap];
    if ([((id<JavaUtilMap>) nil_chk(stylesMap)) containsKeyWithId:styleName]) {
      id<OrgOssPdfreporterEngineJRStyle> style = [((id<JavaUtilMap>) nil_chk(stylesMap)) getWithId:styleName];
      [((OrgOssPdfreporterCrosstabsDesignJRDesignCellContents *) nil_chk(cell)) setStyleWithOrgOssPdfreporterEngineJRStyle:style];
    }
    else {
      [((OrgOssPdfreporterCrosstabsDesignJRDesignCellContents *) nil_chk(cell)) setStyleNameReferenceWithNSString:styleName];
    }
  }
  return cell;
}

- (id)init {
  return [super init];
}

@end
