//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@implementation OrgOssPdfreporterCrosstabsBaseJRBaseCellContents

@synthesize defaultStyleProvider = defaultStyleProvider_;
@synthesize style = style_;
@synthesize styleNameReference = styleNameReference_;
@synthesize modeValue = modeValue_;
@synthesize backcolor = backcolor_;
@synthesize lineBox = lineBox_;
@synthesize width = width_;
@synthesize height = height_;
@synthesize propertiesMap = propertiesMap_;

- (id)initWithOrgOssPdfreporterCrosstabsJRCellContents:(id<OrgOssPdfreporterCrosstabsJRCellContents>)cell
    withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  if ((self = [super initWithOrgOssPdfreporterEngineJRElementGroup:cell withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:factory])) {
    self.defaultStyleProvider = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getDefaultStyleProvider];
    style_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getStyleWithOrgOssPdfreporterEngineJRStyle:[((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getStyle]];
    styleNameReference_ = [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getStyleNameReference];
    modeValue_ = [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getModeValue];
    backcolor_ = [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getBackcolor];
    lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
    width_ = [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getWidth];
    height_ = [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getHeight];
    self.propertiesMap = [OrgOssPdfreporterEngineJRPropertiesMap getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder:cell];
  }
  return self;
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return backcolor_;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (int)getWidth {
  return width_;
}

- (int)getHeight {
  return height_;
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return style_;
}

- (OrgOssPdfreporterEngineTypeModeEnumEnum *)getModeValue {
  return modeValue_;
}

- (NSString *)getStyleNameReference {
  return styleNameReference_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [OrgOssPdfreporterGeometryIColor black];
}

- (id)clone {
  OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *clone = (OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) [super clone];
  ((OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) nil_chk(clone)).lineBox = lineBox_ == nil ? nil : (id<OrgOssPdfreporterEngineJRLineBox>) [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:clone];
  ((OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) nil_chk(clone)).propertiesMap = [OrgOssPdfreporterEngineJRPropertiesMap getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder:self];
  return clone;
}

- (BOOL)hasProperties {
  return propertiesMap_ != nil && [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(propertiesMap_)) hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  if (propertiesMap_ == nil) {
    propertiesMap_ = [[OrgOssPdfreporterEngineJRPropertiesMap alloc] init];
  }
  return propertiesMap_;
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *typedCopy = (OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) copy;
  typedCopy.defaultStyleProvider = defaultStyleProvider_;
  typedCopy.style = style_;
  typedCopy.styleNameReference = styleNameReference_;
  typedCopy.modeValue = modeValue_;
  typedCopy.backcolor = backcolor_;
  typedCopy.lineBox = lineBox_;
  typedCopy.width = width_;
  typedCopy.height = height_;
  typedCopy.propertiesMap = propertiesMap_;
}

@end
