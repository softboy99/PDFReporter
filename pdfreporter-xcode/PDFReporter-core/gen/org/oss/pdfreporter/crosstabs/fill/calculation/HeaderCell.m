//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/fill/calculation/HeaderCell.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "org/oss/pdfreporter/crosstabs/fill/calculation/BucketDefinition.h"
#include "org/oss/pdfreporter/crosstabs/fill/calculation/HeaderCell.h"

@implementation OrgOssPdfreporterCrosstabsFillCalculationHeaderCell

@synthesize bucketValues = bucketValues_;
@synthesize levelSpan = levelSpan_;
@synthesize depthSpan = depthSpan_;
@synthesize isTotal_ = isTotal__;
@synthesize totals = totals_;

- (id)initWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:(IOSObjectArray *)bucketValues
                                                                            withInt:(int)levelSpan
                                                                            withInt:(int)depthSpan
  withOrgOssPdfreporterCrosstabsFillCalculationMeasureDefinition_MeasureValueArray2:(IOSObjectArray *)totals {
  if ((self = [super init])) {
    self.bucketValues = bucketValues;
    self.levelSpan = levelSpan;
    self.depthSpan = depthSpan;
    self.totals = totals;
    BOOL foundTotal = NO;
    for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(bucketValues)) count]; i++) {
      if ([((IOSObjectArray *) nil_chk(bucketValues)) objectAtIndex:i] != nil && [((OrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_Bucket *) nil_chk([((IOSObjectArray *) nil_chk(bucketValues)) objectAtIndex:i])) isTotal]) {
        foundTotal = YES;
        break;
      }
    }
    isTotal__ = foundTotal;
  }
  return self;
}

- (IOSObjectArray *)getBucketValues {
  return bucketValues_;
}

- (int)getLevelSpan {
  return levelSpan_;
}

- (int)getDepthSpan {
  return depthSpan_;
}

- (BOOL)isTotal {
  return isTotal__;
}

- (IOSObjectArray *)getTotals {
  return totals_;
}

+ (OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *)createLevelSpanCopyWithOrgOssPdfreporterCrosstabsFillCalculationHeaderCell:(OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *)cell
                                                                                                                            withInt:(int)newLevelSpan {
  return [[OrgOssPdfreporterCrosstabsFillCalculationHeaderCell alloc] initWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:((OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *) nil_chk(cell)).bucketValues withInt:newLevelSpan withInt:[((OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *) nil_chk(cell)) getDepthSpan] withOrgOssPdfreporterCrosstabsFillCalculationMeasureDefinition_MeasureValueArray2:((OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *) nil_chk(cell)).totals];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *typedCopy = (OrgOssPdfreporterCrosstabsFillCalculationHeaderCell *) copy;
  typedCopy.bucketValues = bucketValues_;
  typedCopy.levelSpan = levelSpan_;
  typedCopy.depthSpan = depthSpan_;
  typedCopy.isTotal_ = isTotal__;
  typedCopy.totals = totals_;
}

@end
