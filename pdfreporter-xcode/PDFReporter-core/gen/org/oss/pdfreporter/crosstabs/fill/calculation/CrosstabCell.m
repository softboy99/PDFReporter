//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/fill/calculation/CrosstabCell.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSObjectArray.h"
#include "org/oss/pdfreporter/crosstabs/fill/calculation/BucketDefinition.h"
#include "org/oss/pdfreporter/crosstabs/fill/calculation/CrosstabCell.h"

@implementation OrgOssPdfreporterCrosstabsFillCalculationCrosstabCell

@synthesize rowBucketValues = rowBucketValues_;
@synthesize rowTotalGroupIndex = rowTotalGroupIndex_;
@synthesize columnBucketValues = columnBucketValues_;
@synthesize columnTotalGroupIndex = columnTotalGroupIndex_;
@synthesize mesureValues = mesureValues_;
@synthesize totals = totals_;

- (id)initWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:(IOSObjectArray *)rowBucketValues
          withOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:(IOSObjectArray *)columnBucketValues
   withOrgOssPdfreporterCrosstabsFillCalculationMeasureDefinition_MeasureValueArray:(IOSObjectArray *)mesureValues
  withOrgOssPdfreporterCrosstabsFillCalculationMeasureDefinition_MeasureValueArray3:(IOSObjectArray *)totals {
  if ((self = [super init])) {
    self.rowBucketValues = rowBucketValues;
    rowTotalGroupIndex_ = [OrgOssPdfreporterCrosstabsFillCalculationCrosstabCell getTotalIndexWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:rowBucketValues];
    self.columnBucketValues = columnBucketValues;
    columnTotalGroupIndex_ = [OrgOssPdfreporterCrosstabsFillCalculationCrosstabCell getTotalIndexWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:columnBucketValues];
    self.mesureValues = mesureValues;
    self.totals = totals;
  }
  return self;
}

+ (int)getTotalIndexWithOrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_BucketArray:(IOSObjectArray *)values {
  int i = 0;
  while (i < (int) [((IOSObjectArray *) nil_chk(values)) count] && ![((OrgOssPdfreporterCrosstabsFillCalculationBucketDefinition_Bucket *) nil_chk([((IOSObjectArray *) nil_chk(values)) objectAtIndex:i])) isTotal]) {
    ++i;
  }
  return i;
}

- (IOSObjectArray *)getMesureValues {
  return mesureValues_;
}

- (IOSObjectArray *)getColumnBucketValues {
  return columnBucketValues_;
}

- (IOSObjectArray *)getRowBucketValues {
  return rowBucketValues_;
}

- (int)getColumnTotalGroupIndex {
  return columnTotalGroupIndex_;
}

- (int)getRowTotalGroupIndex {
  return rowTotalGroupIndex_;
}

- (IOSObjectArray *)getTotals {
  return totals_;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterCrosstabsFillCalculationCrosstabCell *typedCopy = (OrgOssPdfreporterCrosstabsFillCalculationCrosstabCell *) copy;
  typedCopy.rowBucketValues = rowBucketValues_;
  typedCopy.rowTotalGroupIndex = rowTotalGroupIndex_;
  typedCopy.columnBucketValues = columnBucketValues_;
  typedCopy.columnTotalGroupIndex = columnTotalGroupIndex_;
  typedCopy.mesureValues = mesureValues_;
  typedCopy.totals = totals_;
}

@end
