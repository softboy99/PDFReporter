//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabMeasure.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabObjectFactory.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRPercentageCalculator.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRPercentageCalculatorFactory.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabPercentageEnum.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/fill/JRDefaultIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRExtendedIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/engine/fill/JRIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRIncrementerFactoryCache.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"

@implementation OrgOssPdfreporterCrosstabsFillJRFillCrosstabMeasure

@synthesize parentMeasure = parentMeasure_;
@synthesize variable = variable_;
@synthesize incrementerFactory = incrementerFactory_;
@synthesize percentageCalculator = percentageCalculator_;

- (id)initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure:(id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>)measure
withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory:(OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *)factory {
  if ((self = [super init])) {
    [((OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *) nil_chk(factory)) putWithId:measure withId:self];
    parentMeasure_ = measure;
    variable_ = [((OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *) nil_chk(factory)) getVariableWithOrgOssPdfreporterEngineJRVariable:[((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(measure)) getVariable]];
    incrementerFactory_ = [self createIncrementerFactory];
    percentageCalculator_ = [self createPercentageCalculator];
  }
  return self;
}

- (NSString *)getName {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getName];
}

- (NSString *)getValueClassName {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getValueClassName];
}

- (IOSClass *)getValueClass {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getValueClass];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getValueExpression {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getValueExpression];
}

- (OrgOssPdfreporterEngineTypeCalculationEnumEnum *)getCalculationValue {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getCalculationValue];
}

- (NSString *)getIncrementerFactoryClassName {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getIncrementerFactoryClassName];
}

- (IOSClass *)getIncrementerFactoryClass {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getIncrementerFactoryClass];
}

- (OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnumEnum *)getPercentageType {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getPercentageType];
}

- (id<OrgOssPdfreporterEngineJRVariable>)getVariable {
  return variable_;
}

- (OrgOssPdfreporterEngineFillJRFillVariable *)getFillVariable {
  return variable_;
}

- (id<OrgOssPdfreporterEngineFillJRExtendedIncrementerFactory>)getIncrementerFactory {
  return incrementerFactory_;
}

- (id<OrgOssPdfreporterCrosstabsFillJRPercentageCalculator>)getPercentageCalculator {
  return percentageCalculator_;
}

- (id<OrgOssPdfreporterEngineFillJRExtendedIncrementerFactory>)createIncrementerFactory {
  id<OrgOssPdfreporterEngineFillJRExtendedIncrementerFactory> incrFactory;
  NSString *incrementerFactoryClassName = [self getIncrementerFactoryClassName];
  if (incrementerFactoryClassName == nil) {
    incrFactory = [OrgOssPdfreporterEngineFillJRDefaultIncrementerFactory getFactoryWithIOSClass:[self getValueClass]];
  }
  else {
    incrFactory = (id<OrgOssPdfreporterEngineFillJRExtendedIncrementerFactory>) [OrgOssPdfreporterEngineFillJRIncrementerFactoryCache getInstanceWithIOSClass:[self getIncrementerFactoryClass]];
  }
  return incrFactory;
}

- (id<OrgOssPdfreporterCrosstabsFillJRPercentageCalculator>)createPercentageCalculator {
  id<OrgOssPdfreporterCrosstabsFillJRPercentageCalculator> percentageCalc;
  if ([self getPercentageType] == [OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnumEnum GRAND_TOTAL]) {
    percentageCalc = [OrgOssPdfreporterCrosstabsFillJRPercentageCalculatorFactory getPercentageCalculatorWithIOSClass:[self getPercentageCalculatorClass] withIOSClass:[self getValueClass]];
  }
  else {
    percentageCalc = nil;
  }
  return percentageCalc;
}

- (NSString *)getPercentageCalculatorClassName {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getPercentageCalculatorClassName];
}

- (IOSClass *)getPercentageCalculatorClass {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(parentMeasure_)) getPercentageCalculatorClass];
}

- (id)clone {
  @throw [[JavaLangUnsupportedOperationException alloc] init];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterCrosstabsFillJRFillCrosstabMeasure *typedCopy = (OrgOssPdfreporterCrosstabsFillJRFillCrosstabMeasure *) copy;
  typedCopy.parentMeasure = parentMeasure_;
  typedCopy.variable = variable_;
  typedCopy.incrementerFactory = incrementerFactory_;
  typedCopy.percentageCalculator = percentageCalculator_;
}

@end
