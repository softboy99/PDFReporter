//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/sql/factory/DateUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "org/oss/pdfreporter/sql/factory/DateUtil.h"

@implementation OrgOssPdfreporterSqlFactoryDateUtil

+ (JavaUtilCalendar *)getCalendarWithJavaUtilDate:(JavaUtilDate *)date {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:date];
  return cal;
}

+ (JavaUtilDate *)getTimeWithInt:(int)hour
                         withInt:(int)minute
                         withInt:(int)second {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  [OrgOssPdfreporterSqlFactoryDateUtil setTimeWithJavaUtilCalendar:cal withInt:hour withInt:minute withInt:second];
  return [((JavaUtilCalendar *) nil_chk(cal)) getTime];
}

+ (JavaUtilDate *)getDateWithInt:(int)year
                         withInt:(int)month
                         withInt:(int)day {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  [OrgOssPdfreporterSqlFactoryDateUtil setDateWithJavaUtilCalendar:cal withInt:year withInt:month withInt:day];
  return [((JavaUtilCalendar *) nil_chk(cal)) getTime];
}

+ (JavaUtilDate *)getDateTimeWithInt:(int)year
                             withInt:(int)month
                             withInt:(int)day
                             withInt:(int)hour
                             withInt:(int)minute
                             withInt:(int)second {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  [OrgOssPdfreporterSqlFactoryDateUtil setDateWithJavaUtilCalendar:cal withInt:year withInt:month withInt:day];
  [OrgOssPdfreporterSqlFactoryDateUtil setTimeWithJavaUtilCalendar:cal withInt:hour withInt:minute withInt:second];
  return [((JavaUtilCalendar *) nil_chk(cal)) getTime];
}

+ (JavaUtilDate *)getTimestampWithInt:(int)year
                              withInt:(int)month
                              withInt:(int)day
                              withInt:(int)hour
                              withInt:(int)minute
                              withInt:(int)second
                              withInt:(int)millisecond {
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  [OrgOssPdfreporterSqlFactoryDateUtil setDateWithJavaUtilCalendar:cal withInt:year withInt:month withInt:day];
  [OrgOssPdfreporterSqlFactoryDateUtil setTimeWithJavaUtilCalendar:cal withInt:hour withInt:minute withInt:second];
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_MILLISECOND withInt:millisecond];
  return [((JavaUtilCalendar *) nil_chk(cal)) getTime];
}

+ (void)setTimeWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(int)hour
                            withInt:(int)minute
                            withInt:(int)second {
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_HOUR_OF_DAY withInt:hour];
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_MINUTE withInt:minute];
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_SECOND withInt:second];
}

+ (void)setDateWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(int)year
                            withInt:(int)month
                            withInt:(int)day {
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_YEAR withInt:year];
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_MONTH withInt:month - 1];
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_DATE withInt:day];
}

- (id)init {
  return [super init];
}

@end
