//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/image/AbstractImageFactory.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/image/AbstractImageFactory.h"
#include "org/oss/pdfreporter/image/IImageManager.h"
#include "org/oss/pdfreporter/image/factory/IImageFactory.h"
#include "org/oss/pdfreporter/registry/Session.h"

@implementation OrgOssPdfreporterImageAbstractImageFactory

@synthesize session = session_;

- (void)setSessionWithOrgOssPdfreporterRegistrySession:(OrgOssPdfreporterRegistrySession *)session {
  if (self.session != nil) {
    [((OrgOssPdfreporterRegistrySession *) nil_chk(session)) removeListenerWithOrgOssPdfreporterRegistryISessionListener:[self getImageManager]];
  }
  self.session = session;
  [((OrgOssPdfreporterRegistrySession *) nil_chk(session)) addListenerWithOrgOssPdfreporterRegistryISessionListener:[self getImageManager]];
}

- (OrgOssPdfreporterRegistrySession *)getSession {
  return session_;
}

- (id<OrgOssPdfreporterImageIImageManager>)getImageManager {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)init {
  if ((self = [super init])) {
    session_ = nil;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterImageAbstractImageFactory *typedCopy = (OrgOssPdfreporterImageAbstractImageFactory *) copy;
  typedCopy.session = session_;
}

@end
