//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/extensions/ListExtensionsRegistry.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/extensions/ListExtensionsRegistry.h"

@implementation OrgOssPdfreporterExtensionsListExtensionsRegistry

@synthesize extensions = extensions_;

- (id)init {
  if ((self = [super init])) {
    extensions_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (OrgOssPdfreporterExtensionsListExtensionsRegistry *)addWithIOSClass:(IOSClass *)type
                                                                withId:(id)extension {
  id<JavaUtilList> list = [((id<JavaUtilMap>) nil_chk(extensions_)) getWithId:type];
  if (list == nil) {
    list = [[JavaUtilArrayList alloc] init];
    (void) [((id<JavaUtilMap>) nil_chk(extensions_)) putWithId:type withId:list];
  }
  [((id<JavaUtilList>) nil_chk(list)) addWithId:extension];
  return self;
}

- (id<JavaUtilList>)getExtensionsWithIOSClass:(IOSClass *)extensionType {
  id<JavaUtilList> list = (id<JavaUtilList>) [((id<JavaUtilMap>) nil_chk(extensions_)) getWithId:extensionType];
  return list;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterExtensionsListExtensionsRegistry *typedCopy = (OrgOssPdfreporterExtensionsListExtensionsRegistry *) copy;
  typedCopy.extensions = extensions_;
}

@end
