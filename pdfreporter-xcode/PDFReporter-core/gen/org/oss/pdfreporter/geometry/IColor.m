//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/geometry/IColor.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/geometry/factory/IGeometryFactory.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"


@implementation OrgOssPdfreporterGeometryIColor

static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_white_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_WHITE_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_lightGray_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_LIGHT_GRAY_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_gray_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_GRAY_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_darkGray_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_DARK_GRAY_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_black_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_BLACK_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_red_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_RED_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_pink_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_PINK_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_orange_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_ORANGE_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_yellow_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_YELLOW_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_green_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_GREEN_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_magenta_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_MAGENTA_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_cyan_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_CYAN_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_blue_;
static id<OrgOssPdfreporterGeometryIColor> OrgOssPdfreporterGeometryIColor_BLUE_;

+ (id<OrgOssPdfreporterGeometryIColor>)white {
  return OrgOssPdfreporterGeometryIColor_white_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)WHITE {
  return OrgOssPdfreporterGeometryIColor_WHITE_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)lightGray {
  return OrgOssPdfreporterGeometryIColor_lightGray_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)LIGHT_GRAY {
  return OrgOssPdfreporterGeometryIColor_LIGHT_GRAY_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)gray {
  return OrgOssPdfreporterGeometryIColor_gray_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)GRAY {
  return OrgOssPdfreporterGeometryIColor_GRAY_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)darkGray {
  return OrgOssPdfreporterGeometryIColor_darkGray_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)DARK_GRAY {
  return OrgOssPdfreporterGeometryIColor_DARK_GRAY_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)black {
  return OrgOssPdfreporterGeometryIColor_black_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)BLACK {
  return OrgOssPdfreporterGeometryIColor_BLACK_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)red {
  return OrgOssPdfreporterGeometryIColor_red_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)RED {
  return OrgOssPdfreporterGeometryIColor_RED_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)pink {
  return OrgOssPdfreporterGeometryIColor_pink_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)PINK {
  return OrgOssPdfreporterGeometryIColor_PINK_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)orange {
  return OrgOssPdfreporterGeometryIColor_orange_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)ORANGE {
  return OrgOssPdfreporterGeometryIColor_ORANGE_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)yellow {
  return OrgOssPdfreporterGeometryIColor_yellow_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)YELLOW {
  return OrgOssPdfreporterGeometryIColor_YELLOW_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)green {
  return OrgOssPdfreporterGeometryIColor_green_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)GREEN {
  return OrgOssPdfreporterGeometryIColor_GREEN_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)magenta {
  return OrgOssPdfreporterGeometryIColor_magenta_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)MAGENTA {
  return OrgOssPdfreporterGeometryIColor_MAGENTA_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)cyan {
  return OrgOssPdfreporterGeometryIColor_cyan_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)CYAN {
  return OrgOssPdfreporterGeometryIColor_CYAN_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)blue {
  return OrgOssPdfreporterGeometryIColor_blue_;
}

+ (id<OrgOssPdfreporterGeometryIColor>)BLUE {
  return OrgOssPdfreporterGeometryIColor_BLUE_;
}

+ (void)initialize OBJC_METHOD_FAMILY_NONE {
  OrgOssPdfreporterGeometryIColor_white_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:255 withInt:255];
  OrgOssPdfreporterGeometryIColor_WHITE_ = OrgOssPdfreporterGeometryIColor_white_;
  OrgOssPdfreporterGeometryIColor_lightGray_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:192 withInt:192 withInt:192];
  OrgOssPdfreporterGeometryIColor_LIGHT_GRAY_ = OrgOssPdfreporterGeometryIColor_lightGray_;
  OrgOssPdfreporterGeometryIColor_gray_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:128 withInt:128 withInt:128];
  OrgOssPdfreporterGeometryIColor_GRAY_ = OrgOssPdfreporterGeometryIColor_gray_;
  OrgOssPdfreporterGeometryIColor_darkGray_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:64 withInt:64 withInt:64];
  OrgOssPdfreporterGeometryIColor_DARK_GRAY_ = OrgOssPdfreporterGeometryIColor_darkGray_;
  OrgOssPdfreporterGeometryIColor_black_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:0 withInt:0 withInt:0];
  OrgOssPdfreporterGeometryIColor_BLACK_ = OrgOssPdfreporterGeometryIColor_black_;
  OrgOssPdfreporterGeometryIColor_red_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:0 withInt:0];
  OrgOssPdfreporterGeometryIColor_RED_ = OrgOssPdfreporterGeometryIColor_red_;
  OrgOssPdfreporterGeometryIColor_pink_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:175 withInt:175];
  OrgOssPdfreporterGeometryIColor_PINK_ = OrgOssPdfreporterGeometryIColor_pink_;
  OrgOssPdfreporterGeometryIColor_orange_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:200 withInt:0];
  OrgOssPdfreporterGeometryIColor_ORANGE_ = OrgOssPdfreporterGeometryIColor_orange_;
  OrgOssPdfreporterGeometryIColor_yellow_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:255 withInt:0];
  OrgOssPdfreporterGeometryIColor_YELLOW_ = OrgOssPdfreporterGeometryIColor_yellow_;
  OrgOssPdfreporterGeometryIColor_green_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:0 withInt:255 withInt:0];
  OrgOssPdfreporterGeometryIColor_GREEN_ = OrgOssPdfreporterGeometryIColor_green_;
  OrgOssPdfreporterGeometryIColor_magenta_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:255 withInt:0 withInt:255];
  OrgOssPdfreporterGeometryIColor_MAGENTA_ = OrgOssPdfreporterGeometryIColor_magenta_;
  OrgOssPdfreporterGeometryIColor_cyan_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:0 withInt:255 withInt:255];
  OrgOssPdfreporterGeometryIColor_CYAN_ = OrgOssPdfreporterGeometryIColor_cyan_;
  OrgOssPdfreporterGeometryIColor_blue_ = [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk([OrgOssPdfreporterRegistryApiRegistry getGeometryFactory])) newColorWithInt:0 withInt:0 withInt:255];
  OrgOssPdfreporterGeometryIColor_BLUE_ = OrgOssPdfreporterGeometryIColor_blue_;
}

@end

static OrgOssPdfreporterGeometryIColor_TransparencyEnum *OrgOssPdfreporterGeometryIColor_TransparencyEnum_OPAQUE;
static OrgOssPdfreporterGeometryIColor_TransparencyEnum *OrgOssPdfreporterGeometryIColor_TransparencyEnum_BITMASK;
static OrgOssPdfreporterGeometryIColor_TransparencyEnum *OrgOssPdfreporterGeometryIColor_TransparencyEnum_TRANSLUCENT;
IOSObjectArray *OrgOssPdfreporterGeometryIColor_TransparencyEnum_values;

@implementation OrgOssPdfreporterGeometryIColor_TransparencyEnum

+ (OrgOssPdfreporterGeometryIColor_TransparencyEnum *)OPAQUE {
  return OrgOssPdfreporterGeometryIColor_TransparencyEnum_OPAQUE;
}
+ (OrgOssPdfreporterGeometryIColor_TransparencyEnum *)BITMASK {
  return OrgOssPdfreporterGeometryIColor_TransparencyEnum_BITMASK;
}
+ (OrgOssPdfreporterGeometryIColor_TransparencyEnum *)TRANSLUCENT {
  return OrgOssPdfreporterGeometryIColor_TransparencyEnum_TRANSLUCENT;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterGeometryIColor_TransparencyEnum class]) {
    OrgOssPdfreporterGeometryIColor_TransparencyEnum_OPAQUE = [[OrgOssPdfreporterGeometryIColor_TransparencyEnum alloc] initWithNSString:@"OPAQUE" withInt:0];
    OrgOssPdfreporterGeometryIColor_TransparencyEnum_BITMASK = [[OrgOssPdfreporterGeometryIColor_TransparencyEnum alloc] initWithNSString:@"BITMASK" withInt:1];
    OrgOssPdfreporterGeometryIColor_TransparencyEnum_TRANSLUCENT = [[OrgOssPdfreporterGeometryIColor_TransparencyEnum alloc] initWithNSString:@"TRANSLUCENT" withInt:2];
    OrgOssPdfreporterGeometryIColor_TransparencyEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgOssPdfreporterGeometryIColor_TransparencyEnum_OPAQUE, OrgOssPdfreporterGeometryIColor_TransparencyEnum_BITMASK, OrgOssPdfreporterGeometryIColor_TransparencyEnum_TRANSLUCENT, nil } count:3 type:[IOSClass classWithClass:[OrgOssPdfreporterGeometryIColor_TransparencyEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgOssPdfreporterGeometryIColor_TransparencyEnum_values];
}

+ (OrgOssPdfreporterGeometryIColor_TransparencyEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgOssPdfreporterGeometryIColor_TransparencyEnum_values count]; i++) {
    OrgOssPdfreporterGeometryIColor_TransparencyEnum *e = [OrgOssPdfreporterGeometryIColor_TransparencyEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
