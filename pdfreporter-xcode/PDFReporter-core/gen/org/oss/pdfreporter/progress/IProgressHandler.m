//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/progress/IProgressHandler.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/progress/IProgressHandler.h"


static OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_LOADING;
static OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_COMPILING;
static OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_FILLING;
static OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_EXPORTING;
IOSObjectArray *OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_values;

@implementation OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum

+ (OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *)LOADING {
  return OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_LOADING;
}
+ (OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *)COMPILING {
  return OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_COMPILING;
}
+ (OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *)FILLING {
  return OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_FILLING;
}
+ (OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *)EXPORTING {
  return OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_EXPORTING;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)name withInt:(int)ordinal {
  return [super initWithNSString:name withInt:ordinal];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum class]) {
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_LOADING = [[OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum alloc] initWithNSString:@"LOADING" withInt:0];
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_COMPILING = [[OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum alloc] initWithNSString:@"COMPILING" withInt:1];
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_FILLING = [[OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum alloc] initWithNSString:@"FILLING" withInt:2];
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_EXPORTING = [[OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum alloc] initWithNSString:@"EXPORTING" withInt:3];
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_LOADING, OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_COMPILING, OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_FILLING, OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_EXPORTING, nil } count:4 type:[IOSClass classWithClass:[OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_values];
}

+ (OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_values count]; i++) {
    OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum *e = [OrgOssPdfreporterProgressIProgressHandler_ProgressStateEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

@end
