//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/font/ScaledFontMetric.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/font/IFontMetric.h"
#include "org/oss/pdfreporter/font/ScaledFontMetric.h"

@implementation OrgOssPdfreporterFontScaledFontMetric

@synthesize baseFontMetric = baseFontMetric_;
@synthesize fontSize = fontSize_;

- (id)initWithOrgOssPdfreporterFontIFontMetric:(id<OrgOssPdfreporterFontIFontMetric>)baseFontMetric
                                     withFloat:(float)fontSize {
  if ((self = [super init])) {
    self.baseFontMetric = baseFontMetric;
    self.fontSize = fontSize;
  }
  return self;
}

- (int)measureTextWithNSString:(NSString *)text
                       withInt:(int)width
                      withBOOL:(BOOL)wordwrap {
  return [((id<OrgOssPdfreporterFontIFontMetric>) nil_chk(baseFontMetric_)) measureTextWithNSString:text withInt:width withBOOL:wordwrap];
}

- (int)getWidthWithNSString:(NSString *)text {
  return [((id<OrgOssPdfreporterFontIFontMetric>) nil_chk(baseFontMetric_)) getWidthWithNSString:text];
}

- (float)getAscent {
  return [((id<OrgOssPdfreporterFontIFontMetric>) nil_chk(baseFontMetric_)) getAscent] * fontSize_;
}

- (float)getDescent {
  return [((id<OrgOssPdfreporterFontIFontMetric>) nil_chk(baseFontMetric_)) getDescent] * fontSize_;
}

- (float)getLeading {
  return [((id<OrgOssPdfreporterFontIFontMetric>) nil_chk(baseFontMetric_)) getLeading] * fontSize_;
}

- (void)setFontSizeWithFloat:(float)fontSize {
  self.fontSize = fontSize;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterFontScaledFontMetric *typedCopy = (OrgOssPdfreporterFontScaledFontMetric *) copy;
  typedCopy.baseFontMetric = baseFontMetric_;
  typedCopy.fontSize = fontSize_;
}

@end
