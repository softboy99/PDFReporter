//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-core/src/org/oss/pdfreporter/repo/PersistenceUtil.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/repo/PersistenceService.h"
#include "org/oss/pdfreporter/repo/PersistenceServiceFactory.h"
#include "org/oss/pdfreporter/repo/PersistenceUtil.h"

@implementation OrgOssPdfreporterRepoPersistenceUtil

@synthesize jasperReportsContext = jasperReportsContext_;

- (id)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if ((self = [super init])) {
    self.jasperReportsContext = jasperReportsContext;
  }
  return self;
}

+ (OrgOssPdfreporterRepoPersistenceUtil *)getDefaultInstance {
  return [[OrgOssPdfreporterRepoPersistenceUtil alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:[OrgOssPdfreporterEngineDefaultJasperReportsContext getInstance]];
}

+ (OrgOssPdfreporterRepoPersistenceUtil *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return [[OrgOssPdfreporterRepoPersistenceUtil alloc] initWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

- (id<OrgOssPdfreporterRepoPersistenceService>)getServiceWithIOSClass:(IOSClass *)repositoryServiceType
                                                         withIOSClass:(IOSClass *)resourceType {
  id<JavaUtilList> factories = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getExtensionsWithIOSClass:[IOSClass classWithProtocol:@protocol(OrgOssPdfreporterRepoPersistenceServiceFactory)]];
  {
    id<JavaUtilIterator> iter__ = [((id<JavaUtilList>) nil_chk(factories)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(iter__)) hasNext]) {
      id<OrgOssPdfreporterRepoPersistenceServiceFactory> factory = [((id<JavaUtilIterator>) nil_chk(iter__)) next];
      id<OrgOssPdfreporterRepoPersistenceService> service = [((id<OrgOssPdfreporterRepoPersistenceServiceFactory>) nil_chk(factory)) getPersistenceServiceWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_ withIOSClass:repositoryServiceType withIOSClass:resourceType];
      if (service != nil) {
        return service;
      }
    }
  }
  return nil;
}

+ (id<OrgOssPdfreporterRepoPersistenceService>)getPersistenceServiceWithIOSClass:(IOSClass *)repositoryServiceType
                                                                    withIOSClass:(IOSClass *)resourceType {
  return [((OrgOssPdfreporterRepoPersistenceUtil *) nil_chk([OrgOssPdfreporterRepoPersistenceUtil getDefaultInstance])) getServiceWithIOSClass:repositoryServiceType withIOSClass:resourceType];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterRepoPersistenceUtil *typedCopy = (OrgOssPdfreporterRepoPersistenceUtil *) copy;
  typedCopy.jasperReportsContext = jasperReportsContext_;
}

@end
