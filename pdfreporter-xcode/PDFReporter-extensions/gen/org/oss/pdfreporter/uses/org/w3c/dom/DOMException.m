//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/w3c/dom/DOMException.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/uses/org/w3c/dom/DOMException.h"

@implementation OrgOssPdfreporterUsesOrgW3cDomDOMException

@synthesize code = code_;

+ (short int)INDEX_SIZE_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INDEX_SIZE_ERR;
}

+ (short int)DOMSTRING_SIZE_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_DOMSTRING_SIZE_ERR;
}

+ (short int)HIERARCHY_REQUEST_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_HIERARCHY_REQUEST_ERR;
}

+ (short int)WRONG_DOCUMENT_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_WRONG_DOCUMENT_ERR;
}

+ (short int)INVALID_CHARACTER_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INVALID_CHARACTER_ERR;
}

+ (short int)NO_DATA_ALLOWED_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_NO_DATA_ALLOWED_ERR;
}

+ (short int)NO_MODIFICATION_ALLOWED_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_NO_MODIFICATION_ALLOWED_ERR;
}

+ (short int)NOT_FOUND_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_FOUND_ERR;
}

+ (short int)NOT_SUPPORTED_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_SUPPORTED_ERR;
}

+ (short int)INUSE_ATTRIBUTE_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INUSE_ATTRIBUTE_ERR;
}

+ (short int)INVALID_STATE_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INVALID_STATE_ERR;
}

+ (short int)SYNTAX_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_SYNTAX_ERR;
}

+ (short int)INVALID_MODIFICATION_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INVALID_MODIFICATION_ERR;
}

+ (short int)NAMESPACE_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_NAMESPACE_ERR;
}

+ (short int)INVALID_ACCESS_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_INVALID_ACCESS_ERR;
}

+ (short int)VALIDATION_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_VALIDATION_ERR;
}

+ (short int)TYPE_MISMATCH_ERR {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_TYPE_MISMATCH_ERR;
}

+ (long long int)serialVersionUID {
  return OrgOssPdfreporterUsesOrgW3cDomDOMException_serialVersionUID;
}

- (id)initWithShortInt:(short int)code
          withNSString:(NSString *)message {
  if ((self = [super initWithNSString:message])) {
    self.code = code;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterUsesOrgW3cDomDOMException *typedCopy = (OrgOssPdfreporterUsesOrgW3cDomDOMException *) copy;
  typedCopy.code = code_;
}

@end
