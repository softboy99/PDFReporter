//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/java/lang/Bytes.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSByteArray.h"
#include "IOSCharArray.h"
#include "java/lang/System.h"
#include "org/oss/pdfreporter/uses/org/apache/java/lang/Bytes.h"

@implementation OrgOssPdfreporterUsesOrgApacheJavaLangBytes

static IOSCharArray * OrgOssPdfreporterUsesOrgApacheJavaLangBytes_hexDigits_;

+ (IOSCharArray *)hexDigits {
  return OrgOssPdfreporterUsesOrgApacheJavaLangBytes_hexDigits_;
}

+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b {
  IOSByteArray *z = [IOSByteArray arrayWithLength:(int) [((IOSByteArray *) nil_chk(a)) count] + (int) [((IOSByteArray *) nil_chk(b)) count]];
  [JavaLangSystem arraycopyWithId:a withInt:0 withId:z withInt:0 withInt:(int) [((IOSByteArray *) nil_chk(a)) count]];
  [JavaLangSystem arraycopyWithId:b withInt:0 withId:z withInt:(int) [((IOSByteArray *) nil_chk(a)) count] withInt:(int) [((IOSByteArray *) nil_chk(b)) count]];
  return z;
}

+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b
                        withByteArray:(IOSByteArray *)c {
  IOSByteArray *z = [IOSByteArray arrayWithLength:(int) [((IOSByteArray *) nil_chk(a)) count] + (int) [((IOSByteArray *) nil_chk(b)) count] + (int) [((IOSByteArray *) nil_chk(c)) count]];
  [JavaLangSystem arraycopyWithId:a withInt:0 withId:z withInt:0 withInt:(int) [((IOSByteArray *) nil_chk(a)) count]];
  [JavaLangSystem arraycopyWithId:b withInt:0 withId:z withInt:(int) [((IOSByteArray *) nil_chk(a)) count] withInt:(int) [((IOSByteArray *) nil_chk(b)) count]];
  [JavaLangSystem arraycopyWithId:c withInt:0 withId:z withInt:(int) [((IOSByteArray *) nil_chk(a)) count] + (int) [((IOSByteArray *) nil_chk(b)) count] withInt:(int) [((IOSByteArray *) nil_chk(c)) count]];
  return z;
}

+ (BOOL)areEqualWithByteArray:(IOSByteArray *)a
                withByteArray:(IOSByteArray *)b {
  int aLength = (int) [((IOSByteArray *) nil_chk(a)) count];
  if (aLength != (int) [((IOSByteArray *) nil_chk(b)) count]) return NO;
  for (int i = 0; i < aLength; i++) if ([((IOSByteArray *) nil_chk(a)) byteAtIndex:i] != [((IOSByteArray *) nil_chk(b)) byteAtIndex:i]) return NO;
  return YES;
}

+ (IOSByteArray *)copy__WithByteArray:(IOSByteArray *)b
                              withInt:(int)pos OBJC_METHOD_FAMILY_NONE {
  return [OrgOssPdfreporterUsesOrgApacheJavaLangBytes copy__WithByteArray:b withInt:pos withInt:(int) [((IOSByteArray *) nil_chk(b)) count] - pos];
}

+ (IOSByteArray *)copy__WithByteArray:(IOSByteArray *)b
                              withInt:(int)pos
                              withInt:(int)length OBJC_METHOD_FAMILY_NONE {
  IOSByteArray *z = [IOSByteArray arrayWithLength:length];
  [JavaLangSystem arraycopyWithId:b withInt:pos withId:z withInt:0 withInt:length];
  return z;
}

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest {
  [JavaLangSystem arraycopyWithId:src withInt:0 withId:dest withInt:0 withInt:(int) [((IOSByteArray *) nil_chk(src)) count]];
}

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(int)pos {
  [JavaLangSystem arraycopyWithId:src withInt:0 withId:dest withInt:pos withInt:(int) [((IOSByteArray *) nil_chk(src)) count]];
}

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(int)pos
                   withInt:(int)length {
  [JavaLangSystem arraycopyWithId:src withInt:0 withId:dest withInt:pos withInt:length];
}

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(int)srcpos
                   withInt:(int)destpos
                   withInt:(int)length {
  [JavaLangSystem arraycopyWithId:src withInt:srcpos withId:dest withInt:destpos withInt:length];
}

+ (IOSByteArray *)toBytesWithInt:(int)n {
  return [OrgOssPdfreporterUsesOrgApacheJavaLangBytes toBytesWithInt:n withByteArray:[IOSByteArray arrayWithLength:4]];
}

+ (IOSByteArray *)toBytesWithInt:(int)n
                   withByteArray:(IOSByteArray *)b {
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:3]) = (char) (n);
  URShiftAssignInt(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:2]) = (char) (n);
  URShiftAssignInt(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:1]) = (char) (n);
  URShiftAssignInt(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:0]) = (char) (n);
  return b;
}

+ (IOSByteArray *)toBytesWithLongInt:(long long int)n {
  return [OrgOssPdfreporterUsesOrgApacheJavaLangBytes toBytesWithLongInt:n withByteArray:[IOSByteArray arrayWithLength:8]];
}

+ (IOSByteArray *)toBytesWithLongInt:(long long int)n
                       withByteArray:(IOSByteArray *)b {
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:7]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:6]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:5]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:4]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:3]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:2]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:1]) = (char) (n);
  URShiftAssignLong(&n, 8);
  (*[((IOSByteArray *) nil_chk(b)) byteRefAtIndex:0]) = (char) (n);
  return b;
}

+ (int)toIntWithByteArray:(IOSByteArray *)b {
  return ((((int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:3]) & (int) 0xFF) + ((((int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:2]) & (int) 0xFF) << 8) + ((((int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:1]) & (int) 0xFF) << 16) + ((((int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:0]) & (int) 0xFF) << 24));
}

+ (long long int)toLongWithByteArray:(IOSByteArray *)b {
  return ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:7]) & (int) 0xFF) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:6]) & (int) 0xFF) << 8) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:5]) & (int) 0xFF) << 16) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:4]) & (int) 0xFF) << 24) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:3]) & (int) 0xFF) << 32) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:2]) & (int) 0xFF) << 40) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:1]) & (int) 0xFF) << 48) + ((((long long int) [((IOSByteArray *) nil_chk(b)) byteAtIndex:0]) & (int) 0xFF) << 56));
}

+ (NSString *)toStringWithByteArray:(IOSByteArray *)b {
  return [OrgOssPdfreporterUsesOrgApacheJavaLangBytes toStringWithByteArray:b withInt:0 withInt:(int) [((IOSByteArray *) nil_chk(b)) count]];
}

+ (NSString *)toStringWithByteArray:(IOSByteArray *)b
                            withInt:(int)offset
                            withInt:(int)length {
  IOSCharArray *buf = [IOSCharArray arrayWithLength:length * 2];
  for (int i = offset, j = 0, k; i < offset + length; i++) {
    k = [((IOSByteArray *) nil_chk(b)) byteAtIndex:i];
    (*[((IOSCharArray *) nil_chk(buf)) charRefAtIndex:j++]) = [((IOSCharArray *) nil_chk(OrgOssPdfreporterUsesOrgApacheJavaLangBytes_hexDigits_)) charAtIndex:((int) (((unsigned int) k) >> 4)) & (int) 0x0F];
    (*[((IOSCharArray *) nil_chk(buf)) charRefAtIndex:j++]) = [((IOSCharArray *) nil_chk(OrgOssPdfreporterUsesOrgApacheJavaLangBytes_hexDigits_)) charAtIndex:k & (int) 0x0F];
  }
  return [NSString stringWithCharacters:buf];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesOrgApacheJavaLangBytes class]) {
    OrgOssPdfreporterUsesOrgApacheJavaLangBytes_hexDigits_ = [IOSCharArray arrayWithCharacters:(unichar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16];
  }
}

@end
