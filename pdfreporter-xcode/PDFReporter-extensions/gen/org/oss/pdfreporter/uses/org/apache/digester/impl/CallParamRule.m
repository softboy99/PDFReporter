//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/digester/impl/CallParamRule.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Stack.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/impl/CallParamRule.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule

static JavaUtilLoggingLogger * OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger_;

@synthesize attributeName = attributeName_;
@synthesize paramIndex = paramIndex_;
@synthesize fromStack = fromStack_;
@synthesize stackIndex = stackIndex_;
@synthesize bodyTextStack = bodyTextStack_;

+ (JavaUtilLoggingLogger *)logger {
  return OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger_;
}

- (id)initWithInt:(int)paramIndex
     withNSString:(NSString *)attributeName {
  if ((self = [super init])) {
    attributeName_ = nil;
    paramIndex_ = 0;
    fromStack_ = NO;
    stackIndex_ = 0;
    self.paramIndex = paramIndex;
    self.attributeName = attributeName;
  }
  return self;
}

- (void)beginWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  id param = nil;
  if (attributeName_ != nil) {
    param = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:attributeName_];
  }
  else if (fromStack_) {
    param = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:stackIndex_];
    if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger_)) isLoggableWithJavaUtilLoggingLevel:[JavaUtilLoggingLevel FINEST]]) {
      JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] initWithNSString:@"[CallParamRule]{"];
      (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getMatch]];
      (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"} Save from stack; from stack?"])) appendWithBOOL:fromStack_];
      (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"; object="])) appendWithId:param];
      [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger_)) finestWithNSString:[((JavaLangStringBuffer *) nil_chk(sb)) description]];
    }
  }
  if (param != nil) {
    IOSObjectArray *parameters = (IOSObjectArray *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekParams];
    (void) [((IOSObjectArray *) nil_chk(parameters)) replaceObjectAtIndex:paramIndex_ withObject:param];
  }
}

- (void)bodyWithNSString:(NSString *)bodyText {
  if (attributeName_ == nil && !fromStack_) {
    if (bodyTextStack_ == nil) {
      bodyTextStack_ = [[JavaUtilStack alloc] init];
    }
    (void) [((JavaUtilStack *) nil_chk(bodyTextStack_)) pushWithId:[((NSString *) nil_chk(bodyText)) trim]];
  }
}

- (void)endWithNSString:(NSString *)namespace_
           withNSString:(NSString *)name {
  if (bodyTextStack_ != nil && ![((JavaUtilStack *) nil_chk(bodyTextStack_)) empty]) {
    IOSObjectArray *parameters = (IOSObjectArray *) [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekParams];
    (void) [((IOSObjectArray *) nil_chk(parameters)) replaceObjectAtIndex:paramIndex_ withObject:[((JavaUtilStack *) nil_chk(bodyTextStack_)) pop]];
  }
}

- (NSString *)description {
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] initWithNSString:@"CallParamRule["];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"paramIndex="];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithInt:paramIndex_];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@", attributeName="];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:attributeName_];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@", from stack="];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithBOOL:fromStack_];
  (void) [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"]"];
  return ([((JavaLangStringBuffer *) nil_chk(sb)) description]);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule class]) {
    OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger_ = [JavaUtilLoggingLogger getLoggerWithNSString:[[IOSClass classWithClass:[OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule class]] getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule *typedCopy = (OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule *) copy;
  typedCopy.attributeName = attributeName_;
  typedCopy.paramIndex = paramIndex_;
  typedCopy.fromStack = fromStack_;
  typedCopy.stackIndex = stackIndex_;
  typedCopy.bodyTextStack = bodyTextStack_;
}

@end
