//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/IEEEremainder.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/EvaluationConstants.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionConstants.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionException.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionHelper.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionResult.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/IEEEremainder.h"

@implementation OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathIEEEremainder

- (NSString *)getName {
  return @"IEEEremainder";
}

- (OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult *)executeWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator
                                                                                                                    withNSString:(NSString *)arguments {
  JavaLangDouble *result = nil;
  JavaUtilArrayList *numbers = [OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionHelper getDoublesWithNSString:arguments withUnichar:OrgOssPdfreporterUsesNetSourceforgeJevalEvaluationConstants_FUNCTION_ARGUMENT_SEPARATOR];
  if ([((JavaUtilArrayList *) nil_chk(numbers)) size] != 2) {
    @throw [[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException alloc] initWithNSString:@"Two numeric arguments are required."];
  }
  @try {
    double argumentOne = [((JavaLangDouble *) [((JavaUtilArrayList *) nil_chk(numbers)) getWithInt:0]) doubleValue];
    double argumentTwo = [((JavaLangDouble *) [((JavaUtilArrayList *) nil_chk(numbers)) getWithInt:1]) doubleValue];
    result = [[JavaLangDouble alloc] initWithDouble:[JavaLangMath IEEEremainderWithDouble:argumentOne withDouble:argumentTwo]];
  }
  @catch (JavaLangException *e) {
    @throw [[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException alloc] initWithNSString:@"Two numeric arguments are required." withJavaLangException:e];
  }
  return [[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult alloc] initWithNSString:[NSString valueOfDouble:[((JavaLangDouble *) nil_chk(result)) doubleValue]] withInt:OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionConstants_FUNCTION_RESULT_TYPE_NUMERIC];
}

- (id)init {
  return [super init];
}

@end
