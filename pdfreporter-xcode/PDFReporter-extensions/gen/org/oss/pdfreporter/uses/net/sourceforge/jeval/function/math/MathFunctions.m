//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/MathFunctions.java
//
//  Created by kendra on 9/27/13.
//

#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/Function.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Abs.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Acos.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Asin.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Atan.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Atan2.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Ceil.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Cos.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Exp.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Floor.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/IEEEremainder.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Log.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/MathFunctions.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Max.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Min.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Pow.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Random.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Rint.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Round.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Sin.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Sqrt.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Tan.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/ToDegrees.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/ToRadians.h"

@implementation OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions

@synthesize functions = functions_;

- (id)init {
  if ((self = [super init])) {
    functions_ = [[JavaUtilArrayList alloc] init];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAbs alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAcos alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAsin alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAtan alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAtan2 alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathCeil alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathCos alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathExp alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathFloor alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathIEEEremainder alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathLog alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMax alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMin alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathPow alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRandom alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRint alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRound alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathSin alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathSqrt alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathTan alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathToDegrees alloc] init]];
    [((id<JavaUtilList>) nil_chk(functions_)) addWithId:[[OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathToRadians alloc] init]];
  }
  return self;
}

- (NSString *)getName {
  return @"numberFunctions";
}

- (id<JavaUtilList>)getFunctions {
  return functions_;
}

- (void)load__WithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator {
  id<JavaUtilIterator> functionIterator = [((id<JavaUtilList>) nil_chk(functions_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(functionIterator)) hasNext]) {
    [((OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *) nil_chk(evaluator)) putFunctionWithOrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction:(id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>) [((id<JavaUtilIterator>) nil_chk(functionIterator)) next]];
  }
}

- (void)unloadWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator {
  id<JavaUtilIterator> functionIterator = [((id<JavaUtilList>) nil_chk(functions_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(functionIterator)) hasNext]) {
    [((OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *) nil_chk(evaluator)) removeFunctionWithNSString:[((id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>) [((id<JavaUtilIterator>) nil_chk(functionIterator)) next]) getName]];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions *typedCopy = (OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions *) copy;
  typedCopy.functions = functions_;
}

@end
