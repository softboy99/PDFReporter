//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/NamedNodeMapImpl.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/NullPointerException.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/DOMException.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/xml/parsers/impl/NamedNodeMapImpl.h"

@implementation OrgOssPdfreporterXmlParsersImplNamedNodeMapImpl

@synthesize map = map_;
@synthesize document = document_;

- (id)initWithOrgOssPdfreporterUsesOrgW3cDomDocument:(id<OrgOssPdfreporterUsesOrgW3cDomDocument>)document {
  if ((self = [super init])) {
    map_ = [[JavaUtilHashMap alloc] init];
    self.document = document;
  }
  return self;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getNamedItemWithNSString:(NSString *)name {
  return [((id<JavaUtilMap>) nil_chk(map_)) getWithId:name];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)setNamedItemWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)arg {
  if (arg == nil) @throw [[JavaLangNullPointerException alloc] init];
  if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(arg)) getOwnerDocument] != document_) @throw [[OrgOssPdfreporterUsesOrgW3cDomDOMException alloc] initWithShortInt:OrgOssPdfreporterUsesOrgW3cDomDOMException_WRONG_DOCUMENT_ERR withNSString:@""];
  return [((id<JavaUtilMap>) nil_chk(map_)) putWithId:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(arg)) getNodeName] withId:arg];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)removeNamedItemWithNSString:(NSString *)name {
  id<OrgOssPdfreporterUsesOrgW3cDomNode> node = [((id<JavaUtilMap>) nil_chk(map_)) removeWithId:name];
  if (node == nil) @throw [[OrgOssPdfreporterUsesOrgW3cDomDOMException alloc] initWithShortInt:OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_FOUND_ERR withNSString:@""];
  return node;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)itemWithInt:(int)index {
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(map_)) values])) iterator];
  int count = 0;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<OrgOssPdfreporterUsesOrgW3cDomNode> node = [((id<JavaUtilIterator>) nil_chk(it)) next];
    if (count++ == index) {
      return node;
    }
  }
  return nil;
}

- (int)getLength {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getNamedItemNSWithNSString:(NSString *)namespaceURI
                                                        withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterUsesOrgW3cDomDOMException alloc] initWithShortInt:OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_SUPPORTED_ERR withNSString:@""];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)setNamedItemNSWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)arg {
  @throw [[OrgOssPdfreporterUsesOrgW3cDomDOMException alloc] initWithShortInt:OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_SUPPORTED_ERR withNSString:@""];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)removeNamedItemNSWithNSString:(NSString *)namespaceURI
                                                           withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterUsesOrgW3cDomDOMException alloc] initWithShortInt:OrgOssPdfreporterUsesOrgW3cDomDOMException_NOT_SUPPORTED_ERR withNSString:@""];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterXmlParsersImplNamedNodeMapImpl *typedCopy = (OrgOssPdfreporterXmlParsersImplNamedNodeMapImpl *) copy;
  typedCopy.map = map_;
  typedCopy.document = document_;
}

@end
