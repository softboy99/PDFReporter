//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/DocumentImpl.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Element.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Text.h"
#include "org/oss/pdfreporter/xml/parsers/impl/DocumentImpl.h"
#include "org/oss/pdfreporter/xml/parsers/impl/ElementImpl.h"
#include "org/oss/pdfreporter/xml/parsers/impl/TextImpl.h"

@implementation OrgOssPdfreporterXmlParsersImplDocumentImpl

@synthesize documentElement = documentElement_;

- (id)init {
  if ((self = [super initWithOrgOssPdfreporterUsesOrgW3cDomDocument:nil withShortInt:OrgOssPdfreporterUsesOrgW3cDomNode_DOCUMENT_NODE withNSString:@"#document" withNSString:nil])) {
    documentElement_ = nil;
  }
  return self;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)newChild {
  if (documentElement_ == nil && [(id) newChild conformsToProtocol: @protocol(OrgOssPdfreporterUsesOrgW3cDomElement)]) {
    documentElement_ = (id<OrgOssPdfreporterUsesOrgW3cDomElement>) newChild;
  }
  return [super appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:newChild];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomDocument>)getOwnerDocument {
  return self;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomElement>)getDocumentElement {
  return documentElement_;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomElement>)createElementWithNSString:(NSString *)tagName {
  return [[OrgOssPdfreporterXmlParsersImplElementImpl alloc] initWithOrgOssPdfreporterUsesOrgW3cDomDocument:self withNSString:tagName];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomText>)createTextNodeWithNSString:(NSString *)data {
  return [[OrgOssPdfreporterXmlParsersImplTextImpl alloc] initWithOrgOssPdfreporterUsesOrgW3cDomDocument:self withNSString:data];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterXmlParsersImplDocumentImpl *typedCopy = (OrgOssPdfreporterXmlParsersImplDocumentImpl *) copy;
  typedCopy.documentElement = documentElement_;
}

@end
