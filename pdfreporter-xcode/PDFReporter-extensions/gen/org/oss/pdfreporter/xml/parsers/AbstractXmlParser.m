//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/AbstractXmlParser.java
//
//  Created by kendra on 9/27/13.
//

#include "org/oss/pdfreporter/xml/parsers/AbstractXmlParser.h"
#include "org/oss/pdfreporter/xml/parsers/IContentHandler.h"
#include "org/oss/pdfreporter/xml/parsers/IInputSource.h"
#include "org/oss/pdfreporter/xml/parsers/XMLEntityResolver.h"
#include "org/oss/pdfreporter/xml/parsers/XMLErrorHandler.h"

@implementation OrgOssPdfreporterXmlParsersAbstractXmlParser

@synthesize validating = validating_;
@synthesize namespaceAware = namespaceAware_;
@synthesize xincludeAware = xincludeAware_;
@synthesize input = input_;
@synthesize contentHandler = contentHandler_;
@synthesize errorHandler = errorHandler_;
@synthesize entityResolver = entityResolver_;

- (id)initWithOrgOssPdfreporterXmlParsersIInputSource:(id<OrgOssPdfreporterXmlParsersIInputSource>)input
       withOrgOssPdfreporterXmlParsersIContentHandler:(id<OrgOssPdfreporterXmlParsersIContentHandler>)handler
                                             withBOOL:(BOOL)validating
                                             withBOOL:(BOOL)namespaceAware
                                             withBOOL:(BOOL)xincludeAware {
  if ((self = [super init])) {
    self.input = input;
    self.contentHandler = handler;
    self.validating = validating;
    self.namespaceAware = namespaceAware;
    self.xincludeAware = xincludeAware;
  }
  return self;
}

- (BOOL)isNamespaceAware {
  return namespaceAware_;
}

- (BOOL)isValidating {
  return validating_;
}

- (BOOL)isXIncludeAware {
  return xincludeAware_;
}

- (void)setEntityResolverWithOrgOssPdfreporterXmlParsersXMLEntityResolver:(id<OrgOssPdfreporterXmlParsersXMLEntityResolver>)entityResolver {
  self.entityResolver = entityResolver;
}

- (void)setErrorHandlerWithOrgOssPdfreporterXmlParsersXMLErrorHandler:(id<OrgOssPdfreporterXmlParsersXMLErrorHandler>)errorHandler {
  self.errorHandler = errorHandler;
}

- (void)setContentHandlerWithOrgOssPdfreporterXmlParsersIContentHandler:(id<OrgOssPdfreporterXmlParsersIContentHandler>)contentHandler {
  self.contentHandler = contentHandler;
}

- (id<OrgOssPdfreporterXmlParsersIInputSource>)getInput {
  return input_;
}

- (id<OrgOssPdfreporterXmlParsersIContentHandler>)getContentHandler {
  return contentHandler_;
}

- (id<OrgOssPdfreporterXmlParsersXMLErrorHandler>)getErrorHandler {
  return errorHandler_;
}

- (id<OrgOssPdfreporterXmlParsersXMLEntityResolver>)getEntityResolver {
  return entityResolver_;
}

- (void)parse {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)parseWithOrgOssPdfreporterXmlParsersIInputSource:(id<OrgOssPdfreporterXmlParsersIInputSource>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterXmlParsersAbstractXmlParser *typedCopy = (OrgOssPdfreporterXmlParsersAbstractXmlParser *) copy;
  typedCopy.validating = validating_;
  typedCopy.namespaceAware = namespaceAware_;
  typedCopy.xincludeAware = xincludeAware_;
  typedCopy.input = input_;
  typedCopy.contentHandler = contentHandler_;
  typedCopy.errorHandler = errorHandler_;
  typedCopy.entityResolver = entityResolver_;
}

@end
