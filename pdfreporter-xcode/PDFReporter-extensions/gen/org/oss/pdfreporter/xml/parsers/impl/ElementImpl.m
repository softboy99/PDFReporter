//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/ElementImpl.java
//
//  Created by kendra on 9/27/13.
//

#include "java/lang/StringBuilder.h"
#include "org/oss/pdfreporter/exception/NotImplementedException.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Attr.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NamedNodeMap.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NodeList.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/TypeInfo.h"
#include "org/oss/pdfreporter/xml/parsers/impl/AttrImpl.h"
#include "org/oss/pdfreporter/xml/parsers/impl/ElementImpl.h"
#include "org/oss/pdfreporter/xml/parsers/impl/NodeImpl.h"

@implementation OrgOssPdfreporterXmlParsersImplElementImpl

- (id)initWithOrgOssPdfreporterUsesOrgW3cDomDocument:(id<OrgOssPdfreporterUsesOrgW3cDomDocument>)owner
                                        withNSString:(NSString *)name {
  return [super initWithOrgOssPdfreporterUsesOrgW3cDomDocument:owner withShortInt:OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE withNSString:name withNSString:nil];
}

- (NSString *)getTagName {
  return [self getNodeName];
}

- (NSString *)getTextContent {
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  id<OrgOssPdfreporterUsesOrgW3cDomNodeList> nodeList = [self getChildNodes];
  for (int i = 0; i < [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(nodeList)) getLength]; i++) {
    id<OrgOssPdfreporterUsesOrgW3cDomNode> node = [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(nodeList)) itemWithInt:i];
    if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getNodeType] != OrgOssPdfreporterUsesOrgW3cDomNode_COMMENT_NODE || [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getNodeType] != OrgOssPdfreporterUsesOrgW3cDomNode_PROCESSING_INSTRUCTION_NODE) {
      NSString *text = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getTextContent];
      if (text != nil) (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:text];
    }
  }
  return [((JavaLangStringBuilder *) nil_chk(sb)) description];
}

- (NSString *)getAttributeWithNSString:(NSString *)name {
  id<OrgOssPdfreporterUsesOrgW3cDomAttr> atribute = [self getAttributeNodeWithNSString:name];
  if (atribute != nil) {
    return [atribute getValue];
  }
  else return @"";
}

- (void)setAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  OrgOssPdfreporterXmlParsersImplAttrImpl *attr = [[OrgOssPdfreporterXmlParsersImplAttrImpl alloc] initWithOrgOssPdfreporterUsesOrgW3cDomDocument:[self getOwnerDocument] withOrgOssPdfreporterUsesOrgW3cDomElement:self withNSString:name withNSString:value];
  (void) [self setAttributeNodeWithOrgOssPdfreporterUsesOrgW3cDomAttr:attr];
}

- (void)removeAttributeWithNSString:(NSString *)name {
  (void) [((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk([self getAttributes])) removeNamedItemWithNSString:name];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomAttr>)getAttributeNodeWithNSString:(NSString *)name {
  return (id<OrgOssPdfreporterUsesOrgW3cDomAttr>) [((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk([self getAttributes])) getNamedItemWithNSString:name];
}

- (BOOL)hasAttributeWithNSString:(NSString *)name {
  return [((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk([self getAttributes])) getNamedItemWithNSString:name] != nil;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomAttr>)setAttributeNodeWithOrgOssPdfreporterUsesOrgW3cDomAttr:(id<OrgOssPdfreporterUsesOrgW3cDomAttr>)newAttr {
  return (id<OrgOssPdfreporterUsesOrgW3cDomAttr>) [((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk([self getAttributes])) setNamedItemWithOrgOssPdfreporterUsesOrgW3cDomNode:newAttr];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomAttr>)removeAttributeNodeWithOrgOssPdfreporterUsesOrgW3cDomAttr:(id<OrgOssPdfreporterUsesOrgW3cDomAttr>)oldAttr {
  return (id<OrgOssPdfreporterUsesOrgW3cDomAttr>) [((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk([self getAttributes])) removeNamedItemWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomAttr>) nil_chk(oldAttr)) getNodeName]];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNodeList>)getElementsByTagNameWithNSString:(NSString *)name {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (NSString *)getAttributeNSWithNSString:(NSString *)namespaceURI
                            withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (void)setAttributeNSWithNSString:(NSString *)namespaceURI
                      withNSString:(NSString *)qualifiedName
                      withNSString:(NSString *)value {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (void)removeAttributeNSWithNSString:(NSString *)namespaceURI
                         withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomAttr>)getAttributeNodeNSWithNSString:(NSString *)namespaceURI
                                                            withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomAttr>)setAttributeNodeNSWithOrgOssPdfreporterUsesOrgW3cDomAttr:(id<OrgOssPdfreporterUsesOrgW3cDomAttr>)newAttr {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNodeList>)getElementsByTagNameNSWithNSString:(NSString *)namespaceURI
                                                                    withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (BOOL)hasAttributeNSWithNSString:(NSString *)namespaceURI
                      withNSString:(NSString *)localName {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (id<OrgOssPdfreporterUsesOrgW3cDomTypeInfo>)getSchemaTypeInfo {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (void)setIdAttributeWithNSString:(NSString *)name
                          withBOOL:(BOOL)isId {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (void)setIdAttributeNSWithNSString:(NSString *)namespaceURI
                        withNSString:(NSString *)localName
                            withBOOL:(BOOL)isId {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

- (void)setIdAttributeNodeWithOrgOssPdfreporterUsesOrgW3cDomAttr:(id<OrgOssPdfreporterUsesOrgW3cDomAttr>)idAttr
                                                        withBOOL:(BOOL)isId {
  @throw [[OrgOssPdfreporterExceptionNotImplementedException alloc] init];
}

@end
