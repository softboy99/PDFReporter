//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: pdfreporter-portable/src/org/oss/pdfreporter/geometry/AffineTransformMatrix.java
//
//  Created by kendra on 9/27/13.
//

#include "IOSFloatArray.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "org/oss/pdfreporter/geometry/AffineTransformMatrix.h"
#include "org/oss/pdfreporter/geometry/factory/IGeometryFactory.h"

@implementation OrgOssPdfreporterGeometryAffineTransformMatrix

@synthesize m = m_;

- (id)initWithFloat:(float)m00
          withFloat:(float)m01
          withFloat:(float)m02
          withFloat:(float)m10
          withFloat:(float)m11
          withFloat:(float)m12 {
  if ((self = [super init])) {
    self.m = [IOSFloatArray arrayWithDimensions:2 lengths:(int[]){ 2, 3 }];
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatRefAtIndex:0]) = m00;
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatRefAtIndex:1]) = m01;
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatRefAtIndex:2]) = m02;
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatRefAtIndex:0]) = m10;
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatRefAtIndex:1]) = m11;
    (*[((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatRefAtIndex:2]) = m12;
  }
  return self;
}

- (float)getM00 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatAtIndex:0];
}

- (float)getM01 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatAtIndex:1];
}

- (float)getM02 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:0])) floatAtIndex:2];
}

- (float)getM10 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatAtIndex:0];
}

- (float)getM11 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatAtIndex:1];
}

- (float)getM12 {
  return [((IOSFloatArray *) nil_chk([((IOSObjectArray *) nil_chk(m_)) objectAtIndex:1])) floatAtIndex:2];
}

+ (OrgOssPdfreporterGeometryAffineTransformMatrix *)getInstanceWithFloat:(float)x
                                                               withFloat:(float)y
       withOrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90Enum:(OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90Enum *)angle {
  float m00 = 1;
  float m01 = 0;
  float m02 = x;
  float m10 = 0;
  float m11 = 1;
  float m12 = y;
  float M0 = m00;
  switch ([angle ordinal]) {
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_DEGREE_90:
    m00 = m01;
    m01 = -M0;
    M0 = m10;
    m10 = m11;
    m11 = -M0;
    m02 = -y * m01 + m02;
    m12 = -x * m10 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_DEGREE_180:
    m00 = -m00;
    m11 = -m11;
    m02 = -x * m00 + m02;
    m12 = -y * m11 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_DEGREE_270:
    m00 = -m01;
    m01 = M0;
    M0 = m10;
    m10 = -m11;
    m11 = M0;
    m02 = -y * m01 + m02;
    m12 = -x * m10 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_DEGREE_360:
    ;
  }
  return [[OrgOssPdfreporterGeometryAffineTransformMatrix alloc] initWithFloat:m00 withFloat:m01 withFloat:m02 withFloat:m10 withFloat:m11 withFloat:m12];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgOssPdfreporterGeometryAffineTransformMatrix *typedCopy = (OrgOssPdfreporterGeometryAffineTransformMatrix *) copy;
  typedCopy.m = m_;
}

@end
