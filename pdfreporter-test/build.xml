<project name="pdfreporter-test" default="unit-test" basedir=".">
	<property name="build.dir"   value="build"/>
    <property name="report.dir"  value="${build.dir}/junit-report"/>
    <property name="src.dir"     value="src"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="data.dir"     value="../pdfreporter-testdata"/>
    <property name="db1.dir"     value="${data.dir}/datasource/northwind-sql-data"/>
    <property name="db2.dir"     value="${data.dir}/datasource/realestate-sql-data"/>
    
	
    
	<property name="user" value="@see authors.txt file"/>
	<property name="version" value="0.9.0"/>
	<property name="spec-title" value="pdfreporter-test"/>
	<property name="impl-title" value="pdfreporter-test RC 1"/>
	<property name="licence" value="GNU LESSER GENERAL PUBLIC LICENSE, Version 3.0"/>
	
 	<import file="${db1.dir}/build.xml"/>
			
    <target name="clean">
    	 <delete dir="${build.dir}"/>
    </target>
    
	
    <path id="application" location="${jar.dir}/${ant.project.name}.jar"/>
	
	<path id="classpath-java-awt">
		<fileset dir="lib">
			<include name="*.jar"/>
			<exclude name="pdfreporter-android.jar"/>
		</fileset>
	</path>
	<path id="classpath-java-portable">
		<fileset dir="lib">
			<include name="*.jar"/>
			<exclude name="pdfreporter-java.jar"/>
		</fileset>
	</path>
					
	<target name="compile">
		<mkdir dir="${classes.dir}"/>
			<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath-java-awt" includeantruntime="false"/>
	</target>

	<target name="jar" depends="compile" description="Builds the jar file.">
		<mkdir dir="${jar.dir}" />
		<tstamp>
			<format property="touch.time" pattern="MM/dd/yyyy"/>
		</tstamp>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Built-by" value="${user}" />
				<attribute name="Licence" value="${licence}" />
				<section name="common">
					<attribute name="Specification-Title" value="${spec-title}" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="Open Software Solutions GmbH" />
					<attribute name="Implementation-Title" value="${impl-title}" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Built-Date" value="${TODAY}" />
					<attribute name="Implementation-Vendor" value="Open Software Solutions GmbH" />
				</section>
			</manifest>
			<fileset dir=".">
				<include name="license.txt" />
			</fileset>
		</jar>
	</target>

	<target name="unit-test" depends="jar">
		<echo message="start junit" />
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${data.dir}/testdata/pdf/java" />
		</delete>
		<mkdir dir="${data.dir}/testdata/pdf/java" />
		<mkdir dir="${report.dir}" />
		<!-- test with awt based implementation -->
		<antcall target="runServerNoWait">
			<param name="basedir" value="${db1.dir}" />
		</antcall>
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="classpath-java-awt" />
				<path refid="application" />
			</classpath>

			<formatter type="xml" />
			<!-- here comes the single tests -->
			<test name="test.org.oss.pdfreporter.ExporterTest"
				haltonfailure="no" outfile="${report.dir}/ExporterTest-Awt" />

		</junit>
		<antcall target="stopServer">
			<param name="basedir" value="${db1.dir}" />
		</antcall>
		<antcall target="runServerNoWait">
			<param name="basedir" value="${db2.dir}" />
		</antcall>

		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="classpath-java-awt" />
				<path refid="application" />
			</classpath>

			<formatter type="xml" />
			<!-- here comes the single tests -->
			<test name="test.org.oss.pdfreporter.RealestateTest"
				haltonfailure="no" outfile="${report.dir}/RealestateTest-Awt" />

		</junit>

		<antcall target="stopServer">
			<param name="basedir" value="${db2.dir}" />
		</antcall>
		<mkdir dir="${data.dir}/testdata/pdf/java/awt" />
		<move todir="${data.dir}/testdata/pdf/java/awt">
			<fileset dir="${data.dir}/testdata/pdf/java">
				<include name="*.pdf" />
			</fileset>
		</move>
		<!-- test with portable implementation -->

		<antcall target="runServerNoWait">
			<param name="basedir" value="${db1.dir}" />
		</antcall>
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="classpath-java-portable" />
				<path refid="application" />
			</classpath>

			<formatter type="xml" />
			<!-- here comes the single tests -->
			<test name="test.org.oss.pdfreporter.ExporterTest"
				haltonfailure="no" outfile="${report.dir}/ExporterTest-Portable" />

		</junit>
		<antcall target="stopServer">
			<param name="basedir" value="${db1.dir}" />
		</antcall>
		<antcall target="runServerNoWait">
			<param name="basedir" value="${db2.dir}" />
		</antcall>

		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<path refid="classpath-java-portable" />
				<path refid="application" />
			</classpath>

			<formatter type="xml" />
			<!-- here comes the single tests -->
			<test name="test.org.oss.pdfreporter.RealestateTest"
				haltonfailure="no" outfile="${report.dir}/RealestateTest-Portable" />

		</junit>

		<antcall target="stopServer">
			<param name="basedir" value="${db2.dir}" />
		</antcall>
		<mkdir dir="${data.dir}/testdata/pdf/java/portable" />
		<move todir="${data.dir}/testdata/pdf/java/portable">
			<fileset dir="${data.dir}/testdata/pdf/java">
				<include name="*.pdf" />
			</fileset>
		</move>

		<echo message="end junit" />
	</target>
	
	<target name="batch-test" depends="jar">
	    <mkdir dir="${report.dir}"/>
	    <junit printsummary="yes" haltonfailure="no">
	    	<classpath>
	    	   <path refid="classpath"/>
	    	   <path refid="application"/>
	    	</classpath>
	    	<formatter type="xml"/>
	    	   	
	      <batchtest fork="yes" todir="${report.dir}">
	        <fileset dir="${src.dir}">
	          <include name="**/*Test*.java"/>
	        </fileset>
	      </batchtest>
	    </junit>
	</target>
	
	<target name="junit-report">
	    <junitreport todir="${report.dir}">
	    	   <fileset dir="${report.dir}" includes="TEST-*.xml"/>
	    	<report todir="${report.dir}"/>
	    </junitreport>
	</target>
	
</project>
